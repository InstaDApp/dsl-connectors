/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2AaveIncentives,
  ConnectV2AaveIncentivesInterface,
} from "../ConnectV2AaveIncentives";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061056d806100206000396000f3fe6080604052600436106100295760003560e01c806306fdde031461002e578063608e630b146100b8575b600080fd5b34801561003a57600080fd5b50610043610212565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561007d578181015183820152602001610065565b50505050905090810190601f1680156100aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610134600480360360808110156100ce57600080fd5b8101906020810181356401000000008111156100e957600080fd5b8201836020820111156100fb57600080fd5b8035906020019184602083028401116401000000008311171561011d57600080fd5b919350915080359060208101359060400135610240565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561017557818101518382015260200161015d565b50505050905090810190601f1680156101a25780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101d55781810151838201526020016101bd565b50505050905090810190601f1680156102025780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60405180604001604052806012815260200171416176652d496e63656e74697665732d763160701b81525081565b606080600061024f85876103f1565b905086610294576040805162461bcd60e51b815260206004820152600e60248201526d696e76616c69642d61737365747360901b604482015290519081900360640190fd5b604051633111e7b360e01b8152602481018290523060448201819052606060048301908152606483018a905273d784927ff2f95ba542bfc824c8a8a98f3495f6b592633111e7b3928c928c92879291908190608401866020870280828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b15801561032a57600080fd5b505af115801561033e573d6000803e3d6000fd5b505050506040513d602081101561035457600080fd5b50519050610362848261048d565b6040518060600160405280602d815260200161050b602d91399250878782878760405160200180806020018581526020018481526020018381526020018281038252878782818152602001925060200280828437600081840152601f19601f82011690508083019250505096505050505050506040516020818303038152906040529150509550959350505050565b6000821561048457738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561045357600080fd5b505af1158015610467573d6000803e3d6000fd5b505050506040513d602081101561047d57600080fd5b5051610486565b815b9392505050565b81156105065760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b1580156104ed57600080fd5b505af1158015610501573d6000803e3d6000fd5b505050505b505056fe4c6f67436c61696d656428616464726573735b5d2c75696e743235362c75696e743235362c75696e7432353629a26469706673582212202e20cd54eecad90171b7265129ef04ebf281a6efd6e2fa1f7762c85cd058f33964736f6c63430007060033";

type ConnectV2AaveIncentivesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2AaveIncentivesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2AaveIncentives__factory extends ContractFactory {
  constructor(...args: ConnectV2AaveIncentivesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2AaveIncentives> {
    return super.deploy(overrides || {}) as Promise<ConnectV2AaveIncentives>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2AaveIncentives {
    return super.attach(address) as ConnectV2AaveIncentives;
  }
  connect(signer: Signer): ConnectV2AaveIncentives__factory {
    return super.connect(signer) as ConnectV2AaveIncentives__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2AaveIncentivesInterface {
    return new utils.Interface(_abi) as ConnectV2AaveIncentivesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2AaveIncentives {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConnectV2AaveIncentives;
  }
}
