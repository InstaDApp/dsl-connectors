/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2PolygonBridge,
  ConnectV2PolygonBridgeInterface,
} from "../ConnectV2PolygonBridge";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "targetDsa",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetDsa",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610905806100206000396000f3fe6080604052600436106100295760003560e01c806306fdde031461002e578063933999fb146100b8575b600080fd5b34801561003a57600080fd5b506100436101d8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561007d578181015183820152602001610065565b50505050905090810190601f1680156100aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100fa600480360360a08110156100ce57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060800135610207565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561013b578181015183820152602001610123565b50505050905090810190601f1680156101685780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561019b578181015183820152602001610183565b50505050905090810190601f1680156101c85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60405180604001604052806013815260200172506f6c79676f6e2d4272696467652d76312e3160681b81525081565b6060806000610216858761063b565b90506001600160a01b03871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156102d157600019811461024c578061024e565b475b905073a0c68c638235ee32657e8f720a23cec1bfc77c776001600160a01b0316634faa8a26828a6040518363ffffffff1660e01b815260040180826001600160a01b031681526020019150506000604051808303818588803b1580156102b357600080fd5b505af11580156102c7573d6000803e3d6000fd5b50505050506105cb565b8660001982146102e15781610354565b604080516370a0823160e01b815230600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b15801561032757600080fd5b505afa15801561033b573d6000803e3d6000fd5b505050506040513d602081101561035157600080fd5b50515b60408051633a9831f160e21b81526001600160a01b038b166004820152905191935060009173a0c68c638235ee32657e8f720a23cec1bfc77c779163ea60c7c4916024808301926020929190829003018186803b1580156103b457600080fd5b505afa1580156103c8573d6000803e3d6000fd5b505050506040513d60208110156103de57600080fd5b50516001600160a01b0316146105275761040d817340ec5b33f54e0e8a33a975908c5ba1c14e5bbbdf846106d7565b73a0c68c638235ee32657e8f720a23cec1bfc77c776001600160a01b031663e3dec8fb8a8a85604051602001808281526020019150506040516020818303038152906040526040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156104bc5781810151838201526020016104a4565b50505050905090810190601f1680156104e95780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561050a57600080fd5b505af115801561051e573d6000803e3d6000fd5b505050506105c9565b6105468173401f6c983ea34274ec46f84d70b31c151321188b846106d7565b60408051638b9e4f9360e01b81526001600160a01b038a811660048301528b16602482015260448101849052905173401f6c983ea34274ec46f84d70b31c151321188b91638b9e4f9391606480830192600092919082900301818387803b1580156105b057600080fd5b505af11580156105c4573d6000803e3d6000fd5b505050505b505b6105d5848261081f565b60405180606001604052806033815260200161089d60339139604080516001600160a01b039a8b166020820152999098168989015260608901919091526080880194909452505060a0808601919091528351808603909101815260c09094019092525091565b600082156106ce57738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561069d57600080fd5b505af11580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b50516106d0565b815b9392505050565b826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561072e57600080fd5b505af192505050801561073f575060015b61081a576040805163095ea7b360e01b81526001600160a01b03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b15801561079257600080fd5b505af11580156107a6573d6000803e3d6000fd5b50505050826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561080157600080fd5b505af1158015610815573d6000803e3d6000fd5b505050505b505050565b81156108985760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b15801561087f57600080fd5b505af1158015610893573d6000803e3d6000fd5b505050505b505056fe4c6f674465706f73697428616464726573732c616464726573732c75696e743235362c75696e743235362c75696e7432353629a264697066735822122001717df613d162671ebd203768a7c0a1de1a09de70f4b20a9322e82879c72eac64736f6c63430007060033";

type ConnectV2PolygonBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2PolygonBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2PolygonBridge__factory extends ContractFactory {
  constructor(...args: ConnectV2PolygonBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2PolygonBridge> {
    return super.deploy(overrides || {}) as Promise<ConnectV2PolygonBridge>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2PolygonBridge {
    return super.attach(address) as ConnectV2PolygonBridge;
  }
  connect(signer: Signer): ConnectV2PolygonBridge__factory {
    return super.connect(signer) as ConnectV2PolygonBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2PolygonBridgeInterface {
    return new utils.Interface(_abi) as ConnectV2PolygonBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2PolygonBridge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConnectV2PolygonBridge;
  }
}
