/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ConnectBasic, ConnectBasicInterface } from "../ConnectBasic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061098f806100206000396000f3fe6080604052600436106100345760003560e01c806306fdde03146100395780634bd3ab82146100c3578063ce88b43914610105575b600080fd5b34801561004557600080fd5b5061004e61013d565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610088578181015183820152602001610070565b50505050905090810190601f1680156100b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610103600480360360a08110156100d957600080fd5b506001600160a01b0381358116916020810135916040820135169060608101359060800135610163565b005b6101036004803603608081101561011b57600080fd5b506001600160a01b0381351690602081013590604081013590606001356102e3565b6040518060400160405280600a81526020016942617369632d76312e3160b01b81525081565b600061016f838661046c565b90506001600160a01b03861673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156101e65760001981146101a557806101a7565b475b6040519091506001600160a01b0385169082156108fc029083906000818181858888f193505050501580156101e0573d6000803e3d6000fd5b50610281565b8560001982146101f65781610269565b604080516370a0823160e01b815230600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b15801561023c57600080fd5b505afa158015610250573d6000803e3d6000fd5b505050506040513d602081101561026657600080fd5b50515b915061027f6001600160a01b0382168684610508565b505b61028b828261055f565b604080518281526020810185905280820184905290516001600160a01b0380871692908916917fbda29dc1242153445159457be3dc12cdc3b4ca777000c536f8a42078b029672d9181900360600190a3505050505050565b60006102ef838561046c565b90506001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146103b5578460001982146103255781610398565b604080516370a0823160e01b815233600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b15801561036b57600080fd5b505afa15801561037f573d6000803e3d6000fd5b505050506040513d602081101561039557600080fd5b50515b91506103af6001600160a01b0382163330856105dc565b5061040f565b803414806103c4575060001981145b61040c576040805162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a590b595d1a195c8b585b5bdd5b9d60621b604482015290519081900360640190fd5b50345b610419828261055f565b604080518281526020810185905280820184905290516001600160a01b038716917f4b2bcb0ca50531683faa51870e1018aa0d7272c7f2acc5399389b0c0493865d9919081900360600190a25050505050565b600082156104ff57738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156104ce57600080fd5b505af11580156104e2573d6000803e3d6000fd5b505050506040513d60208110156104f857600080fd5b5051610501565b815b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261055a90849061063c565b505050565b81156105d85760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b1580156105bf57600080fd5b505af11580156105d3573d6000803e3d6000fd5b505050505b5050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261063690859061063c565b50505050565b6000610691826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106ed9092919063ffffffff16565b80519091501561055a578080602001905160208110156106b057600080fd5b505161055a5760405162461bcd60e51b815260040180806020018281038252602a815260200180610930602a913960400191505060405180910390fd5b60606106fc8484600085610704565b949350505050565b6060824710156107455760405162461bcd60e51b815260040180806020018281038252602681526020018061090a6026913960400191505060405180910390fd5b61074e8561085f565b61079f576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106107dd5780518252601f1990920191602091820191016107be565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461083f576040519150601f19603f3d011682016040523d82523d6000602084013e610844565b606091505b5091509150610854828286610865565b979650505050505050565b3b151590565b60608315610874575081610501565b8251156108845782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108ce5781810151838201526020016108b6565b50505050905090810190601f1680156108fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220527a0a9d850b1cf75e5a158d5acfc6911e85bcad02b0253d7f27dbf371db7d1364736f6c63430007060033";

type ConnectBasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectBasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectBasic__factory extends ContractFactory {
  constructor(...args: ConnectBasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectBasic> {
    return super.deploy(overrides || {}) as Promise<ConnectBasic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectBasic {
    return super.attach(address) as ConnectBasic;
  }
  connect(signer: Signer): ConnectBasic__factory {
    return super.connect(signer) as ConnectBasic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectBasicInterface {
    return new utils.Interface(_abi) as ConnectBasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectBasic {
    return new Contract(address, _abi, signerOrProvider) as ConnectBasic;
  }
}
