/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectCurveThreePool,
  ConnectCurveThreePoolInterface,
} from "../ConnectCurveThreePool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSell",
    type: "event",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052601060808190526f043757276652d33706f6f6c2d76312e360841b60a09081526100319160009190610044565b5034801561003e57600080fd5b506100e5565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261007a57600085556100c0565b82601f1061009357805160ff19168380011785556100c0565b828001600101855582156100c0579182015b828111156100c05782518255916020019190600101906100a5565b506100cc9291506100d0565b5090565b5b808211156100cc57600081556001016100d1565b61097e806100f46000396000f3fe6080604052600436106100295760003560e01c806306fdde031461002e57806345c9acfe146100b8575b600080fd5b34801561003a57600080fd5b50610043610102565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561007d578181015183820152602001610065565b50505050905090810190601f1680156100aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610100600480360360c08110156100ce57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a00135610190565b005b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156101885780601f1061015d57610100808354040283529160200191610188565b820191906000526020600020905b81548152906001019060200180831161016b57829003601f168201915b505050505081565b600061019c83866105a3565b905060006101a861063f565b9050878760001984146101bb578361022e565b604080516370a0823160e01b815230600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b15801561020157600080fd5b505afa158015610215573d6000803e3d6000fd5b505050506040513d602081101561022b57600080fd5b50515b9350806001600160a01b031663095ea7b384866040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561028757600080fd5b505af115801561029b573d6000803e3d6000fd5b505050506000610390836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156102dd57600080fd5b505afa1580156102f1573d6000803e3d6000fd5b505050506040513d602081101561030757600080fd5b50516040805163313ce56760e01b8152905161038b918c91610386916001600160a01b0389169163313ce56791600480820192602092909190829003018186803b15801561035457600080fd5b505afa158015610368573d6000803e3d6000fd5b505050506040513d602081101561037e57600080fd5b50518a610657565b610669565b61069e565b90506000836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156103e157600080fd5b505afa1580156103f5573d6000803e3d6000fd5b505050506040513d602081101561040b57600080fd5b505190506001600160a01b038516633df021246104278d6106af565b6104308f6106af565b89866040518563ffffffff1660e01b81526004018085600f0b815260200184600f0b8152602001838152602001828152602001945050505050600060405180830381600087803b15801561048357600080fd5b505af1158015610497573d6000803e3d6000fd5b505050506000846001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104ea57600080fd5b505afa1580156104fe573d6000803e3d6000fd5b505050506040513d602081101561051457600080fd5b505190506000610524828461077d565b90506105308982610789565b8c6001600160a01b03168e6001600160a01b03167f1cfcd3047f831e194b89f1ca8957ba1aa919764f692e915eef67b5e7a3e71acb838b8e8e6040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505050505050505050505050565b6000821561063657738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561060557600080fd5b505af1158015610619573d6000803e3d6000fd5b505050506040513d602081101561062f57600080fd5b5051610638565b815b9392505050565b73bebc44782c7db0a1a60cb6fe97d0b483032ff1c790565b60006106388284601203600a0a610806565b6000670de0b6b3a764000061068f610681858561080e565b6706f05b59d3b20000610870565b8161069657fe5b049392505050565b600082601203600a0a828161069657fe5b60006001600160a01b038216736b175474e89094c44da98b954eedeac495271d0f14156106de57506000610778565b6001600160a01b03821673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48141561070b57506001610778565b6001600160a01b03821673dac17f958d2ee523a2206206994597c13d831ec7141561073857506002610778565b6040805162461bcd60e51b815260206004820152601060248201526f3a37b5b2b716b737ba16b337bab7321760811b604482015290519081900360640190fd5b919050565b600061063883836108ca565b81156108025760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b1580156107e957600080fd5b505af11580156107fd573d6000803e3d6000fd5b505050505b5050565b600061063883835b60008261081d5750600061086a565b8282028284828161082a57fe5b04146108675760405162461bcd60e51b81526004018080602001828103825260218152602001806109286021913960400191505060405180910390fd5b90505b92915050565b600082820183811015610867576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082821115610921576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220b9947ef06ed088000fb2a5cde12ed2475e8e124d5c0280e7136e975ccbd8174064736f6c63430007060033";

type ConnectCurveThreePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectCurveThreePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectCurveThreePool__factory extends ContractFactory {
  constructor(...args: ConnectCurveThreePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectCurveThreePool> {
    return super.deploy(overrides || {}) as Promise<ConnectCurveThreePool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectCurveThreePool {
    return super.attach(address) as ConnectCurveThreePool;
  }
  connect(signer: Signer): ConnectCurveThreePool__factory {
    return super.connect(signer) as ConnectCurveThreePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectCurveThreePoolInterface {
    return new utils.Interface(_abi) as ConnectCurveThreePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectCurveThreePool {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConnectCurveThreePool;
  }
}
