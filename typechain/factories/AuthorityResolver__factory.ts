/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  AuthorityResolver,
  AuthorityResolverInterface,
} from "../AuthorityResolver";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    name: "LogAddAuth",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    name: "LogRemoveAuth",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class AuthorityResolver__factory {
  static readonly abi = _abi;
  static createInterface(): AuthorityResolverInterface {
    return new utils.Interface(_abi) as AuthorityResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuthorityResolver {
    return new Contract(address, _abi, signerOrProvider) as AuthorityResolver;
  }
}
