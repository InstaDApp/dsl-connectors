/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2InstaPool,
  ConnectV2InstaPoolInterface,
} from "../ConnectV2InstaPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
    ],
    name: "LogFlashBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "token",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenAmts",
        type: "uint256[]",
      },
    ],
    name: "LogFlashMultiBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "token",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenAmts",
        type: "uint256[]",
      },
    ],
    name: "LogFlashMultiPayback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
    ],
    name: "LogFlashPayback",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "route",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "flashBorrowAndCast",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "flashPayback",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "instaPool",
    outputs: [
      {
        internalType: "contract InstaFlashV2Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600e60808190526d496e737461706f6f6c2d76312e3160901b60a090815261002f9160009190610042565b5034801561003c57600080fd5b506100e3565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261007857600085556100be565b82601f1061009157805160ff19168380011785556100be565b828001600101855582156100be579182015b828111156100be5782518255916020019190600101906100a3565b506100ca9291506100ce565b5090565b5b808211156100ca57600081556001016100cf565b610e5c806100f26000396000f3fe60806040526004361061003f5760003560e01c806306fdde0314610044578063213980e81461006f5780638d0a9b1b14610084578063ab4cf22614610097575b600080fd5b34801561005057600080fd5b506100596100b9565b6040516100669190610cf5565b60405180910390f35b61008261007d366004610a9d565b610147565b005b610082610092366004610a06565b610211565b3480156100a357600080fd5b506100ac610405565b6040516100669190610bd6565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561013f5780601f106101145761010080835404028352916020019161013f565b820191906000526020600020905b81548152906001019060200180831161012257829003601f168201915b505050505081565b6000610153838561041d565b9050846001600160a01b03811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561019e57610199732a1739d7f07d40e76852ca8f0d82275aa087992f836104b9565b6101c6565b6101c66001600160a01b038216732a1739d7f07d40e76852ca8f0d82275aa087992f846105a3565b6101d083836105f5565b7f722145682d5be32c0eb23574ce42a7781aa5af1ae945ea524c7581aaed28938f8683604051610201929190610bea565b60405180910390a1505050505050565b604051630b7f436d60e31b81523090635bfa1b689061024890732a1739d7f07d40e76852ca8f0d82275aa087992f90600401610bd6565b600060405180830381600087803b15801561026257600080fd5b505af1158015610276573d6000803e3d6000fd5b50505050600080828060200190518101906102919190610ad5565b9150915060008282732a1739d7f07d40e76852ca8f0d82275aa087992f6040516024016102c093929190610c3a565b60408051601f198184030181529181526020820180516001600160e01b03166324c1324d60e21b179052516301c302e360e41b8152909150732a1739d7f07d40e76852ca8f0d82275aa087992f90631c302e3090610328908a908a908a908790600401610c03565b600060405180830381600087803b15801561034257600080fd5b505af1158015610356573d6000803e3d6000fd5b505050507f43524507078093ea37d17a012f815220749b664408557436a62b3d3a251a9431878760405161038b929190610bea565b60405180910390a160405163e6c09edf60e01b8152309063e6c09edf906103ca90732a1739d7f07d40e76852ca8f0d82275aa087992f90600401610bd6565b600060405180830381600087803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b5050505050505050505050565b732a1739d7f07d40e76852ca8f0d82275aa087992f81565b600082156104b057738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561047f57600080fd5b505af1158015610493573d6000803e3d6000fd5b505050506040513d60208110156104a957600080fd5b50516104b2565b815b9392505050565b8047101561050e576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114610559576040519150601f19603f3d011682016040523d82523d6000602084013e61055e565b606091505b505090508061059e5760405162461bcd60e51b815260040180806020018281038252603a815260200180610d9d603a913960400191505060405180910390fd5b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261059e908490610672565b811561066e5760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b15801561065557600080fd5b505af1158015610669573d6000803e3d6000fd5b505050505b5050565b60006106c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107239092919063ffffffff16565b80519091501561059e578080602001905160208110156106e657600080fd5b505161059e5760405162461bcd60e51b815260040180806020018281038252602a815260200180610dfd602a913960400191505060405180910390fd5b6060610732848460008561073a565b949350505050565b60608247101561077b5760405162461bcd60e51b8152600401808060200182810382526026815260200180610dd76026913960400191505060405180910390fd5b61078485610895565b6107d5576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106108135780518252601f1990920191602091820191016107f4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610875576040519150601f19603f3d011682016040523d82523d6000602084013e61087a565b606091505b509150915061088a82828661089f565b979650505050505050565b803b15155b919050565b606083156108ae5750816104b2565b8251156108be5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109085781810151838201526020016108f0565b50505050905090810190601f1680156109355780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b600061095661095184610d4a565b610d08565b905082815283838301111561096a57600080fd5b6104b2836020830184610d6c565b80356001600160a01b038116811461089a57600080fd5b600082601f83011261099f578081fd5b815160206109af61095183610d2c565b82815281810190858301855b858110156109f9578151880189603f8201126109d5578788fd5b6109e68a8783015160408401610943565b85525092840192908401906001016109bb565b5090979650505050505050565b60008060008060808587031215610a1b578384fd5b610a2485610978565b93506020850135925060408501359150606085013567ffffffffffffffff811115610a4d578182fd5b8501601f81018713610a5d578182fd5b8035610a6b61095182610d4a565b818152886020838501011115610a7f578384fd5b81602084016020830137908101602001929092525092959194509250565b60008060008060808587031215610ab2578384fd5b610abb85610978565b966020860135965060408601359560600135945092505050565b6000806040808486031215610ae8578283fd5b835167ffffffffffffffff80821115610aff578485fd5b818601915086601f830112610b12578485fd5b81516020610b2261095183610d2c565b82815281810190858301895b85811015610b6b57815188018d603f820112610b48578b8cfd5b610b588e878301518c8401610943565b8552509284019290840190600101610b2e565b505091890151919750909450505080831115610b85578384fd5b5050610b938582860161098f565b9150509250929050565b6001600160a01b03169052565b60008151808452610bc2816020860160208601610d6c565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038616825284602083015283604083015260806060830152610c306080830184610baa565b9695505050505050565b60006060820160608352808651808352608085019150602092506080838202860101838901855b83811015610c8f57607f19888403018552610c7d838351610baa565b94860194925090850190600101610c61565b50508581038487015287518082528482019350915081840281018401888501865b84811015610cde57601f19848403018652610ccc838351610baa565b95870195925090860190600101610cb0565b505080955050505050506107326040830184610b9d565b6000602082526104b26020830184610baa565b60405181810167ffffffffffffffff81118282101715610d2457fe5b604052919050565b600067ffffffffffffffff821115610d4057fe5b5060209081020190565b600067ffffffffffffffff821115610d5e57fe5b50601f01601f191660200190565b60005b83811015610d87578181015183820152602001610d6f565b83811115610d96576000848401525b5050505056fe416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220f7b74a3b6a4bef6033a8652de5f1a549fd634eaf2551a5e1deab2abe6e5be8cf64736f6c63430007060033";

type ConnectV2InstaPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2InstaPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2InstaPool__factory extends ContractFactory {
  constructor(...args: ConnectV2InstaPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2InstaPool> {
    return super.deploy(overrides || {}) as Promise<ConnectV2InstaPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2InstaPool {
    return super.attach(address) as ConnectV2InstaPool;
  }
  connect(signer: Signer): ConnectV2InstaPool__factory {
    return super.connect(signer) as ConnectV2InstaPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2InstaPoolInterface {
    return new utils.Interface(_abi) as ConnectV2InstaPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2InstaPool {
    return new Contract(address, _abi, signerOrProvider) as ConnectV2InstaPool;
  }
}
