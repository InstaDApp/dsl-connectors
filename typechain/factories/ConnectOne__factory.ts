/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ConnectOne, ConnectOneInterface } from "../ConnectOne";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSell",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSellMulti",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSellThree",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSellTwo",
    type: "event",
  },
  {
    inputs: [],
    name: "connectorID",
    outputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "distribution",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "disableDexes",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sellMulti",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sellThree",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "distribution",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "disableDexes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sellTwo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052601160808190527018b4b731b41698b83937ba3796bb18971960791b60a090815262000034916000919062000049565b503480156200004257600080fd5b50620000f5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620000815760008555620000cc565b82601f106200009c57805160ff1916838001178555620000cc565b82800160010185558215620000cc579182015b82811115620000cc578251825591602001919060010190620000af565b50620000da929150620000de565b5090565b5b80821115620000da5760008155600101620000df565b611abb80620001056000396000f3fe6080604052600436106100555760003560e01c806306fdde031461005a57806345c9acfe1461008557806356c45b1f1461009a57806390ab67e1146100ad578063dc5bb7cd146100c0578063eb15f781146100d3575b600080fd5b34801561006657600080fd5b5061006f6100f6565b60405161007c9190611943565b60405180910390f35b61009861009336600461157e565b610184565b005b6100986100a83660046114ce565b610225565b6100986100bb3660046115d6565b6102b1565b6100986100ce36600461143b565b6103f0565b3480156100df57600080fd5b506100e8610483565b60405161007c9291906119f7565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561017c5780601f106101515761010080835404028352916020019161017c565b820191906000526020600020905b81548152906001019060200180831161015f57829003601f168201915b505050505081565b60006040518060e00160405280876001600160a01b03168152602001886001600160a01b0316815260200186815260200160008152602001858152602001600067ffffffffffffffff811180156101da57600080fd5b50604051908082528060200260200182016040528015610204578160200160208202803683370190505b5081526020016000815250905061021c81848461048b565b50505050505050565b60006040518060c00160405280886001600160a01b03168152602001896001600160a01b031681526020018781526020016000815260200186815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525090506102a78183610591565b5050505050505050565b6040805161012060208c02808301820190935261010082018c815260009383928f918f9182919086019084908082843760009201829052509385525050602090920191508d908d908161030057fe5b90506020020160208101906103159190611403565b6001600160a01b031681526020018c8c600019810181811061033357fe5b90506020020160208101906103489190611403565b6001600160a01b031681526020018a8152602001600081526020018981526020018888808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208881028281018201909352888252928301929091899189918291850190849080828437600092019190915250505091525090506103e381848461068f565b5050505050505050505050565b60006040518060e001604052808a6001600160a01b031681526020018b6001600160a01b031681526020018981526020016000815260200188815260200187878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060200185905290506104778184846106e8565b50505050505050505050565b600190606290565b600061049b838560400151610747565b905060001981146104ac57806104b7565b83516104b7906107e3565b604085015260006104c6610892565b85516020870151604080890151905163085e2c5b60e01b81529394506001600160a01b0385169363085e2c5b9361050993909290916005906000906004016118c5565b60006040518083038186803b15801561052157600080fd5b505afa158015610535573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261055d91908101906116a9565b60a08701525061056d8186610911565b6060860181905261057f908490610aaf565b61058a858585610b2c565b5050505050565b815160006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156105c557506040830151610631565b816001600160a01b031663095ea7b36105dc610b92565b86604001516040518363ffffffff1660e01b81526004016105fe9291906117cd565b600060405180830381600087803b15801561061857600080fd5b505af115801561062c573d6000803e3d6000fd5b505050505b61063e8460a00151610baa565b6106635760405162461bcd60e51b815260040161065a906119cc565b60405180910390fd5b61066d8482610bf1565b6060850181905261067f908490610aaf565b6106898484610d1a565b50505050565b600061069f838560600151610747565b905060001981146106b057806106bd565b6106bd84602001516107e3565b60608501526106cb84610d80565b608085018190526106dd908390610aaf565b610689848484610f3a565b60006106f8838560400151610747565b905060001981146107095780610714565b8351610714906107e3565b604085015261072a610724610892565b85610911565b6060850181905261073c908390610aaf565b610689848484610f99565b600082156107da57738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b505050506040513d60208110156107d357600080fd5b50516107dc565b815b9392505050565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461088a576040516370a0823160e01b81526001600160a01b038316906370a08231906108359030906004016117b9565b60206040518083038186803b15801561084d57600080fd5b505afa158015610861573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108859190611691565b61088c565b475b92915050565b600061089c610ff2565b6001600160a01b031663f147f88b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c919061141f565b905090565b805160208201516040830151608084015160009392919084906109399084908690859061100a565b905060006001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156109695750816109ca565b60405163095ea7b360e01b81526001600160a01b0386169063095ea7b390610997908b9087906004016117cd565b600060405180830381600087803b1580156109b157600080fd5b505af11580156109c5573d6000803e3d6000fd5b505050505b60006109d5856107e3565b9050886001600160a01b031663e2a7515e83888888888e60a001518f60c001516040518863ffffffff1660e01b8152600401610a16969594939291906118f6565b6020604051808303818588803b158015610a2f57600080fd5b505af1158015610a43573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a689190611691565b506000610a74866107e3565b9050610a808183611045565b975087841115610aa25760405162461bcd60e51b815260040161065a90611976565b5050505050505092915050565b8115610b285760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b158015610b0f57600080fd5b505af1158015610b23573d6000803e3d6000fd5b505050505b5050565b82600001516001600160a01b031683602001516001600160a01b03167f1cfcd3047f831e194b89f1ca8957ba1aa919764f692e915eef67b5e7a3e71acb856060015186604001518686604051610b859493929190611a05565b60405180910390a3505050565b7311111112542d85b3ef69ae05771c2dccff4faa2690565b60208101516000908290610bbc611051565b6001600160e01b031982811691161480610be95750610bd961105b565b6001600160e01b03198281169116145b949350505050565b60008083602001519050600080610c0c838760000151611066565b915091506000610c208288604001516111ae565b90506000610c3b84610c368a60800151856111c0565b6111f5565b90506000610c48866107e3565b90506000610c54610b92565b6001600160a01b0316898b60a00151604051610c70919061179d565b60006040518083038185875af1925050503d8060008114610cad576040519150601f19603f3d011682016040523d82523d6000602084013e610cb2565b606091505b5050905080610cd35760405162461bcd60e51b815260040161065a906119a1565b6000610cde886107e3565b9050610cea8184611045565b985088841115610d0c5760405162461bcd60e51b815260040161065a90611976565b505050505050505092915050565b81600001516001600160a01b031682602001516001600160a01b03167f2ba4d29030af9ce41a7c2a91414527227c7f829ce555a29d2fb87122fd4cc28184606001518560400151600086604051610d749493929190611a05565b60405180910390a35050565b600080826020015190506000836040015190506000846060015190506000610dae8385848960a0015161100a565b90506000610dba610892565b905060006001600160a01b03861673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610dea575082610e4b565b60405163095ea7b360e01b81526001600160a01b0387169063095ea7b390610e1890859088906004016117cd565b600060405180830381600087803b158015610e3257600080fd5b505af1158015610e46573d6000803e3d6000fd5b505050505b6000610e56866107e3565b9050826001600160a01b031663c785139683610e758c60000151611206565b88888e60c001518f60e001516040518763ffffffff1660e01b8152600401610ea195949392919061184e565b6020604051808303818588803b158015610eba57600080fd5b505af1158015610ece573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610ef39190611691565b506000610eff876107e3565b9050610f0b8183611045565b985088851115610f2d5760405162461bcd60e51b815260040161065a90611976565b5050505050505050919050565b82602001516001600160a01b031683604001516001600160a01b03167f240cab0e7aa417dbc708acd992f8ddbe09616063b926f4c45d0cca4621341fff8560000151866080015187606001518787604051610b859594939291906117e6565b82600001516001600160a01b031683602001516001600160a01b03167f8d9bc2a1bde35a10f10d4953a131a84701a1e89707f3a6f359e6a850b5da33fe856060015186604001518686604051610b859493929190611a05565b738d0287afa7755bb5f2efe686aa8d4f0a7bc4ae7f90565b60008060006110198787611066565b91509150600061102982876111ae565b905061103983610c3687846111c0565b98975050505050505050565b60006107dc83836112a2565b623e012960e91b90565b6305d2b6d960e31b90565b6000806001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461110357836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156110c657600080fd5b505afa1580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fe9190611691565b611106565b60125b91506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146111a257826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561116557600080fd5b505afa158015611179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119d9190611691565b6111a5565b60125b90509250929050565b60006107dc8284601203600a0a6112ff565b6000670de0b6b3a76400006111e66111d88585611307565b6706f05b59d3b20000611360565b816111ed57fe5b049392505050565b600082601203600a0a82816111ed57fe5b60606000825167ffffffffffffffff8111801561122257600080fd5b5060405190808252806020026020018201604052801561124c578160200160208202803683370190505b50905060005b835181101561129b5783818151811061126757fe5b602002602001015182828151811061127b57fe5b6001600160a01b0390921660209283029190910190910152600101611252565b5092915050565b6000828211156112f9576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60006107dc83835b6000826113165750600061088c565b8282028284828161132357fe5b04146107dc5760405162461bcd60e51b8152600401808060200182810382526021815260200180611a656021913960400191505060405180910390fd5b6000828201838110156107dc576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008083601f8401126113cb578081fd5b50813567ffffffffffffffff8111156113e2578182fd5b60208301915083602080830285010111156113fc57600080fd5b9250929050565b600060208284031215611414578081fd5b81356107dc81611a4c565b600060208284031215611430578081fd5b81516107dc81611a4c565b60008060008060008060008060006101008a8c031215611459578485fd5b893561146481611a4c565b985060208a013561147481611a4c565b975060408a0135965060608a0135955060808a013567ffffffffffffffff81111561149d578586fd5b6114a98c828d016113ba565b9a9d999c50979a9699979860a08801359760c0810135975060e0013595509350505050565b600080600080600080600060c0888a0312156114e8578283fd5b87356114f381611a4c565b9650602088013561150381611a4c565b95506040880135945060608801359350608088013567ffffffffffffffff8082111561152d578485fd5b818a0191508a601f830112611540578485fd5b81358181111561154e578586fd5b8b602082850101111561155f578586fd5b60208301955080945050505060a0880135905092959891949750929550565b60008060008060008060c08789031215611596578182fd5b86356115a181611a4c565b955060208701356115b181611a4c565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060008060008060008060008060e08b8d0312156115f4578081fd5b8a3567ffffffffffffffff8082111561160b578283fd5b6116178e838f016113ba565b909c509a5060208d0135995060408d0135985060608d013591508082111561163d578283fd5b6116498e838f016113ba565b909850965060808d0135915080821115611661578283fd5b5061166e8d828e016113ba565b9b9e9a9d50989b979a969995989760a08101359660c09091013595509350505050565b6000602082840312156116a2578081fd5b5051919050565b600080604083850312156116bb578182fd5b8251915060208084015167ffffffffffffffff808211156116da578384fd5b818601915086601f8301126116ed578384fd5b8151818111156116f957fe5b8381026040518582820101818110858211171561171257fe5b604052828152858101935084860182860187018b1015611730578788fd5b8795505b83861015611752578051855260019590950194938601938601611734565b508096505050505050509250929050565b6000815180845260208085019450808401835b8381101561179257815187529582019590820190600101611776565b509495945050505050565b600082516117af818460208701611a20565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60a0808252865190820181905260009060209060c0840190828a01845b828110156118285781516001600160a01b031684529284019290840190600101611803565b505050908301969096525060408101939093526060830191909152608090910152919050565b60a0808252865190820181905260009060209060c0840190828a01845b828110156118905781516001600160a01b03168452928401929084019060010161186b565b505050878285015286604085015283810360608501526118b08187611763565b91505082810360808401526110398185611763565b6001600160a01b03958616815293909416602084015260408301919091526060820152608081019190915260a00190565b6001600160a01b03878116825286166020820152604081018590526060810184905260c06080820181905260009061193090830185611763565b90508260a0830152979650505050505050565b6000602082528251806020840152611962816040850160208701611a20565b601f01601f19169190910160400192915050565b602080825260119082015270546f6f206d75636820736c69707061676560781b604082015260600190565b6020808252601190820152700c525b98da0b5cddd85c0b59985a5b1959607a1b604082015260600190565b6020808252601190820152702737ba16b9bbb0b816b33ab731ba34b7b760791b604082015260600190565b918252602082015260400190565b93845260208401929092526040830152606082015260800190565b60005b83811015611a3b578181015183820152602001611a23565b838111156106895750506000910152565b6001600160a01b0381168114611a6157600080fd5b5056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220a846c36404a0d4edef0da524f3cf178d6a95c92095c30562c37453b22cd67e7464736f6c63430007060033";

type ConnectOneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectOneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectOne__factory extends ContractFactory {
  constructor(...args: ConnectOneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectOne> {
    return super.deploy(overrides || {}) as Promise<ConnectOne>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectOne {
    return super.attach(address) as ConnectOne;
  }
  connect(signer: Signer): ConnectOne__factory {
    return super.connect(signer) as ConnectOne__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectOneInterface {
    return new utils.Interface(_abi) as ConnectOneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectOne {
    return new Contract(address, _abi, signerOrProvider) as ConnectOne;
  }
}
