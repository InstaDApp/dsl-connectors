/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ConnectV2Auth, ConnectV2AuthInterface } from "../ConnectV2Auth";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    name: "LogAddAuth",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    name: "LogRemoveAuth",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107ff806100206000396000f3fe6080604052600436106100345760003560e01c806306fdde03146100395780630a3b0a4f146100c357806329092d0e146101c7575b600080fd5b34801561004557600080fd5b5061004e6101ed565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610088578181015183820152602001610070565b50505050905090810190601f1680156100b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100e9600480360360208110156100d957600080fd5b50356001600160a01b0316610212565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561012a578181015183820152602001610112565b50505050905090810190601f1680156101575780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561018a578181015183820152602001610172565b50505050905090810190601f1680156101b75780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6100e9600480360360208110156101dd57600080fd5b50356001600160a01b03166103b9565b60405180604001604052806009815260200168417574682d76312e3160b81b81525081565b6060806001600160a01b038316610266576040805162461bcd60e51b81526020600482015260136024820152724e6f742d76616c69642d617574686f7269747960681b604482015290519081900360640190fd5b60408051632520e7ff60e01b81526001600160a01b0385166004820152905130918291632520e7ff91602480820192602092909190829003018186803b1580156102af57600080fd5b505afa1580156102c3573d6000803e3d6000fd5b505050506040513d60208110156102d957600080fd5b5051156102e95760009350610351565b806001600160a01b0316635bfa1b68856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561033857600080fd5b505af115801561034c573d6000803e3d6000fd5b505050505b5050604080518082018252601b81527f4c6f674164644175746828616464726573732c61646472657373290000000000602080830191909152825133918101919091526001600160a01b03909416848301528151808503830181526060909401909152929050565b60608060016103c66105bc565b11610418576040805162461bcd60e51b815260206004820152601860248201527f52656d6f76696e672d616c6c2d617574686f7269746965730000000000000000604482015290519081900360640190fd5b6001600160a01b038316610469576040805162461bcd60e51b81526020600482015260136024820152724e6f742d76616c69642d617574686f7269747960681b604482015290519081900360640190fd5b60408051632520e7ff60e01b81526001600160a01b0385166004820152905130918291632520e7ff91602480820192602092909190829003018186803b1580156104b257600080fd5b505afa1580156104c6573d6000803e3d6000fd5b505050506040513d60208110156104dc57600080fd5b50511561054f57806001600160a01b031663e6c09edf856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b50505050610554565b600093505b5050604080518082018252601e81527f4c6f6752656d6f76654175746828616464726573732c61646472657373290000602080830191909152825133918101919091526001600160a01b03909416848301528151808503830181526060909401909152929050565b604051636cfaf5e960e01b81526000908190734c8a1beb8a87765788946d6b19c6c6355194abeb90636cfaf5e9906105f89030906004016107a0565b60206040518083038186803b15801561061057600080fd5b505afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610648919061077f565b604051638028a9fd60e01b8152909150734c8a1beb8a87765788946d6b19c6c6355194abeb90638028a9fd906106829084906004016107b4565b60606040518083038186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d2919061071a565b6040015167ffffffffffffffff1691505090565b80516001600160a01b03811681146106fd57600080fd5b919050565b805167ffffffffffffffff811681146106fd57600080fd5b60006060828403121561072b578081fd5b6040516060810181811067ffffffffffffffff8211171561074857fe5b604052610754836106e6565b8152610762602084016106e6565b602082015261077360408401610702565b60408201529392505050565b600060208284031215610790578081fd5b61079982610702565b9392505050565b6001600160a01b0391909116815260200190565b67ffffffffffffffff9190911681526020019056fea2646970667358221220577c881a0b3eafe6950260814449dbc1ea4058787049379bd5a8ac20ad2c22f864736f6c63430007060033";

type ConnectV2AuthConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2AuthConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2Auth__factory extends ContractFactory {
  constructor(...args: ConnectV2AuthConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2Auth> {
    return super.deploy(overrides || {}) as Promise<ConnectV2Auth>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2Auth {
    return super.attach(address) as ConnectV2Auth;
  }
  connect(signer: Signer): ConnectV2Auth__factory {
    return super.connect(signer) as ConnectV2Auth__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2AuthInterface {
    return new utils.Interface(_abi) as ConnectV2AuthInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2Auth {
    return new Contract(address, _abi, signerOrProvider) as ConnectV2Auth;
  }
}
