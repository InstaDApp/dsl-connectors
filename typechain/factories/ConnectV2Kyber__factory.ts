/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2Kyber,
  ConnectV2KyberInterface,
} from "../ConnectV2Kyber";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSell",
    type: "event",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600860808190526725bcb132b916bb1960c11b60a0908152610029916000919061003c565b5034801561003657600080fd5b506100dd565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261007257600085556100b8565b82601f1061008b57805160ff19168380011785556100b8565b828001600101855582156100b8579182015b828111156100b857825182559160200191906001019061009d565b506100c49291506100c8565b5090565b5b808211156100c457600081556001016100c9565b61077d806100ec6000396000f3fe6080604052600436106100295760003560e01c806306fdde031461002e57806345c9acfe146100b8575b600080fd5b34801561003a57600080fd5b506100436101de565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561007d578181015183820152602001610065565b50505050905090810190601f1680156100aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610100600480360360c08110156100ce57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a0013561026c565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610141578181015183820152602001610129565b50505050905090810190601f16801561016e5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101a1578181015183820152602001610189565b50505050905090810190601f1680156101ce5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102645780601f1061023957610100808354040283529160200191610264565b820191906000526020600020905b81548152906001019060200180831161024757829003601f168201915b505050505081565b606080600061027b85886104ae565b905060006001600160a01b03891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156102bf5760001982146102b357816102b5565b475b9150819050610365565b8860001983146102cf5782610342565b604080516370a0823160e01b815230600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b15801561031557600080fd5b505afa158015610329573d6000803e3d6000fd5b505050506040513d602081101561033f57600080fd5b50515b92506103638173818e6fecd516ecc3849daf6845e3ec868087b7558561054a565b505b6040805163cb3c28c760e01b81526001600160a01b038b81166004830152602482018590528c166044820152306064820152600019608482015260a48101899052737284a8451d9a0e7dc62b3a71c0593ea2ec5c563860c4820152905160009173818e6fecd516ecc3849daf6845e3ec868087b7559163cb3c28c791859160e480830192602092919082900301818588803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b50505050506040513d602081101561042e57600080fd5b5051905061043c8682610692565b60405180606001604052806038815260200161071060389139604080516001600160a01b039d8e1660208201529c909b168c8c015260608c019190915260808b01929092525060a0890194909452505060c0808701919091528451808703909101815260e09095019093525090929050565b6000821561054157738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561051057600080fd5b505af1158015610524573d6000803e3d6000fd5b505050506040513d602081101561053a57600080fd5b5051610543565b815b9392505050565b826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156105a157600080fd5b505af19250505080156105b2575060015b61068d576040805163095ea7b360e01b81526001600160a01b03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b15801561060557600080fd5b505af1158015610619573d6000803e3d6000fd5b50505050826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561067457600080fd5b505af1158015610688573d6000803e3d6000fd5b505050505b505050565b811561070b5760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b1580156106f257600080fd5b505af1158015610706573d6000803e3d6000fd5b505050505b505056fe4c6f6753656c6c28616464726573732c616464726573732c75696e743235362c75696e743235362c75696e743235362c75696e7432353629a264697066735822122043d1b19d583bbf2029d3c2d451ca83d2a3075bb5bbc6b41a9d94fca89f309d3764736f6c63430007060033";

type ConnectV2KyberConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2KyberConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2Kyber__factory extends ContractFactory {
  constructor(...args: ConnectV2KyberConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2Kyber> {
    return super.deploy(overrides || {}) as Promise<ConnectV2Kyber>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2Kyber {
    return super.attach(address) as ConnectV2Kyber;
  }
  connect(signer: Signer): ConnectV2Kyber__factory {
    return super.connect(signer) as ConnectV2Kyber__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2KyberInterface {
    return new utils.Interface(_abi) as ConnectV2KyberInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2Kyber {
    return new Contract(address, _abi, signerOrProvider) as ConnectV2Kyber;
  }
}
