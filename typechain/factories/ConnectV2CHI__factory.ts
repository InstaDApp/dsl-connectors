/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ConnectV2CHI, ConnectV2CHIInterface } from "../ConnectV2CHI";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "LogBurn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "LogMint",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260066080819052654348492d763160d01b60a0908152610027916000919061003a565b5034801561003457600080fd5b506100db565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261007057600085556100b6565b82601f1061008957805160ff19168380011785556100b6565b828001600101855582156100b6579182015b828111156100b657825182559160200191906001019061009b565b506100c29291506100c6565b5090565b5b808211156100c257600081556001016100c7565b6105ab806100ea6000396000f3fe6080604052600436106100345760003560e01c806306fdde031461003957806342966c68146100c3578063a0712d68146101be575b600080fd5b34801561004557600080fd5b5061004e6101db565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610088578181015183820152602001610070565b50505050905090810190601f1680156100b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100e0600480360360208110156100d957600080fd5b5035610269565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610121578181015183820152602001610109565b50505050905090810190601f16801561014e5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610181578181015183820152602001610169565b50505050905090810190601f1680156101ae5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6100e0600480360360208110156101d457600080fd5b503561044e565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102615780601f1061023657610100808354040283529160200191610261565b820191906000526020600020905b81548152906001019060200180831161024457829003601f168201915b505050505081565b6060806000600019841461027d57836102f5565b604080516370a0823160e01b815230600482015290516d4946c0e9f43f4dee607b0ef1fa1c916370a08231916024808301926020929190829003018186803b1580156102c857600080fd5b505afa1580156102dc573d6000803e3d6000fd5b505050506040513d60208110156102f257600080fd5b50515b90506d4946c0e9f43f4dee607b0ef1fa1c6001600160a01b031663095ea7b36d4946c0e9f43f4dee607b0ef1fa1c836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561036a57600080fd5b505af115801561037e573d6000803e3d6000fd5b505050506d4946c0e9f43f4dee607b0ef1fa1c6001600160a01b031663d8ccd0f3826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b505050506040513d602081101561040057600080fd5b5050604080518082018252601081526f4c6f674275726e2875696e743235362960801b6020828101919091528251808201949094528251808503909101815292820190915294909350915050565b606080600060001984146104625783610465565b608c5b9050608c8111156104b6576040805162461bcd60e51b81526020600482015260166024820152754d6178206d696e74696e67206973203134302063686960501b604482015290519081900360640190fd5b6d4946c0e9f43f4dee607b0ef1fa1c6001600160a01b031663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561050a57600080fd5b505af115801561051e573d6000803e3d6000fd5b505050506040518060400160405280601081526020016f4c6f674d696e742875696e743235362960801b8152509250806040516020018082815260200191505060405160208183030381529060405291505091509156fea2646970667358221220c4523f13c4a77ba072962635717f5d4d3471214cdf78394a2c3581031a87904064736f6c63430007060033";

type ConnectV2CHIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2CHIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2CHI__factory extends ContractFactory {
  constructor(...args: ConnectV2CHIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2CHI> {
    return super.deploy(overrides || {}) as Promise<ConnectV2CHI>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2CHI {
    return super.attach(address) as ConnectV2CHI;
  }
  connect(signer: Signer): ConnectV2CHI__factory {
    return super.connect(signer) as ConnectV2CHI__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2CHIInterface {
    return new utils.Interface(_abi) as ConnectV2CHIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2CHI {
    return new Contract(address, _abi, signerOrProvider) as ConnectV2CHI;
  }
}
