/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Constants, ConstantsInterface } from "../Constants";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_instaIndex",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "implementationVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instaIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161017f38038061017f83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c60f361008c60003980607e525060f36000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806306bfcec614604157806354fd4d5014605b578063a41098bf146061575b600080fd5b60476072565b6040516052919060b4565b60405180910390f35b60476077565b6067607c565b6040516052919060a0565b600181565b600281565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b0391909116815260200190565b9081526020019056fea2646970667358221220ea2ae0b77ba90f659680041df36f6fa5ee4c518eb8c27e1bc08af942c8d6e20c64736f6c63430007060033";

type ConstantsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConstantsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Constants__factory extends ContractFactory {
  constructor(...args: ConstantsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _instaIndex: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Constants> {
    return super.deploy(_instaIndex, overrides || {}) as Promise<Constants>;
  }
  getDeployTransaction(
    _instaIndex: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_instaIndex, overrides || {});
  }
  attach(address: string): Constants {
    return super.attach(address) as Constants;
  }
  connect(signer: Signer): Constants__factory {
    return super.connect(signer) as Constants__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConstantsInterface {
    return new utils.Interface(_abi) as ConstantsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Constants {
    return new Contract(address, _abi, signerOrProvider) as Constants;
  }
}
