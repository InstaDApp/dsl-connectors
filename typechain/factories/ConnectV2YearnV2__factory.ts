/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2YearnV2,
  ConnectV2YearnV2Interface,
} from "../ConnectV2YearnV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shareAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shareAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610af5806100206000396000f3fe6080604052600436106100345760003560e01c806306fdde03146100395780634532d776146100c3578063ce88b439146101d9575b600080fd5b34801561004557600080fd5b5061004e610211565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610088578181015183820152602001610070565b50505050905090810190601f1680156100b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100fb600480360360808110156100d957600080fd5b506001600160a01b038135169060208101359060408101359060600135610239565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561019c578181015183820152602001610184565b50505050905090810190601f1680156101c95780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6100fb600480360360808110156101ef57600080fd5b506001600160a01b0381351690602081013590604081013590606001356104cf565b6040518060400160405280600c81526020016b0596561726e56322d76312e360a41b81525081565b60608060006102488587610724565b905086600019821461025a57816102cd565b604080516370a0823160e01b815230600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b1580156102a057600080fd5b505afa1580156102b4573d6000803e3d6000fd5b505050506040513d60208110156102ca57600080fd5b50515b91506000816001600160a01b031662f714ce84306040518363ffffffff1660e01b815260040180838152602001826001600160a01b0316815260200192505050602060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b505050506040513d602081101561035157600080fd5b5051905061035f86826107c0565b6000826001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d60208110156103c457600080fd5b505160408051637e062a3560e11b8152905191925060009173c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2916001600160a01b0387169163fc0c546a91600480820192602092909190829003018186803b15801561042357600080fd5b505afa158015610437573d6000803e3d6000fd5b505050506040513d602081101561044d57600080fd5b50516001600160a01b031614905061046681838761083d565b604051806060016040528060348152602001610a8c60349139604080516001600160a01b0390961660208701528581019690965260608501939093525050608082019690965260a0808201959095528151808203909501855260c0019052509194909350915050565b60608060006104de8587610724565b905060008790506000816001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561052057600080fd5b505afa158015610534573d6000803e3d6000fd5b505050506040513d602081101561054a57600080fd5b505190506001600160a01b03811673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2148181156105985760001985146105845784610586565b475b94506105938282876108b2565b61061d565b60001985146105a7578461061a565b604080516370a0823160e01b815230600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b1580156105ed57600080fd5b505afa158015610601573d6000803e3d6000fd5b505050506040513d602081101561061757600080fd5b50515b94505b610628818c87610911565b6000846001600160a01b0316636e553f6587306040518363ffffffff1660e01b815260040180838152602001826001600160a01b0316815260200192505050602060405180830381600087803b15801561068157600080fd5b505af1158015610695573d6000803e3d6000fd5b505050506040513d60208110156106ab57600080fd5b505190506106b989826107c0565b604051806060016040528060338152602001610a5960339139604080516001600160a01b03909e1660208f01528d81019290925260608d019690965260808c01999099525050505060a0808801949094528451808803909401845260c0909601909352509293915050565b600082156107b757738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b505050506040513d60208110156107b057600080fd5b50516107b9565b815b9392505050565b81156108395760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b15801561082057600080fd5b505af1158015610834573d6000803e3d6000fd5b505050505b5050565b82156108ad5761084e828383610911565b816001600160a01b0316632e1a7d4d826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561089457600080fd5b505af11580156108a8573d6000803e3d6000fd5b505050505b505050565b82156108ad57816001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108f357600080fd5b505af1158015610907573d6000803e3d6000fd5b5050505050505050565b826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561096857600080fd5b505af1925050508015610979575060015b6108ad576040805163095ea7b360e01b81526001600160a01b03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b1580156109cc57600080fd5b505af11580156109e0573d6000803e3d6000fd5b50505050826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610a3b57600080fd5b505af1158015610a4f573d6000803e3d6000fd5b505050506108ad56fe4c6f674465706f73697428616464726573732c75696e743235362c75696e743235362c75696e743235362c75696e74323536294c6f67576974686472617728616464726573732c75696e743235362c75696e743235362c75696e743235362c75696e7432353629a2646970667358221220dc73581502d0d10c5014234faefd30c87fcabb5a9f7c3aef4185ec3f55ce0fb864736f6c63430007060033";

type ConnectV2YearnV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2YearnV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2YearnV2__factory extends ContractFactory {
  constructor(...args: ConnectV2YearnV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2YearnV2> {
    return super.deploy(overrides || {}) as Promise<ConnectV2YearnV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2YearnV2 {
    return super.attach(address) as ConnectV2YearnV2;
  }
  connect(signer: Signer): ConnectV2YearnV2__factory {
    return super.connect(signer) as ConnectV2YearnV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2YearnV2Interface {
    return new utils.Interface(_abi) as ConnectV2YearnV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2YearnV2 {
    return new Contract(address, _abi, signerOrProvider) as ConnectV2YearnV2;
  }
}
