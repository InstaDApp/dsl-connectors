/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2BasicArbitrum,
  ConnectV2BasicArbitrumInterface,
} from "../ConnectV2BasicArbitrum";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b05806100206000396000f3fe6080604052600436106100345760003560e01c806306fdde03146100395780634bd3ab82146100c3578063ce88b439146101e1575b600080fd5b34801561004557600080fd5b5061004e610219565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610088578181015183820152602001610070565b50505050905090810190601f1680156100b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610103600480360360a08110156100d957600080fd5b506001600160a01b038135811691602081013591604082013516906060810135906080013561023d565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101a457818101518382015260200161018c565b50505050905090810190601f1680156101d15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b610103600480360360808110156101f757600080fd5b506001600160a01b0381351690602081013590604081013590606001356103e9565b6040518060400160405280600881526020016742617369632d763160c01b81525081565b606080600061024c8588610583565b90506001600160a01b03881673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156102dd5760001981146102825780610284565b475b6040519091506001600160a01b038716908290600081818185875af1925050503d80600081146102d0576040519150601f19603f3d011682016040523d82523d6000602084013e6102d5565b606091505b505050610378565b8760001982146102ed5781610360565b604080516370a0823160e01b815230600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b15801561033357600080fd5b505afa158015610347573d6000803e3d6000fd5b505050506040513d602081101561035d57600080fd5b50515b91506103766001600160a01b038216888461061f565b505b6103828482610676565b604051806060016040528060348152602001610a7260349139604080516001600160a01b039a8b166020820152808201939093529890961660608201526080810194909452505060a0808301919091528451808303909101815260c0909101909352929050565b60608060006103f88587610583565b90506001600160a01b03871673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146104be5786600019821461042e57816104a1565b604080516370a0823160e01b815233600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b15801561047457600080fd5b505afa158015610488573d6000803e3d6000fd5b505050506040513d602081101561049e57600080fd5b50515b91506104b86001600160a01b0382163330856106f3565b50610518565b803414806104cd575060001981145b610515576040805162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a590b595d1a195c8b585b5bdd5b9d60621b604482015290519081900360640190fd5b50345b6105228482610676565b6040518060600160405280602b8152602001610a21602b9139604080516001600160a01b0390991660208a01528881019290925260608801959095526080808801949094528051808803909401845260a09096019095525090939092509050565b600082156106165773c109f7ef06152c3a63dc7254fd861e612d3ac5716001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156105e557600080fd5b505af11580156105f9573d6000803e3d6000fd5b505050506040513d602081101561060f57600080fd5b5051610618565b815b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610671908490610753565b505050565b81156106ef5760408051631878f25160e21b81526004810184905260248101839052905173c109f7ef06152c3a63dc7254fd861e612d3ac571916361e3c94491604480830192600092919082900301818387803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b505050505b5050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261074d908590610753565b50505050565b60006107a8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108049092919063ffffffff16565b805190915015610671578080602001905160208110156107c757600080fd5b50516106715760405162461bcd60e51b815260040180806020018281038252602a815260200180610aa6602a913960400191505060405180910390fd5b6060610813848460008561081b565b949350505050565b60608247101561085c5760405162461bcd60e51b8152600401808060200182810382526026815260200180610a4c6026913960400191505060405180910390fd5b61086585610976565b6108b6576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106108f45780518252601f1990920191602091820191016108d5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610956576040519150601f19603f3d011682016040523d82523d6000602084013e61095b565b606091505b509150915061096b82828661097c565b979650505050505050565b3b151590565b6060831561098b575081610618565b82511561099b5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109e55781810151838201526020016109cd565b50505050905090810190601f168015610a125780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4c6f674465706f73697428616464726573732c75696e743235362c75696e743235362c75696e7432353629416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4c6f67576974686472617728616464726573732c75696e743235362c616464726573732c75696e743235362c75696e74323536295361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220453fa5a034f9a1154ad281a919a9e170d366985c0963857134d65e727488dd0e64736f6c63430007060033";

type ConnectV2BasicArbitrumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2BasicArbitrumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2BasicArbitrum__factory extends ContractFactory {
  constructor(...args: ConnectV2BasicArbitrumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2BasicArbitrum> {
    return super.deploy(overrides || {}) as Promise<ConnectV2BasicArbitrum>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2BasicArbitrum {
    return super.attach(address) as ConnectV2BasicArbitrum;
  }
  connect(signer: Signer): ConnectV2BasicArbitrum__factory {
    return super.connect(signer) as ConnectV2BasicArbitrum__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2BasicArbitrumInterface {
    return new utils.Interface(_abi) as ConnectV2BasicArbitrumInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2BasicArbitrum {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConnectV2BasicArbitrum;
  }
}
