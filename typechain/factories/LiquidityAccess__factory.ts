/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LiquidityAccess,
  LiquidityAccessInterface,
} from "../LiquidityAccess";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogDepositLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogFlashBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeCollected",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogFlashPayback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "originFeeAmt",
        type: "uint256",
      },
    ],
    name: "LogOriginFeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogWithdrawLiquidity",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "addFeeAmount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorID",
    outputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "flashBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "flashPayback",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "flashPaybackOrigin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a7e806100206000396000f3fe6080604052600436106100705760003560e01c80635aedbd681161004e5780635aedbd68146100b057806362c587ef146100c3578063ce88b439146100d6578063eb15f781146100e957610070565b80630f65e079146100755780632925a4f51461008a5780634532d7761461009d575b600080fd5b61008861008336600461166a565b610115565b005b61008861009836600461169e565b6102a5565b6100886100ab36600461169e565b6102f9565b6100886100be36600461169e565b61048f565b6100886100d1366004611625565b6105ac565b6100886100e436600461169e565b61077e565b3480156100f557600080fd5b506100fe610a6c565b60405161010c929190611938565b60405180910390f35b600061011f610a74565b90506000816001600160a01b03166384a0e58f866040518263ffffffff1660e01b815260040161014f9190611753565b60206040518083038186803b15801561016757600080fd5b505afa15801561017b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019f91906116f8565b9050846000806101af8385610a8c565b604080516001808252818301909252929450909250600091906020808301908036833701905050905088816000815181106101e657fe5b60200260200101906001600160a01b031690816001600160a01b031681525050610211868587610c01565b60405163030ecdeb60e21b81526001600160a01b03871690630c3b37ac9061023d9084906004016117fd565b600060405180830381600087803b15801561025757600080fd5b505af115801561026b573d6000803e3d6000fd5b50505050600082111561028357610283838584610c01565b61028d8786610c77565b61029a8986848b8b610ce4565b505050505050505050565b60006102b18385610d69565b9050806102d95760405162461bcd60e51b81526004016102d090611894565b60405180910390fd5b60006102e58683610e04565b90506102f18382610c77565b505050505050565b60006103058385610d69565b905061030f610a74565b6001600160a01b031663f3fef3a386836040518363ffffffff1660e01b815260040161033c929190611790565b600060405180830381600087803b15801561035657600080fd5b505af115801561036a573d6000803e3d6000fd5b505050506103788282610c77565b846001600160a01b03167f9ff4cb7f3b4986a113dbb55a03744331895ce0f50a84928bd60a323e213a82ab8285856040516103b5939291906119af565b60405180910390a26040517f9ff4cb7f3b4986a113dbb55a03744331895ce0f50a84928bd60a323e213a82ab906000906103f99088908590889088906020016117a9565b6040516020818303038152906040529050600080610415610a6c565b91509150610421610f39565b6001600160a01b031663e14d4fb1838387876040518563ffffffff1660e01b81526004016104529493929190611946565b600060405180830381600087803b15801561046c57600080fd5b505af1158015610480573d6000803e3d6000fd5b50505050505050505050505050565b600061049b8385610d69565b604080516001808252818301909252919250600091906020808301908036833701905050905085816000815181106104cf57fe5b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050828160008151811061051a57fe5b60200260200101818152505061052e610a74565b6001600160a01b0316632a9dcb0683836040518363ffffffff1660e01b815260040161055b929190611810565b600060405180830381600087803b15801561057557600080fd5b505af1158015610589573d6000803e3d6000fd5b505050506105978484610c77565b6105a387848787610f51565b50505050505050565b6001600160a01b0384166105d25760405162461bcd60e51b81526004016102d090611866565b60006105dc610a74565b90506000816001600160a01b03166384a0e58f866040518263ffffffff1660e01b815260040161060c9190611753565b60206040518083038186803b15801561062457600080fd5b505afa158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c91906116f8565b9050846000808061066d8486611067565b6040805160018082528183019092529396509194509250600091906020808301908036833701905050905089816000815181106106a657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506106d1878688610c01565b60405163030ecdeb60e21b81526001600160a01b03881690630c3b37ac906106fd9084906004016117fd565b600060405180830381600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b50505050600083111561074e57610743848685610c01565b61074e8b8684610c01565b6107588887610c77565b6107658a87858c8c610ce4565b6107718b8b88856110b7565b5050505050505050505050565b600061078a8385610d69565b90506000610796611140565b6001600160a01b0316866001600160a01b031614156107ca5760001982146107be57816107c0565b475b91508190506108e2565b8560001983146107da5782610856565b6040516370a0823160e01b81526001600160a01b038216906370a0823190610806903090600401611753565b60206040518083038186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085691906116f8565b9250806001600160a01b031663095ea7b361086f610a74565b856040518363ffffffff1660e01b815260040161088d929190611790565b602060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df91906116d8565b50505b6108ea610a74565b6001600160a01b03166347e7ef248288856040518463ffffffff1660e01b8152600401610918929190611790565b6000604051808303818588803b15801561093157600080fd5b505af1158015610945573d6000803e3d6000fd5b50505050506109548383610c77565b856001600160a01b03167f14f2c3630383ff6f8febe0920fe216fdd5215bad47bc4330529f4dec17994603838686604051610991939291906119af565b60405180910390a26040517f14f2c3630383ff6f8febe0920fe216fdd5215bad47bc4330529f4dec17994603906000906109d59089908690899089906020016117a9565b60405160208183030381529060405290506000806109f1610a6c565b915091506109fd610f39565b6001600160a01b031663e14d4fb1838387876040518563ffffffff1660e01b8152600401610a2e9493929190611946565b600060405180830381600087803b158015610a4857600080fd5b505af1158015610a5c573d6000803e3d6000fd5b5050505050505050505050505050565b600190602190565b7306cb7c24990cbe6b9f99982f975f9147c000fec690565b6000806000610a99611158565b90506000816001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad657600080fd5b505afa158015610aea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0e91906116f8565b9050816001600160a01b031663c415b95c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b4957600080fd5b505afa158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b819190611609565b935080610b915760009250610bf8565b610b9b8582611170565b92506000610ba986856111a5565b90506000610bb6886111ce565b9050600a8203811015610bdb5760405162461bcd60e51b81526004016102d090611903565b818111610bf157610bec8188611278565b610bf3565b845b945050505b50509250929050565b610c09611140565b6001600160a01b0316826001600160a01b031614610c3a57610c356001600160a01b038316848361129b565b610c72565b6040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610c70573d6000803e3d6000fd5b505b505050565b8115610ce057610c856112ed565b6001600160a01b03166361e3c94483836040518363ffffffff1660e01b8152600401610cb2929190611938565b600060405180830381600087803b158015610ccc57600080fd5b505af11580156102f1573d6000803e3d6000fd5b5050565b846001600160a01b03167f718f2debe25ea9b628399a4db9e7a36b83b97b62308695be0df1b3f257582c9285858585604051610d2394939291906119c5565b60405180910390a26040517f718f2debe25ea9b628399a4db9e7a36b83b97b62308695be0df1b3f257582c92906000906103f990889088908890889088906020016117cf565b60008215610dfb57610d796112ed565b6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b8152600401610da4919061192f565b602060405180830381600087803b158015610dbe57600080fd5b505af1158015610dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df691906116f8565b610dfd565b815b9392505050565b600080610e0f611158565b6001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b158015610e4757600080fd5b505afa158015610e5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7f91906116f8565b90506000610e8b610a74565b6001600160a01b03166384a0e58f866040518263ffffffff1660e01b8152600401610eb69190611753565b60206040518083038186803b158015610ece57600080fd5b505afa158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0691906116f8565b905081610f1557839250610f31565b6000610f218284611170565b9050610f2d85826111a5565b9350505b505092915050565b732af7ea6cb911035f3eb1ed895cb6692c39ecba9790565b836001600160a01b03167f019cbd45a253e15f12114d2ec3b4ff4029bbb4d9d484c003b11a06c358b5923c848484604051610f8e939291906119af565b60405180910390a26040517f019cbd45a253e15f12114d2ec3b4ff4029bbb4d9d484c003b11a06c358b5923c90600090610fd29087908790879087906020016117a9565b6040516020818303038152906040529050600080610fee610a6c565b91509150610ffa610f39565b6001600160a01b031663e14d4fb1838387876040518563ffffffff1660e01b815260040161102b9493929190611946565b600060405180830381600087803b15801561104557600080fd5b505af1158015611059573d6000803e3d6000fd5b505050505050505050505050565b6000806000806110778686610a8c565b90945090508061108e5760009250600091506110af565b6110a0816702c68af0bb140000611170565b91506110ac8183611278565b92505b509250925092565b826001600160a01b0316846001600160a01b03167f052e745f308c35fe80c9dae44eed9043ab6e2fbadf46f56fa11dba91992ab32a84846040516110fc929190611938565b60405180910390a36040517f052e745f308c35fe80c9dae44eed9043ab6e2fbadf46f56fa11dba91992ab32a90600090610fd2908790879087908790602001611767565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90565b73aaa91046c1d1a210017e36394c83bd5070dadda590565b6000670de0b6b3a76400006111966111888585611305565b6706f05b59d3b200006111a5565b8161119d57fe5b049392505050565b808201828110156111c85760405162461bcd60e51b81526004016102d0906118b6565b92915050565b60006111d8611140565b6001600160a01b0316826001600160a01b031614611271576040516370a0823160e01b81526001600160a01b038316906370a082319061121c903090600401611753565b60206040518083038186803b15801561123457600080fd5b505afa158015611248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126c91906116f8565b6111c8565b4792915050565b808203828111156111c85760405162461bcd60e51b81526004016102d0906118dd565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c7290849061133c565b738a5419cfc711b2343c17a6abf4b2bafabb06957f90565b60008115806113205750508082028282828161131d57fe5b04145b6111c85760405162461bcd60e51b81526004016102d0906118b6565b6000611391826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113ed9092919063ffffffff16565b805190915015610c72578080602001905160208110156113b057600080fd5b5051610c725760405162461bcd60e51b815260040180806020018281038252602a815260200180611a1f602a913960400191505060405180910390fd5b60606113fc8484600085611404565b949350505050565b6060824710156114455760405162461bcd60e51b81526004018080602001828103825260268152602001806119f96026913960400191505060405180910390fd5b61144e8561155f565b61149f576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106114dd5780518252601f1990920191602091820191016114be565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461153f576040519150601f19603f3d011682016040523d82523d6000602084013e611544565b606091505b5091509150611554828286611565565b979650505050505050565b3b151590565b60608315611574575081610dfd565b8251156115845782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115ce5781810151838201526020016115b6565b50505050905090810190601f1680156115fb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60006020828403121561161a578081fd5b8151610dfd816119e0565b6000806000806080858703121561163a578283fd5b8435611645816119e0565b93506020850135611655816119e0565b93969395505050506040820135916060013590565b60008060006060848603121561167e578283fd5b8335611689816119e0565b95602085013595506040909401359392505050565b600080600080608085870312156116b3578384fd5b84356116be816119e0565b966020860135965060408601359560600135945092505050565b6000602082840312156116e9578081fd5b81518015158114610dfd578182fd5b600060208284031215611709578081fd5b5051919050565b6000815180845260208085019450808401835b838110156117485781516001600160a01b031687529582019590820190600101611723565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6001600160a01b03959095168552602085019390935260408401919091526060830152608082015260a00190565b600060208252610dfd6020830184611710565b6000604082526118236040830185611710565b828103602084810191909152845180835285820192820190845b818110156118595784518352938301939183019160010161183d565b5090979650505050505050565b6020808252601490820152736f726967696e2d69732d6164647265737328302960601b604082015260600190565b6020808252600890820152670616d742d69732d360c41b604082015260600190565b6020808252600d908201526c6d6174682d6e6f742d7361666560981b604082015260600190565b6020808252600c908201526b7375622d6f766572666c6f7760a01b604082015260600190565b6020808252601290820152714e6f742d656e6f7567682d62616c616e636560701b604082015260600190565b90815260200190565b918252602082015260400190565b600085825260208581840152846040840152608060608401528351806080850152825b818110156119855785810183015185820160a001528201611969565b81811115611996578360a083870101525b50601f01601f19169290920160a0019695505050505050565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b6001600160a01b03811681146119f557600080fd5b5056fe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220748f2338ef08e3a3c7e9b48ce9439c523c6f33e4a4d91ef21475f994ee5f012564736f6c63430007060033";

type LiquidityAccessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityAccessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityAccess__factory extends ContractFactory {
  constructor(...args: LiquidityAccessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityAccess> {
    return super.deploy(overrides || {}) as Promise<LiquidityAccess>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityAccess {
    return super.attach(address) as LiquidityAccess;
  }
  connect(signer: Signer): LiquidityAccess__factory {
    return super.connect(signer) as LiquidityAccess__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityAccessInterface {
    return new utils.Interface(_abi) as LiquidityAccessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityAccess {
    return new Contract(address, _abi, signerOrProvider) as LiquidityAccess;
  }
}
