/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2StakeGUNI,
  ConnectV2StakeGUNIInterface,
} from "../ConnectV2StakeGUNI";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakingPool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogClaimedReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakingPool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakingPool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setIdAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setIdReward",
        type: "uint256",
      },
    ],
    name: "LogWithdrawAndClaimedReward",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setIdAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setIdReward",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ce3806100206000396000f3fe60806040526004361061003f5760003560e01c806306fdde0314610044578063174e31c41461006f57806378401ec814610090578063933999fb146100a3575b600080fd5b34801561005057600080fd5b506100596100b6565b6040516100669190610bbb565b60405180910390f35b61008261007d366004610a99565b6100e2565b604051610066929190610bce565b61008261009e366004610a45565b6102ce565b6100826100b13660046109f9565b6105ac565b6040518060400160405280601081526020016f5374616b652d472d554e492d76312e3160801b81525081565b6040516370a0823160e01b815260609081908490600090736f40d4a6237c257fff2db00fa0510deeecd303eb906370a0823190610123903090600401610b25565b60206040518083038186803b15801561013b57600080fd5b505afa15801561014f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101739190610ac2565b9050816001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101b057600080fd5b505af11580156101c4573d6000803e3d6000fd5b50506040516370a0823160e01b815260009250736f40d4a6237c257fff2db00fa0510deeecd303eb91506370a0823190610202903090600401610b25565b60206040518083038186803b15801561021a57600080fd5b505afa15801561022e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102529190610ac2565b90506000610260828461070f565b905061026c8782610722565b604051806060016040528060318152602001610c0660319139955087736f40d4a6237c257fff2db00fa0510deeecd303eb82896040516020016102b29493929190610b39565b6040516020818303038152906040529450505050509250929050565b60608060006102dd868861079f565b90508860001982146102ef578161036b565b6040516370a0823160e01b81526001600160a01b038216906370a082319061031b903090600401610b25565b60206040518083038186803b15801561033357600080fd5b505afa158015610347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036b9190610ac2565b6040516370a0823160e01b8152909250600090736f40d4a6237c257fff2db00fa0510deeecd303eb906370a08231906103a8903090600401610b25565b60206040518083038186803b1580156103c057600080fd5b505afa1580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f89190610ac2565b604051632e1a7d4d60e01b81529091506001600160a01b03831690632e1a7d4d90610427908690600401610bfc565b600060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b50505050816001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561049457600080fd5b505af11580156104a8573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506105409150736f40d4a6237c257fff2db00fa0510deeecd303eb906370a08231906104ea903090600401610b25565b60206040518083038186803b15801561050257600080fd5b505afa158015610516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053a9190610ac2565b8361070f565b905061054c8885610722565b6105568782610722565b6040518060800160405280604c8152602001610c62604c913995508b84828b8b8b60405160200161058c96959493929190610b88565b604051602081830303815290604052945050505050965096945050505050565b60608060006105bb858761079f565b9050878760001983146105ce578261064a565b6040516370a0823160e01b81526001600160a01b038216906370a08231906105fa903090600401610b25565b60206040518083038186803b15801561061257600080fd5b505afa158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a9190610ac2565b9250610657818385610838565b60405163534a7e1d60e11b81526001600160a01b0383169063a694fc3a90610683908690600401610bfc565b600060405180830381600087803b15801561069d57600080fd5b505af11580156106b1573d6000803e3d6000fd5b505050506106bf8684610722565b6040518060600160405280602b8152602001610c37602b91399450898388886040516020016106f19493929190610b62565b60405160208183030381529060405293505050509550959350505050565b600061071b8383610980565b9392505050565b811561079b5760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b15801561078257600080fd5b505af1158015610796573d6000803e3d6000fd5b505050505b5050565b6000821561083257738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561080157600080fd5b505af1158015610815573d6000803e3d6000fd5b505050506040513d602081101561082b57600080fd5b505161071b565b50919050565b826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561088f57600080fd5b505af19250505080156108a0575060015b61097b576040805163095ea7b360e01b81526001600160a01b03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b1580156108f357600080fd5b505af1158015610907573d6000803e3d6000fd5b50505050826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561096257600080fd5b505af1158015610976573d6000803e3d6000fd5b505050505b505050565b6000828211156109d7576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b80356001600160a01b03811681146109f457600080fd5b919050565b600080600080600060a08688031215610a10578081fd5b610a19866109dd565b9450610a27602087016109dd565b94979496505050506040830135926060810135926080909101359150565b60008060008060008060c08789031215610a5d578081fd5b610a66876109dd565b9550610a74602088016109dd565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060408385031215610aab578182fd5b610ab4836109dd565b946020939093013593505050565b600060208284031215610ad3578081fd5b5051919050565b60008151808452815b81811015610aff57602081850181015186830182015201610ae3565b81811115610b105782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6001600160a01b03969096168652602086019490945260408501929092526060840152608083015260a082015260c00190565b60006020825261071b6020830184610ada565b600060408252610be16040830185610ada565b8281036020840152610bf38185610ada565b95945050505050565b9081526020019056fe4c6f67436c61696d656452657761726428616464726573732c616464726573732c75696e743235362c75696e74323536294c6f674465706f73697428616464726573732c75696e743235362c75696e743235362c75696e74323536294c6f675769746864726177416e64436c61696d656452657761726428616464726573732c75696e743235362c75696e743235362c75696e743235362c75696e743235362c75696e7432353629a2646970667358221220b97fbcd4ed7c5387dbdff8bf01abbe5349dd48b9193c3c83610a29847c6ba66864736f6c63430007060033";

type ConnectV2StakeGUNIConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2StakeGUNIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2StakeGUNI__factory extends ContractFactory {
  constructor(...args: ConnectV2StakeGUNIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2StakeGUNI> {
    return super.deploy(overrides || {}) as Promise<ConnectV2StakeGUNI>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2StakeGUNI {
    return super.attach(address) as ConnectV2StakeGUNI;
  }
  connect(signer: Signer): ConnectV2StakeGUNI__factory {
    return super.connect(signer) as ConnectV2StakeGUNI__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2StakeGUNIInterface {
    return new utils.Interface(_abi) as ConnectV2StakeGUNIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2StakeGUNI {
    return new Contract(address, _abi, signerOrProvider) as ConnectV2StakeGUNI;
  }
}
