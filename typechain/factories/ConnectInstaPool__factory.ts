/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectInstaPool,
  ConnectInstaPoolInterface,
} from "../ConnectInstaPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogDepositLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogFlashBorrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeCollected",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogFlashPayback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "originFeeAmt",
        type: "uint256",
      },
    ],
    name: "LogOriginFeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogWithdrawLiquidity",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "addFeeAmount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorID",
    outputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "flashBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "getId",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "setId",
        type: "uint256[]",
      },
    ],
    name: "flashMultiBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "getId",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "setId",
        type: "uint256[]",
      },
    ],
    name: "flashMultiPayback",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "getId",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "setId",
        type: "uint256[]",
      },
    ],
    name: "flashMultiPaybackOrigin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "flashPayback",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "flashPaybackOrigin",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600e60808190526d496e737461506f6f6c2d76322e3160901b60a090815262000031916000919062000046565b503480156200003f57600080fd5b50620000f2565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200007e5760008555620000c9565b82601f106200009957805160ff1916838001178555620000c9565b82800160010185558215620000c9579182015b82811115620000c9578251825591602001919060010190620000ac565b50620000d7929150620000db565b5090565b5b80821115620000d75760008155600101620000dc565b6123e280620001026000396000f3fe60806040526004361061009c5760003560e01c80635aedbd68116100645780635aedbd681461011a57806362c587ef1461012d578063b737f01b14610140578063ce88b43914610153578063eaef2b7614610166578063eb15f781146101795761009c565b806306fdde03146100a15780630f65e079146100cc5780631690991c146100e15780632925a4f5146100f45780634532d77614610107575b600080fd5b3480156100ad57600080fd5b506100b661019c565b6040516100c391906121fb565b60405180910390f35b6100df6100da366004611dd7565b61022a565b005b6100df6100ef366004611edb565b6103ba565b6100df610102366004611e0b565b610575565b6100df610115366004611e0b565b6105c9565b6100df610128366004611e0b565b61075f565b6100df61013b366004611ce9565b61087c565b6100df61014e366004611e45565b610a41565b6100df610161366004611e0b565b610c33565b6100df610174366004611d2e565b610f21565b34801561018557600080fd5b5061018e611107565b6040516100c39291906122e0565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156102225780601f106101f757610100808354040283529160200191610222565b820191906000526020600020905b81548152906001019060200180831161020557829003601f168201915b505050505081565b600061023461110f565b90506000816001600160a01b03166384a0e58f866040518263ffffffff1660e01b815260040161026491906120cc565b60206040518083038186803b15801561027c57600080fd5b505afa158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b49190611fba565b9050846000806102c48385611127565b604080516001808252818301909252929450909250600091906020808301908036833701905050905088816000815181106102fb57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505061032686858761129c565b60405163030ecdeb60e21b81526001600160a01b03871690630c3b37ac906103529084906004016121ba565b600060405180830381600087803b15801561036c57600080fd5b505af1158015610380573d6000803e3d6000fd5b5050505060008211156103985761039883858461129c565b6103a28786611312565b6103af8986848b8b61137f565b505050505050505050565b8660008167ffffffffffffffff811180156103d457600080fd5b506040519080825280602002602001820160405280156103fe578160200160208202803683370190505b50905060005b828110156104595761043a87878381811061041b57fe5b905060200201358a8a8481811061042e57fe5b90506020020135611404565b82828151811061044657fe5b6020908102919091010152600101610404565b5061046261110f565b6001600160a01b0316632a9dcb068b8b846040518463ffffffff1660e01b81526004016104919392919061218a565b600060405180830381600087803b1580156104ab57600080fd5b505af11580156104bf573d6000803e3d6000fd5b5050505060005b82811015610568576104fd8585838181106104dd57fe5b905060200201358383815181106104f057fe5b6020026020010151611312565b6105608b8b8381811061050c57fe5b90506020020160208101906105219190611cb1565b83838151811061052d57fe5b602002602001015189898581811061054157fe5b9050602002013588888681811061055457fe5b9050602002013561149f565b6001016104c6565b5050505050505050505050565b60006105818385611404565b9050806105a95760405162461bcd60e51b81526004016105a09061223c565b60405180910390fd5b60006105b58683611579565b90506105c18382611312565b505050505050565b60006105d58385611404565b90506105df61110f565b6001600160a01b031663f3fef3a386836040518363ffffffff1660e01b815260040161060c929190612109565b600060405180830381600087803b15801561062657600080fd5b505af115801561063a573d6000803e3d6000fd5b505050506106488282611312565b846001600160a01b03167f9ff4cb7f3b4986a113dbb55a03744331895ce0f50a84928bd60a323e213a82ab82858560405161068593929190612313565b60405180910390a26040517f9ff4cb7f3b4986a113dbb55a03744331895ce0f50a84928bd60a323e213a82ab906000906106c9908890859088908890602001612122565b60405160208183030381529060405290506000806106e5611107565b915091506106f16116ae565b6001600160a01b031663e14d4fb1838387876040518563ffffffff1660e01b815260040161072294939291906122ee565b600060405180830381600087803b15801561073c57600080fd5b505af1158015610750573d6000803e3d6000fd5b50505050505050505050505050565b600061076b8385611404565b6040805160018082528183019092529192506000919060208083019080368337019050509050858160008151811061079f57fe5b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905082816000815181106107ea57fe5b6020026020010181815250506107fe61110f565b6001600160a01b0316632a9dcb0683836040518363ffffffff1660e01b815260040161082b9291906121cd565b600060405180830381600087803b15801561084557600080fd5b505af1158015610859573d6000803e3d6000fd5b505050506108678484611312565b6108738784878761149f565b50505050505050565b6001600160a01b0384166108a25760405162461bcd60e51b81526004016105a09061220e565b60006108ac61110f565b90506000816001600160a01b03166384a0e58f866040518263ffffffff1660e01b81526004016108dc91906120cc565b60206040518083038186803b1580156108f457600080fd5b505afa158015610908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c9190611fba565b9050846000808061093d84866116c6565b60408051600180825281830190925293965091945092506000919060208083019080368337019050509050898160008151811061097657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506109a187868861129c565b60405163030ecdeb60e21b81526001600160a01b03881690630c3b37ac906109cd9084906004016121ba565b600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b505050506000831115610a1e57610a1384868561129c565b610a1e8b868461129c565b610a288887611312565b610a358a87858c8c61137f565b6105688b8b8885611716565b6000610a4b61110f565b90508560005b81811015610bc8576000836001600160a01b03166384a0e58f8b8b85818110610a7657fe5b9050602002016020810190610a8b9190611cb1565b6040518263ffffffff1660e01b8152600401610aa791906120cc565b60206040518083038186803b158015610abf57600080fd5b505afa158015610ad3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af79190611fba565b905060008a8a84818110610b0757fe5b9050602002016020810190610b1c9190611cb1565b9050600080610b2b8385611127565b91509150610b3a87848661129c565b8015610b4b57610b4b82848361129c565b610b67898987818110610b5a57fe5b9050602002013585611312565b610bb88d8d87818110610b7657fe5b9050602002016020810190610b8b9190611cb1565b85838e8e8a818110610b9957fe5b905060200201358d8d8b818110610bac57fe5b9050602002013561137f565b505060019092019150610a519050565b5060405163030ecdeb60e21b81526001600160a01b03831690630c3b37ac90610bf7908b908b90600401612176565b600060405180830381600087803b158015610c1157600080fd5b505af1158015610c25573d6000803e3d6000fd5b505050505050505050505050565b6000610c3f8385611404565b90506000610c4b61179f565b6001600160a01b0316866001600160a01b03161415610c7f576000198214610c735781610c75565b475b9150819050610d97565b856000198314610c8f5782610d0b565b6040516370a0823160e01b81526001600160a01b038216906370a0823190610cbb9030906004016120cc565b60206040518083038186803b158015610cd357600080fd5b505afa158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b9190611fba565b9250806001600160a01b031663095ea7b3610d2461110f565b856040518363ffffffff1660e01b8152600401610d42929190612109565b602060405180830381600087803b158015610d5c57600080fd5b505af1158015610d70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d949190611f9a565b50505b610d9f61110f565b6001600160a01b03166347e7ef248288856040518463ffffffff1660e01b8152600401610dcd929190612109565b6000604051808303818588803b158015610de657600080fd5b505af1158015610dfa573d6000803e3d6000fd5b5050505050610e098383611312565b856001600160a01b03167f14f2c3630383ff6f8febe0920fe216fdd5215bad47bc4330529f4dec17994603838686604051610e4693929190612313565b60405180910390a26040517f14f2c3630383ff6f8febe0920fe216fdd5215bad47bc4330529f4dec1799460390600090610e8a908990869089908990602001612122565b6040516020818303038152906040529050600080610ea6611107565b91509150610eb26116ae565b6001600160a01b031663e14d4fb1838387876040518563ffffffff1660e01b8152600401610ee394939291906122ee565b600060405180830381600087803b158015610efd57600080fd5b505af1158015610f11573d6000803e3d6000fd5b5050505050505050505050505050565b6000610f2b61110f565b90508560005b818110156110d8576000836001600160a01b03166384a0e58f8b8b85818110610f5657fe5b9050602002016020810190610f6b9190611cb1565b6040518263ffffffff1660e01b8152600401610f8791906120cc565b60206040518083038186803b158015610f9f57600080fd5b505afa158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd79190611fba565b905060008a8a84818110610fe757fe5b9050602002016020810190610ffc9190611cb1565b9050600080600061100d84866116c6565b92509250925061101e88858761129c565b811561103a5761102f83858461129c565b61103a8f858361129c565b6110568a8a8881811061104957fe5b9050602002013586611312565b61109b8e8e8881811061106557fe5b905060200201602081019061107a9190611cb1565b86848f8f8b81811061108857fe5b905060200201358e8e8c818110610bac57fe5b6110c78f8f8f898181106110ab57fe5b90506020020160208101906110c09190611cb1565b8784611716565b505060019093019250610f31915050565b5060405163030ecdeb60e21b81526001600160a01b03831690630c3b37ac90610722908b908b90600401612176565b600190602190565b7306cb7c24990cbe6b9f99982f975f9147c000fec690565b60008060006111346117b7565b90506000816001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b15801561117157600080fd5b505afa158015611185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a99190611fba565b9050816001600160a01b031663c415b95c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e457600080fd5b505afa1580156111f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121c9190611ccd565b93508061122c5760009250611293565b61123685826117cf565b925060006112448685611804565b905060006112518861182d565b9050600a82038110156112765760405162461bcd60e51b81526004016105a0906122ab565b81811161128c5761128781886118d7565b61128e565b845b945050505b50509250929050565b6112a461179f565b6001600160a01b0316826001600160a01b0316146112d5576112d06001600160a01b03831684836118fa565b61130d565b6040516001600160a01b0384169082156108fc029083906000818181858888f1935050505015801561130b573d6000803e3d6000fd5b505b505050565b811561137b5761132061194c565b6001600160a01b03166361e3c94483836040518363ffffffff1660e01b815260040161134d9291906122e0565b600060405180830381600087803b15801561136757600080fd5b505af11580156105c1573d6000803e3d6000fd5b5050565b846001600160a01b03167f718f2debe25ea9b628399a4db9e7a36b83b97b62308695be0df1b3f257582c92858585856040516113be9493929190612329565b60405180910390a26040517f718f2debe25ea9b628399a4db9e7a36b83b97b62308695be0df1b3f257582c92906000906106c99088908890889088908890602001612148565b600082156114965761141461194c565b6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040161143f91906122d7565b602060405180830381600087803b15801561145957600080fd5b505af115801561146d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114919190611fba565b611498565b815b9392505050565b836001600160a01b03167f019cbd45a253e15f12114d2ec3b4ff4029bbb4d9d484c003b11a06c358b5923c8484846040516114dc93929190612313565b60405180910390a26040517f019cbd45a253e15f12114d2ec3b4ff4029bbb4d9d484c003b11a06c358b5923c90600090611520908790879087908790602001612122565b604051602081830303815290604052905060008061153c611107565b915091506115486116ae565b6001600160a01b031663e14d4fb1838387876040518563ffffffff1660e01b8152600401610bf794939291906122ee565b6000806115846117b7565b6001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b1580156115bc57600080fd5b505afa1580156115d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f49190611fba565b9050600061160061110f565b6001600160a01b03166384a0e58f866040518263ffffffff1660e01b815260040161162b91906120cc565b60206040518083038186803b15801561164357600080fd5b505afa158015611657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167b9190611fba565b90508161168a578392506116a6565b600061169682846117cf565b90506116a28582611804565b9350505b505092915050565b732af7ea6cb911035f3eb1ed895cb6692c39ecba9790565b6000806000806116d68686611127565b9094509050806116ed57600092506000915061170e565b6116ff816702c68af0bb1400006117cf565b915061170b81836118d7565b92505b509250925092565b826001600160a01b0316846001600160a01b03167f052e745f308c35fe80c9dae44eed9043ab6e2fbadf46f56fa11dba91992ab32a848460405161175b9291906122e0565b60405180910390a36040517f052e745f308c35fe80c9dae44eed9043ab6e2fbadf46f56fa11dba91992ab32a906000906115209087908790879087906020016120e0565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90565b73aaa91046c1d1a210017e36394c83bd5070dadda590565b6000670de0b6b3a76400006117f56117e78585611964565b6706f05b59d3b20000611804565b816117fc57fe5b049392505050565b808201828110156118275760405162461bcd60e51b81526004016105a09061225e565b92915050565b600061183761179f565b6001600160a01b0316826001600160a01b0316146118d0576040516370a0823160e01b81526001600160a01b038316906370a082319061187b9030906004016120cc565b60206040518083038186803b15801561189357600080fd5b505afa1580156118a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cb9190611fba565b611827565b4792915050565b808203828111156118275760405162461bcd60e51b81526004016105a090612285565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261130d90849061199b565b738a5419cfc711b2343c17a6abf4b2bafabb06957f90565b600081158061197f5750508082028282828161197c57fe5b04145b6118275760405162461bcd60e51b81526004016105a09061225e565b60006119f0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a4c9092919063ffffffff16565b80519091501561130d57808060200190516020811015611a0f57600080fd5b505161130d5760405162461bcd60e51b815260040180806020018281038252602a815260200180612383602a913960400191505060405180910390fd5b6060611a5b8484600085611a63565b949350505050565b606082471015611aa45760405162461bcd60e51b815260040180806020018281038252602681526020018061235d6026913960400191505060405180910390fd5b611aad85611bbe565b611afe576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611b3c5780518252601f199092019160209182019101611b1d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611b9e576040519150601f19603f3d011682016040523d82523d6000602084013e611ba3565b606091505b5091509150611bb3828286611bc4565b979650505050505050565b3b151590565b60608315611bd3575081611498565b825115611be35782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c2d578181015183820152602001611c15565b50505050905090810190601f168015611c5a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008083601f840112611c79578182fd5b50813567ffffffffffffffff811115611c90578182fd5b6020830191508360208083028501011115611caa57600080fd5b9250929050565b600060208284031215611cc2578081fd5b813561149881612344565b600060208284031215611cde578081fd5b815161149881612344565b60008060008060808587031215611cfe578283fd5b8435611d0981612344565b93506020850135611d1981612344565b93969395505050506040820135916060013590565b60008060008060008060006080888a031215611d48578283fd5b8735611d5381612344565b9650602088013567ffffffffffffffff80821115611d6f578485fd5b611d7b8b838c01611c68565b909850965060408a0135915080821115611d93578485fd5b611d9f8b838c01611c68565b909650945060608a0135915080821115611db7578384fd5b50611dc48a828b01611c68565b989b979a50959850939692959293505050565b600080600060608486031215611deb578283fd5b8335611df681612344565b95602085013595506040909401359392505050565b60008060008060808587031215611e20578384fd5b8435611e2b81612344565b966020860135965060408601359560600135945092505050565b60008060008060008060608789031215611e5d578182fd5b863567ffffffffffffffff80821115611e74578384fd5b611e808a838b01611c68565b90985096506020890135915080821115611e98578384fd5b611ea48a838b01611c68565b90965094506040890135915080821115611ebc578384fd5b50611ec989828a01611c68565b979a9699509497509295939492505050565b6000806000806000806000806080898b031215611ef6578081fd5b883567ffffffffffffffff80821115611f0d578283fd5b611f198c838d01611c68565b909a50985060208b0135915080821115611f31578283fd5b611f3d8c838d01611c68565b909850965060408b0135915080821115611f55578283fd5b611f618c838d01611c68565b909650945060608b0135915080821115611f79578283fd5b50611f868b828c01611c68565b999c989b5096995094979396929594505050565b600060208284031215611fab578081fd5b81518015158114611498578182fd5b600060208284031215611fcb578081fd5b5051919050565b60008284526020808501945082825b8581101561200f578135611ff481612344565b6001600160a01b031687529582019590820190600101611fe1565b509495945050505050565b6000815180845260208085019450808401835b8381101561200f5781516001600160a01b03168752958201959082019060010161202d565b6000815180845260208085019450808401835b8381101561200f57815187529582019590820190600101612065565b60008151808452815b818110156120a65760208185018101518683018201520161208a565b818111156120b75782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6001600160a01b03959095168552602085019390935260408401919091526060830152608082015260a00190565b600060208252611a5b602083018486611fd2565b60006040825261219e604083018587611fd2565b82810360208401526121b08185612052565b9695505050505050565b600060208252611498602083018461201a565b6000604082526121e0604083018561201a565b82810360208401526121f28185612052565b95945050505050565b6000602082526114986020830184612081565b6020808252601490820152736f726967696e2d69732d6164647265737328302960601b604082015260600190565b6020808252600890820152670616d742d69732d360c41b604082015260600190565b6020808252600d908201526c6d6174682d6e6f742d7361666560981b604082015260600190565b6020808252600c908201526b7375622d6f766572666c6f7760a01b604082015260600190565b6020808252601290820152714e6f742d656e6f7567682d62616c616e636560701b604082015260600190565b90815260200190565b918252602082015260400190565b6000858252846020830152836040830152608060608301526121b06080830184612081565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b6001600160a01b038116811461235957600080fd5b5056fe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122016d16b68910251d54e2227fe30548c137236effadb27e340756d311c947f363364736f6c63430007060033";

type ConnectInstaPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectInstaPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectInstaPool__factory extends ContractFactory {
  constructor(...args: ConnectInstaPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectInstaPool> {
    return super.deploy(overrides || {}) as Promise<ConnectInstaPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectInstaPool {
    return super.attach(address) as ConnectInstaPool;
  }
  connect(signer: Signer): ConnectInstaPool__factory {
    return super.connect(signer) as ConnectInstaPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectInstaPoolInterface {
    return new utils.Interface(_abi) as ConnectInstaPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectInstaPool {
    return new Contract(address, _abi, signerOrProvider) as ConnectInstaPool;
  }
}
