/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { InstaPoolFee, InstaPoolFeeInterface } from "../InstaPoolFee";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "LogChangeFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "LogChangeFeeCollector",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "changeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "changeFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instaIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506603328b944c4000600081905550732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff1663ee97f7f36040518163ffffffff1660e01b815260040160206040518083038186803b15801561007957600080fd5b505afa15801561008d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b1919061010b565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061017d565b60008151905061010581610166565b92915050565b60006020828403121561011d57600080fd5b600061012b848285016100f6565b91505092915050565b600061013f82610146565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61016f81610134565b811461017a57600080fd5b50565b6108808061018c6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636a1db1bf1461005c5780639245290d14610078578063a41098bf14610094578063c415b95c146100b2578063ddca3f43146100d0575b600080fd5b610076600480360381019061007191906105d2565b6100ee565b005b610092600480360381019061008d9190610580565b610282565b005b61009c6104fd565b6040516100a99190610719565b60405180910390f35b6100ba610515565b6040516100c79190610719565b60405180910390f35b6100d861053b565b6040516100e591906107b4565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff1663ee97f7f36040518163ffffffff1660e01b815260040160206040518083038186803b15801561015f57600080fd5b505afa158015610173573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019791906105a9565b73ffffffffffffffffffffffffffffffffffffffff16146101ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e490610754565b60405180910390fd5b66071afd498d0000811115610237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022e90610774565b60405180910390fd5b8067ffffffffffffffff166000819055507fba620503f5831c04cb36973108b57974d7dea3784d899928972fae4b30ce6fcb8160405161027791906107b4565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff16732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff1663ee97f7f36040518163ffffffff1660e01b815260040160206040518083038186803b1580156102f357600080fd5b505afa158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b91906105a9565b73ffffffffffffffffffffffffffffffffffffffff1614610381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037890610754565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610412576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040990610794565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047990610734565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f763b22f3017d0cf9e77fe7f034a80d35b7862b19f87440695a9a9933bb07861c816040516104f29190610719565b60405180910390a150565b732971adfa57b20e5a416ae5a708a8655a9c74f72381565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b6000813590506105508161081c565b92915050565b6000815190506105658161081c565b92915050565b60008135905061057a81610833565b92915050565b60006020828403121561059257600080fd5b60006105a084828501610541565b91505092915050565b6000602082840312156105bb57600080fd5b60006105c984828501610556565b91505092915050565b6000602082840312156105e457600080fd5b60006105f28482850161056b565b91505092915050565b610604816107e0565b82525050565b6000610617601a836107cf565b91507f666565436f6c6c6563746f722d69732d616464726573732830290000000000006000830152602082019050919050565b6000610657600a836107cf565b91507f6e6f742d4d6173746572000000000000000000000000000000000000000000006000830152602082019050919050565b60006106976015836107cf565b91507f466565206973206d6f7265207468616e20302e322500000000000000000000006000830152602082019050919050565b60006106d76011836107cf565b91507f53616d652d666565436f6c6c6563746f720000000000000000000000000000006000830152602082019050919050565b61071381610812565b82525050565b600060208201905061072e60008301846105fb565b92915050565b6000602082019050818103600083015261074d8161060a565b9050919050565b6000602082019050818103600083015261076d8161064a565b9050919050565b6000602082019050818103600083015261078d8161068a565b9050919050565b600060208201905081810360008301526107ad816106ca565b9050919050565b60006020820190506107c9600083018461070a565b92915050565b600082825260208201905092915050565b60006107eb826107f2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610825816107e0565b811461083057600080fd5b50565b61083c81610812565b811461084757600080fd5b5056fea264697066735822122084bea39de9c78a5213862513f8b33425bc30f6f2a59736d3ac15282e8574af4364736f6c63430006050033";

type InstaPoolFeeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InstaPoolFeeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InstaPoolFee__factory extends ContractFactory {
  constructor(...args: InstaPoolFeeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InstaPoolFee> {
    return super.deploy(overrides || {}) as Promise<InstaPoolFee>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InstaPoolFee {
    return super.attach(address) as InstaPoolFee;
  }
  connect(signer: Signer): InstaPoolFee__factory {
    return super.connect(signer) as InstaPoolFee__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InstaPoolFeeInterface {
    return new utils.Interface(_abi) as InstaPoolFeeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InstaPoolFee {
    return new Contract(address, _abi, signerOrProvider) as InstaPoolFee;
  }
}
