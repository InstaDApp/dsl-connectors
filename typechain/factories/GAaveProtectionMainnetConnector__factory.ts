/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GAaveProtectionMainnetConnector,
  GAaveProtectionMainnetConnectorInterface,
} from "../GAaveProtectionMainnetConnector";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dsa",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "action",
        type: "address",
      },
    ],
    name: "LogCancelAndRevoke",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dsa",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "action",
        type: "address",
      },
    ],
    name: "LogCancelProtection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dsa",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "action",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantedHealthFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumHealthFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPermanent",
        type: "bool",
      },
    ],
    name: "LogSubmitProtection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dsa",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "action",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantedHealthFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumHealthFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPermanent",
        type: "bool",
      },
    ],
    name: "LogUpdateProtection",
    type: "event",
  },
  {
    inputs: [],
    name: "cancelAndRevoke",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelProtection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wantedHealthFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumHealthFactor",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPermanent",
        type: "bool",
      },
    ],
    name: "submitProtection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wantedHealthFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumHealthFactor",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPermanent",
        type: "bool",
      },
    ],
    name: "updateProtection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d5b806100206000396000f3fe60806040526004361061004a5760003560e01c806306fdde031461004f5780631b8a63171461007a57806326bfb6b41461008f578063a9f93a4f14610097578063ae13302b146100aa575b600080fd5b34801561005b57600080fd5b506100646100b2565b6040516100719190610c84565b60405180910390f35b61008d610088366004610b84565b6100ce565b005b61008d610132565b61008d6100a5366004610b84565b610192565b61008d6101e9565b604051806060016040528060228152602001610d046022913981565b6100d9838383610234565b60405173d2579361f3c402938841774ecc1acdd51d3a43459030907f79ab472918df7dc198728f0d4eeeae318a6bcd2078a9973fbafa180950b6dde79061012590879087908790610cb6565b60405180910390a3505050565b61013a6102ee565b1561014757610147610397565b61014f610416565b60405173d2579361f3c402938841774ecc1acdd51d3a43459030907f61cd424f4f8b68f35fa30fc485a203a22c1a84e216dde560f9962464b7152ea890600090a3565b61019d83838361058e565b60405173d2579361f3c402938841774ecc1acdd51d3a43459030907ffa096b90fca8a96a342c07574a8385d2457476a301ca54f3da91397d65ab478f9061012590879087908790610cb6565b6101f1610397565b60405173d2579361f3c402938841774ecc1acdd51d3a43459030907f14ad85409179bbacc859b52126be3f39c83b86c2306b3caf8024f804809fc90090600090a3565b61023c6105e3565b73e3d373c78803c1d22ce96bdc43d47542835bbf426001600160a01b031663c2d9a0a873d2579361f3c402938841774ecc1acdd51d3a434585853060405160200161028993929190610c97565b604051602081830303815290604052846040518463ffffffff1660e01b81526004016102b793929190610c35565b600060405180830381600087803b1580156102d157600080fd5b505af11580156102e5573d6000803e3d6000fd5b50505050505050565b604051632b0b0d0560e01b8152600090819073e3d373c78803c1d22ce96bdc43d47542835bbf4290632b0b0d059061034090309073d2579361f3c402938841774ecc1acdd51d3a434590600401610c1b565b60206040518083038186803b15801561035857600080fd5b505afa15801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190610a7c565b1415905090565b6040516376aafbdb60e01b815273e3d373c78803c1d22ce96bdc43d47542835bbf42906376aafbdb906103e29073d2579361f3c402938841774ecc1acdd51d3a434590600401610c07565b600060405180830381600087803b1580156103fc57600080fd5b505af1158015610410573d6000803e3d6000fd5b50505050565b600061042061075b565b905060005b815181101561058a5781818151811061043a57fe5b60200260200101516001600160a01b031663dd62ed3e3073d2579361f3c402938841774ecc1acdd51d3a43456040518363ffffffff1660e01b8152600401610483929190610c1b565b60206040518083038186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190610a7c565b15610582578181815181106104e457fe5b60200260200101516001600160a01b031663095ea7b373d2579361f3c402938841774ecc1acdd51d3a434560006040518363ffffffff1660e01b815260040161052e929190610c6b565b602060405180830381600087803b15801561054857600080fd5b505af115801561055c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105809190610a59565b505b600101610425565b5050565b6105966105e3565b73e3d373c78803c1d22ce96bdc43d47542835bbf426001600160a01b03166394f0f29673d2579361f3c402938841774ecc1acdd51d3a434585853060405160200161028993929190610c97565b60006105ed61075b565b905060005b815181101561058a5760001982828151811061060a57fe5b60200260200101516001600160a01b031663dd62ed3e3073d2579361f3c402938841774ecc1acdd51d3a43456040518363ffffffff1660e01b8152600401610653929190610c1b565b60206040518083038186803b15801561066b57600080fd5b505afa15801561067f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a39190610a7c565b14610753578181815181106106b457fe5b60200260200101516001600160a01b031663095ea7b373d2579361f3c402938841774ecc1acdd51d3a43456000196040518363ffffffff1660e01b81526004016106ff929190610c6b565b602060405180830381600087803b15801561071957600080fd5b505af115801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190610a59565b505b6001016105f2565b60606000737d2768de32b0b80b7a3454c06bdac94a69ddc7a96001600160a01b031663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b1580156107ac57600080fd5b505afa1580156107c0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107e891908101906109b1565b9050805167ffffffffffffffff8111801561080257600080fd5b5060405190808252806020026020018201604052801561082c578160200160208202803683370190505b50915060005b815181101561090f57737d2768de32b0b80b7a3454c06bdac94a69ddc7a96001600160a01b03166335ea6a7583838151811061086a57fe5b60200260200101516040518263ffffffff1660e01b815260040161088e9190610c07565b6101806040518083038186803b1580156108a757600080fd5b505afa1580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df9190610a94565b60e001518382815181106108ef57fe5b6001600160a01b0390921660209283029190910190910152600101610832565b505090565b80516001600160a01b038116811461092b57600080fd5b919050565b600060208284031215610941578081fd5b6040516020810181811067ffffffffffffffff8211171561095e57fe5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811461092b57600080fd5b805164ffffffffff8116811461092b57600080fd5b805160ff8116811461092b57600080fd5b600060208083850312156109c3578182fd5b825167ffffffffffffffff808211156109da578384fd5b818501915085601f8301126109ed578384fd5b8151818111156109f957fe5b8381029150610a09848301610cce565b8181528481019084860184860187018a1015610a23578788fd5b8795505b83861015610a4c57610a3881610914565b835260019590950194918601918601610a27565b5098975050505050505050565b600060208284031215610a6a578081fd5b8151610a7581610cf2565b9392505050565b600060208284031215610a8d578081fd5b5051919050565b6000610180808385031215610aa7578182fd5b610ab081610cce565b9050610abc8484610930565b8152610aca6020840161096b565b6020820152610adb6040840161096b565b6040820152610aec6060840161096b565b6060820152610afd6080840161096b565b6080820152610b0e60a0840161096b565b60a0820152610b1f60c0840161098b565b60c0820152610b3060e08401610914565b60e0820152610100610b43818501610914565b90820152610120610b55848201610914565b90820152610140610b67848201610914565b90820152610160610b798482016109a0565b908201529392505050565b600080600060608486031215610b98578182fd5b83359250602084013591506040840135610bb181610cf2565b809150509250925092565b60008151808452815b81811015610be157602081850181015186830182015201610bc5565b81811115610bf25782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0384168152606060208201819052600090610c5990830185610bbc565b90508215156040830152949350505050565b6001600160a01b03929092168252602082015260400190565b600060208252610a756020830184610bbc565b92835260208301919091526001600160a01b0316604082015260600190565b92835260208301919091521515604082015260600190565b60405181810167ffffffffffffffff81118282101715610cea57fe5b604052919050565b8015158114610d0057600080fd5b5056fe474161766550726f74656374696f6e4d61696e6e6574436f6e6e6563746f722d7631a264697066735822122082b03eedbf296d08f7ef965663ebf4e96272bac0965d3df36b85579f6cdddc7d64736f6c63430007060033";

type GAaveProtectionMainnetConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GAaveProtectionMainnetConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GAaveProtectionMainnetConnector__factory extends ContractFactory {
  constructor(...args: GAaveProtectionMainnetConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GAaveProtectionMainnetConnector> {
    return super.deploy(
      overrides || {}
    ) as Promise<GAaveProtectionMainnetConnector>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GAaveProtectionMainnetConnector {
    return super.attach(address) as GAaveProtectionMainnetConnector;
  }
  connect(signer: Signer): GAaveProtectionMainnetConnector__factory {
    return super.connect(signer) as GAaveProtectionMainnetConnector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GAaveProtectionMainnetConnectorInterface {
    return new utils.Interface(
      _abi
    ) as GAaveProtectionMainnetConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GAaveProtectionMainnetConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GAaveProtectionMainnetConnector;
  }
}
