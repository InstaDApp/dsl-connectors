/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2AuthArbitrum,
  ConnectV2AuthArbitrumInterface,
} from "../ConnectV2AuthArbitrum";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    name: "LogAddAuth",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_msgSender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    name: "LogRemoveAuth",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610649806100206000396000f3fe6080604052600436106100345760003560e01c806306fdde03146100395780630a3b0a4f146100c357806329092d0e146101c7575b600080fd5b34801561004557600080fd5b5061004e6101ed565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610088578181015183820152602001610070565b50505050905090810190601f1680156100b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100e9600480360360208110156100d957600080fd5b50356001600160a01b0316610210565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561012a578181015183820152602001610112565b50505050905090810190601f1680156101575780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561018a578181015183820152602001610172565b50505050905090810190601f1680156101b75780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6100e9600480360360208110156101dd57600080fd5b50356001600160a01b03166102e1565b60405180604001604052806007815260200166417574682d763160c81b81525081565b606080306001600160a01b0316635bfa1b68846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561026257600080fd5b505af1158015610276573d6000803e3d6000fd5b5050604080518082018252601b81527f4c6f674164644175746828616464726573732c61646472657373290000000000602080830191909152825133918101919091526001600160a01b03909716878301528151808803830181526060909701909152959350505050565b60608060016102ee610406565b11610340576040805162461bcd60e51b815260206004820152601860248201527f52656d6f76696e672d616c6c2d617574686f7269746965730000000000000000604482015290519081900360640190fd5b6040805163e6c09edf60e01b81526001600160a01b03851660048201529051309163e6c09edf91602480830192600092919082900301818387803b15801561038757600080fd5b505af115801561039b573d6000803e3d6000fd5b5050604080518082018252601e81527f4c6f6752656d6f76654175746828616464726573732c61646472657373290000602080830191909152825133918101919091526001600160a01b03909716878301528151808803830181526060909701909152959350505050565b604051636cfaf5e960e01b81526000908190733565f6057b7ffe36984779a507fc87b31efb0f0990636cfaf5e9906104429030906004016105ea565b60206040518083038186803b15801561045a57600080fd5b505afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049291906105c9565b604051638028a9fd60e01b8152909150733565f6057b7ffe36984779a507fc87b31efb0f0990638028a9fd906104cc9084906004016105fe565b60606040518083038186803b1580156104e457600080fd5b505afa1580156104f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051c9190610564565b6040015167ffffffffffffffff1691505090565b80516001600160a01b038116811461054757600080fd5b919050565b805167ffffffffffffffff8116811461054757600080fd5b600060608284031215610575578081fd5b6040516060810181811067ffffffffffffffff8211171561059257fe5b60405261059e83610530565b81526105ac60208401610530565b60208201526105bd6040840161054c565b60408201529392505050565b6000602082840312156105da578081fd5b6105e38261054c565b9392505050565b6001600160a01b0391909116815260200190565b67ffffffffffffffff9190911681526020019056fea264697066735822122010b8429221ff69a0beb1673198d61e328d95679c0af677b530c4dfb47587f02a64736f6c63430007060033";

type ConnectV2AuthArbitrumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2AuthArbitrumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2AuthArbitrum__factory extends ContractFactory {
  constructor(...args: ConnectV2AuthArbitrumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2AuthArbitrum> {
    return super.deploy(overrides || {}) as Promise<ConnectV2AuthArbitrum>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2AuthArbitrum {
    return super.attach(address) as ConnectV2AuthArbitrum;
  }
  connect(signer: Signer): ConnectV2AuthArbitrum__factory {
    return super.connect(signer) as ConnectV2AuthArbitrum__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2AuthArbitrumInterface {
    return new utils.Interface(_abi) as ConnectV2AuthArbitrumInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2AuthArbitrum {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConnectV2AuthArbitrum;
  }
}
