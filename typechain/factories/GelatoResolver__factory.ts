/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  GelatoResolver,
  GelatoResolverInterface,
} from "../GelatoResolver";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "userProxy",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "module",
                type: "address",
              },
            ],
            internalType: "struct Provider",
            name: "provider",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "inst",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Condition[]",
                name: "conditions",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                  {
                    internalType: "enum Operation",
                    name: "operation",
                    type: "uint8",
                  },
                  {
                    internalType: "enum DataFlow",
                    name: "dataFlow",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "termsOkCheck",
                    type: "bool",
                  },
                ],
                internalType: "struct Action[]",
                name: "actions",
                type: "tuple[]",
              },
              {
                internalType: "uint256",
                name: "selfProviderGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "selfProviderGasPriceCeil",
                type: "uint256",
              },
            ],
            internalType: "struct Task[]",
            name: "tasks",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expiryDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "submissionsLeft",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct TaskReceipt[]",
        name: "taskReceipt",
        type: "tuple[]",
      },
    ],
    name: "LogMultiCancelTasks",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct TaskSpec[]",
        name: "taskspecs",
        type: "tuple[]",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "modules",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethToDeposit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogMultiProvide",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct TaskSpec[]",
        name: "taskspecs",
        type: "tuple[]",
      },
      {
        indexed: true,
        internalType: "address[]",
        name: "modules",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethToWithdraw",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogMultiUnprovide",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "module",
            type: "address",
          },
        ],
        indexed: true,
        internalType: "struct Provider",
        name: "provider",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct Task",
        name: "task",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256",
      },
    ],
    name: "LogSubmitTask",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "module",
            type: "address",
          },
        ],
        indexed: true,
        internalType: "struct Provider",
        name: "provider",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct Task[]",
        name: "tasks",
        type: "tuple[]",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256",
      },
    ],
    name: "LogSubmitTaskChain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "module",
            type: "address",
          },
        ],
        indexed: true,
        internalType: "struct Provider",
        name: "provider",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256",
          },
        ],
        indexed: true,
        internalType: "struct Task[]",
        name: "tasks",
        type: "tuple[]",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryDate",
        type: "uint256",
      },
    ],
    name: "LogSubmitTaskCycle",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "userProxy",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "address",
                name: "module",
                type: "address",
              },
            ],
            internalType: "struct Provider",
            name: "provider",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "inst",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Condition[]",
                name: "conditions",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                  {
                    internalType: "enum Operation",
                    name: "operation",
                    type: "uint8",
                  },
                  {
                    internalType: "enum DataFlow",
                    name: "dataFlow",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "termsOkCheck",
                    type: "bool",
                  },
                ],
                internalType: "struct Action[]",
                name: "actions",
                type: "tuple[]",
              },
              {
                internalType: "uint256",
                name: "selfProviderGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "selfProviderGasPriceCeil",
                type: "uint256",
              },
            ],
            internalType: "struct Task[]",
            name: "tasks",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "expiryDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "submissionsLeft",
            type: "uint256",
          },
        ],
        internalType: "struct TaskReceipt[]",
        name: "_taskReceipts",
        type: "tuple[]",
      },
    ],
    name: "multiCancelTasks",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256",
          },
        ],
        internalType: "struct TaskSpec[]",
        name: "_taskSpecs",
        type: "tuple[]",
      },
      {
        internalType: "address[]",
        name: "_modules",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_ethToDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_setId",
        type: "uint256",
      },
    ],
    name: "multiProvide",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "conditions",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "gasPriceCeil",
            type: "uint256",
          },
        ],
        internalType: "struct TaskSpec[]",
        name: "_taskSpecs",
        type: "tuple[]",
      },
      {
        internalType: "address[]",
        name: "_modules",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_setId",
        type: "uint256",
      },
    ],
    name: "multiUnprovide",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "module",
            type: "address",
          },
        ],
        internalType: "struct Provider",
        name: "_provider",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256",
          },
        ],
        internalType: "struct Task",
        name: "_task",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_expiryDate",
        type: "uint256",
      },
    ],
    name: "submitTask",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "module",
            type: "address",
          },
        ],
        internalType: "struct Provider",
        name: "_provider",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256",
          },
        ],
        internalType: "struct Task[]",
        name: "_tasks",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "_expiryDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sumOfRequestedTaskSubmits",
        type: "uint256",
      },
    ],
    name: "submitTaskChain",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "address",
            name: "module",
            type: "address",
          },
        ],
        internalType: "struct Provider",
        name: "_provider",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "inst",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Condition[]",
            name: "conditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "enum Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "enum DataFlow",
                name: "dataFlow",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "termsOkCheck",
                type: "bool",
              },
            ],
            internalType: "struct Action[]",
            name: "actions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "selfProviderGasPriceCeil",
            type: "uint256",
          },
        ],
        internalType: "struct Task[]",
        name: "_tasks",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "_expiryDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cycles",
        type: "uint256",
      },
    ],
    name: "submitTaskCycle",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class GelatoResolver__factory {
  static readonly abi = _abi;
  static createInterface(): GelatoResolverInterface {
    return new utils.Interface(_abi) as GelatoResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GelatoResolver {
    return new Contract(address, _abi, signerOrProvider) as GelatoResolver;
  }
}
