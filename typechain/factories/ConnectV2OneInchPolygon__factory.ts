/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2OneInchPolygon,
  ConnectV2OneInchPolygonInterface,
} from "../ConnectV2OneInchPolygon";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSell",
    type: "event",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600860808190526731496e63682d763160c01b60a0908152610029916000919061003c565b5034801561003657600080fd5b506100dd565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261007257600085556100b8565b82601f1061008b57805160ff19168380011785556100b8565b828001600101855582156100b8579182015b828111156100b857825182559160200191906001019061009d565b506100c49291506100c8565b5090565b5b808211156100c457600081556001016100c9565b610c49806100ec6000396000f3fe6080604052600436106100295760003560e01c806306fdde031461002e578063f892b2ad14610059575b600080fd5b34801561003a57600080fd5b5061004361007a565b6040516100509190610ac8565b60405180910390f35b61006c61006736600461099b565b610108565b604051610050929190610adb565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156101005780601f106100d557610100808354040283529160200191610100565b820191906000526020600020905b8154815290600101906020018083116100e357829003601f168201915b505050505081565b60608060006040518060c001604052808a6001600160a01b031681526020018b6001600160a01b031681526020018981526020016000815260200188815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250905061018d81856101ec565b9050604051806060016040528060388152602001610bbb6038913992508989826060015183604001516000886040516020016101ce96959493929190610a8f565b60405160208183030381529060405291505097509795505050505050565b6101f4610937565b825160006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156102285750604084015161024b565b61024b827311111112542d85b3ef69ae05771c2dccff4faa2687604001516102a5565b6102588560a001516103ed565b61027d5760405162461bcd60e51b815260040161027490610b5f565b60405180910390fd5b610287858261042d565b60608601819052610299908590610563565b84925050505b92915050565b826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156102fc57600080fd5b505af192505050801561030d575060015b6103e8576040805163095ea7b360e01b81526001600160a01b03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b15801561036057600080fd5b505af1158015610374573d6000803e3d6000fd5b50505050826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156103cf57600080fd5b505af11580156103e3573d6000803e3d6000fd5b505050505b505050565b602081015160009082906001600160e01b03198116623e012960e91b148061042557506001600160e01b031981166305d2b6d960e31b145b949350505050565b600080836020015190506000806104488387600001516105e0565b91509150600061045c828860400151610710565b90506000610477846104728a6080015185610729565b61075e565b905060006104848661076f565b905060007311111112542d85b3ef69ae05771c2dccff4faa266001600160a01b0316898b60a001516040516104b99190610a73565b60006040518083038185875af1925050503d80600081146104f6576040519150601f19603f3d011682016040523d82523d6000602084013e6104fb565b606091505b505090508061051c5760405162461bcd60e51b815260040161027490610b34565b60006105278861076f565b90506105338184610813565b9850888411156105555760405162461bcd60e51b815260040161027490610b09565b505050505050505092915050565b81156105dc5760408051631878f25160e21b815260048101849052602481018390529051736c7256cf7c003dd85683339f75dde9971f98f2fd916361e3c94491604480830192600092919082900301818387803b1580156105c357600080fd5b505af11580156105d7573d6000803e3d6000fd5b505050505b5050565b6000806001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461067157836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561064057600080fd5b505afa158015610654573d6000803e3d6000fd5b505050506040513d602081101561066a57600080fd5b5051610674565b60125b91506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461070457826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106d357600080fd5b505afa1580156106e7573d6000803e3d6000fd5b505050506040513d60208110156106fd57600080fd5b5051610707565b60125b90509250929050565b60006107228284601203600a0a61081f565b9392505050565b6000670de0b6b3a764000061074f6107418585610827565b6706f05b59d3b20000610880565b8161075657fe5b049392505050565b600082601203600a0a828161075657fe5b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461080c57604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156107db57600080fd5b505afa1580156107ef573d6000803e3d6000fd5b505050506040513d602081101561080557600080fd5b505161029f565b4792915050565b600061072283836108da565b600061072283835b6000826108365750600061029f565b8282028284828161084357fe5b04146107225760405162461bcd60e51b8152600401808060200182810382526021815260200180610bf36021913960400191505060405180910390fd5b600082820183811015610722576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082821115610931576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b80356001600160a01b038116811461099657600080fd5b919050565b600080600080600080600060c0888a0312156109b5578283fd5b6109be8861097f565b96506109cc6020890161097f565b95506040880135945060608801359350608088013567ffffffffffffffff808211156109f6578485fd5b818a0191508a601f830112610a09578485fd5b813581811115610a17578586fd5b8b6020828501011115610a28578586fd5b60208301955080945050505060a0880135905092959891949750929550565b60008151808452610a5f816020860160208601610b8a565b601f01601f19169290920160200192915050565b60008251610a85818460208701610b8a565b9190910192915050565b6001600160a01b0396871681529490951660208501526040840192909252606083015260ff16608082015260a081019190915260c00190565b6000602082526107226020830184610a47565b600060408252610aee6040830185610a47565b8281036020840152610b008185610a47565b95945050505050565b602080825260119082015270546f6f206d75636820736c69707061676560781b604082015260600190565b6020808252601190820152700c525b98da0b5cddd85c0b59985a5b1959607a1b604082015260600190565b6020808252601190820152702737ba16b9bbb0b816b33ab731ba34b7b760791b604082015260600190565b60005b83811015610ba5578181015183820152602001610b8d565b83811115610bb4576000848401525b5050505056fe4c6f6753656c6c28616464726573732c616464726573732c75696e743235362c75696e743235362c75696e743235362c75696e7432353629536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220ed0b7a4f177624d148901a47748d4009e6086fb4a76f131374561d1804aee0a964736f6c63430007060033";

type ConnectV2OneInchPolygonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2OneInchPolygonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2OneInchPolygon__factory extends ContractFactory {
  constructor(...args: ConnectV2OneInchPolygonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2OneInchPolygon> {
    return super.deploy(overrides || {}) as Promise<ConnectV2OneInchPolygon>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2OneInchPolygon {
    return super.attach(address) as ConnectV2OneInchPolygon;
  }
  connect(signer: Signer): ConnectV2OneInchPolygon__factory {
    return super.connect(signer) as ConnectV2OneInchPolygon__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2OneInchPolygonInterface {
    return new utils.Interface(_abi) as ConnectV2OneInchPolygonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2OneInchPolygon {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConnectV2OneInchPolygon;
  }
}
