/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  StakingERC20Mapping,
  StakingERC20MappingInterface,
} from "../StakingERC20Mapping";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "stakingMapping",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "stakingPool",
            type: "address",
          },
          {
            internalType: "address",
            name: "stakingToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "rewardToken",
            type: "address",
          },
        ],
        internalType: "struct StakingERC20Mapping.StakingData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class StakingERC20Mapping__factory {
  static readonly abi = _abi;
  static createInterface(): StakingERC20MappingInterface {
    return new utils.Interface(_abi) as StakingERC20MappingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingERC20Mapping {
    return new Contract(address, _abi, signerOrProvider) as StakingERC20Mapping;
  }
}
