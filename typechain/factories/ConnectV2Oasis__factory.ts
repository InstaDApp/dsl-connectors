/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2Oasis,
  ConnectV2OasisInterface,
} from "../ConnectV2Oasis";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogBuy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSell",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "";

type ConnectV2OasisConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2OasisConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2Oasis__factory extends ContractFactory {
  constructor(...args: ConnectV2OasisConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2Oasis> {
    return super.deploy(overrides || {}) as Promise<ConnectV2Oasis>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2Oasis {
    return super.attach(address) as ConnectV2Oasis;
  }
  connect(signer: Signer): ConnectV2Oasis__factory {
    return super.connect(signer) as ConnectV2Oasis__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2OasisInterface {
    return new utils.Interface(_abi) as ConnectV2OasisInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2Oasis {
    return new Contract(address, _abi, signerOrProvider) as ConnectV2Oasis;
  }
}
