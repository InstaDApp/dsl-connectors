/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ConnectCOMP, ConnectCOMPInterface } from "../ConnectCOMP";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "compAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogClaimedComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "LogDelegate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "ClaimComp",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supplyTokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "borrowTokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "ClaimCompThree",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "ClaimCompTwo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorID",
    outputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600781526020017f434f4d502d763100000000000000000000000000000000000000000000000000815250600090805190602001906200005192919062000066565b503480156200005f57600080fd5b5062000115565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000a957805160ff1916838001178555620000da565b82800160010185558215620000da579182015b82811115620000d9578251825591602001919060010190620000bc565b5b509050620000e99190620000ed565b5090565b6200011291905b808211156200010e576000816000905550600101620000f4565b5090565b90565b611c2780620001256000396000f3fe6080604052600436106100555760003560e01c806306fdde031461005a5780635c19a95c146100ea578063943e45a71461012e578063db225ffb1461015c578063eb15f78114610234578063f3bcf1e614610266575b600080fd5b34801561006657600080fd5b5061006f6102e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100af578082015181840152602081019050610094565b50505050905090810190601f1680156100dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61012c6004803603602081101561010057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610387565b005b61015a6004803603602081101561014457600080fd5b8101908080359060200190929190505050610759565b005b6102326004803603606081101561017257600080fd5b810190808035906020019064010000000081111561018f57600080fd5b8201836020820111156101a157600080fd5b803590602001918460208302840111640100000000831117156101c357600080fd5b9091929391929390803590602001906401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184602083028401116401000000008311171561021857600080fd5b909192939192939080359060200190929190505050610b41565b005b34801561024057600080fd5b506102496110d2565b604051808381526020018281526020019250505060405180910390f35b6102e76004803603604081101561027c57600080fd5b810190808035906020019064010000000081111561029957600080fd5b8201836020820111156102ab57600080fd5b803590602001918460208302840111640100000000831117156102cd57600080fd5b9091929391929390803590602001909291905050506110eb565b005b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561037f5780601f106103545761010080835404028352916020019161037f565b820191906000526020600020905b81548152906001019060200180831161036257829003601f168201915b505050505081565b60006103916116bc565b90508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663587cde1e306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561042757600080fd5b505afa15801561043b573d6000803e3d6000fd5b505050506040513d602081101561045157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614156104cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611bce6024913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16635c19a95c836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b505050507f3316c807c67535995169148e62bfb573b77873f651996dfa210475d5ed82809982604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600060405180807f4c6f6744656c6567617465286164647265737329000000000000000000000000815250601401905060405180910390209050606083604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051602081830303815290604052905060008061065e6110d2565b9150915061066a6116d8565b73ffffffffffffffffffffffffffffffffffffffff1663e14d4fb1838387876040518563ffffffff1660e01b81526004018085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106ea5780820151818401526020810190506106cf565b50505050905090810190601f1680156107175780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561073957600080fd5b505af115801561074d573d6000803e3d6000fd5b50505050505050505050565b60006107636116bc565b905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156107e457600080fd5b505afa1580156107f8573d6000803e3d6000fd5b505050506040513d602081101561080e57600080fd5b810190808051906020019092919050505090506108296116f4565b73ffffffffffffffffffffffffffffffffffffffff1663e9af0292306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561093e57600080fd5b505afa158015610952573d6000803e3d6000fd5b505050506040513d602081101561096857600080fd5b8101908080519060200190929190505050905060006109878284611710565b90506109938582611793565b7f8f9643cd31938c964bb13e492f388a389da3dd8ac15a32c643356f50454f01148186604051808381526020018281526020019250505060405180910390a1600060405180807f4c6f67436c61696d6564436f6d702875696e743235362c75696e743235362900815250601f019050604051809103902090506060828760405160200180838152602001828152602001925050506040516020818303038152906040529050600080610a436110d2565b91509150610a4f6116d8565b73ffffffffffffffffffffffffffffffffffffffff1663e14d4fb1838387876040518563ffffffff1660e01b81526004018085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610acf578082015181840152602081019050610ab4565b50505050905090810190601f168015610afc5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610b1e57600080fd5b505af1158015610b32573d6000803e3d6000fd5b50505050505050505050505050565b6060600080610bd2888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505061181a565b9250925092506060600167ffffffffffffffff81118015610bf257600080fd5b50604051908082528060200260200182016040528015610c215781602001602082028036833780820191505090505b5090503081600081518110610c3257fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000610c766116bc565b905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610cf757600080fd5b505afa158015610d0b573d6000803e3d6000fd5b505050506040513d6020811015610d2157600080fd5b81019080805190602001909291905050509050610d3c6116f4565b73ffffffffffffffffffffffffffffffffffffffff16636810dfa6848888886040518563ffffffff1660e01b81526004018080602001806020018515151515815260200184151515158152602001838103835287818151815260200191508051906020019060200280838360005b83811015610dc5578082015181840152602081019050610daa565b50505050905001838103825286818151815260200191508051906020019060200280838360005b83811015610e07578082015181840152602081019050610dec565b505050509050019650505050505050600060405180830381600087803b158015610e3057600080fd5b505af1158015610e44573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ec757600080fd5b505afa158015610edb573d6000803e3d6000fd5b505050506040513d6020811015610ef157600080fd5b810190808051906020019092919050505090506000610f108284611710565b9050610f1c8982611793565b7f8f9643cd31938c964bb13e492f388a389da3dd8ac15a32c643356f50454f0114818a604051808381526020018281526020019250505060405180910390a1600060405180807f4c6f67436c61696d6564436f6d702875696e743235362c75696e743235362900815250601f019050604051809103902090506060828b60405160200180838152602001828152602001925050506040516020818303038152906040529050600080610fcc6110d2565b91509150610fd86116d8565b73ffffffffffffffffffffffffffffffffffffffff1663e14d4fb1838387876040518563ffffffff1660e01b81526004018085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561105857808201518184015260208101905061103d565b50505050905090810190601f1680156110855780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156110a757600080fd5b505af11580156110bb573d6000803e3d6000fd5b505050505050505050505050505050505050505050565b6000806001601f81915080905080925081935050509091565b600083839050905060608167ffffffffffffffff8111801561110c57600080fd5b5060405190808252806020026020018201604052801561113b5781602001602082028036833780820191505090505b50905060008090505b8281101561128657611154611b12565b73ffffffffffffffffffffffffffffffffffffffff1663104b29e987878481811061117b57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156111f857600080fd5b505afa15801561120c573d6000803e3d6000fd5b505050506040513d602081101561122257600080fd5b810190808051906020019092919050505082828151811061123f57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050611144565b5060006112916116bc565b905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561131257600080fd5b505afa158015611326573d6000803e3d6000fd5b505050506040513d602081101561133c57600080fd5b810190808051906020019092919050505090506113576116f4565b73ffffffffffffffffffffffffffffffffffffffff16631c3db2e030856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156113f85780820151818401526020810190506113dd565b505050509050019350505050600060405180830381600087803b15801561141e57600080fd5b505af1158015611432573d6000803e3d6000fd5b5050505060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156114b557600080fd5b505afa1580156114c9573d6000803e3d6000fd5b505050506040513d60208110156114df57600080fd5b8101908080519060200190929190505050905060006114fe8284611710565b905061150a8782611793565b7f8f9643cd31938c964bb13e492f388a389da3dd8ac15a32c643356f50454f01148188604051808381526020018281526020019250505060405180910390a1600060405180807f4c6f67436c61696d6564436f6d702875696e743235362c75696e743235362900815250601f0190506040518091039020905060608289604051602001808381526020018281526020019250505060405160208183030381529060405290506000806115ba6110d2565b915091506115c66116d8565b73ffffffffffffffffffffffffffffffffffffffff1663e14d4fb1838387876040518563ffffffff1660e01b81526004018085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561164657808201518184015260208101905061162b565b50505050905090810190601f1680156116735780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561169557600080fd5b505af11580156116a9573d6000803e3d6000fd5b5050505050505050505050505050505050565b600073c00e94cb662c3520282e6f5717214004a7f26888905090565b6000732af7ea6cb911035f3eb1ed895cb6692c39ecba97905090565b6000733d9819210a31b4961b30ef54be2aed79b9c9cd3b905090565b600082828403915081111561178d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b60008214611816576117a3611b2e565b73ffffffffffffffffffffffffffffffffffffffff166361e3c94483836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b1580156117fd57600080fd5b505af1158015611811573d6000803e3d6000fd5b505050505b5050565b606060008060008551905060008551905060006118378383611b4a565b90508067ffffffffffffffff8111801561185057600080fd5b5060405190808252806020026020018201604052801561187f5781602001602082028036833780820191505090505b50955060008311156119c45760008090505b838110156119be576118a1611b12565b73ffffffffffffffffffffffffffffffffffffffff1663104b29e98a83815181106118c857fe5b60200260200101516040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561193057600080fd5b505afa158015611944573d6000803e3d6000fd5b505050506040513d602081101561195a57600080fd5b810190808051906020019092919050505087828151811061197757fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050611891565b50600193505b6000821115611b085760008090505b82811015611b02576119e3611b12565b73ffffffffffffffffffffffffffffffffffffffff1663104b29e9898381518110611a0a57fe5b60200260200101516040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611a7257600080fd5b505afa158015611a86573d6000803e3d6000fd5b505050506040513d6020811015611a9c57600080fd5b81019080805190602001909291905050508782860181518110611abb57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806001019150506119d3565b50600194505b5050509250925092565b600073e81f70cc7c0d46e12d70efc60607f16bbd617e88905090565b6000738a5419cfc711b2343c17a6abf4b2bafabb06957f905090565b6000828284019150811015611bc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6d6174682d6e6f742d736166650000000000000000000000000000000000000081525060200191505060405180910390fd5b9291505056fe416c72656164792064656c65676174656420746f2073616d652064656c6567617465652ea2646970667358221220ea4b82006bd61a00c1937f3edbb4ce6f442ad42a999a0be21ddcdaf5140afc8864736f6c63430006050033";

type ConnectCOMPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectCOMPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectCOMP__factory extends ContractFactory {
  constructor(...args: ConnectCOMPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectCOMP> {
    return super.deploy(overrides || {}) as Promise<ConnectCOMP>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectCOMP {
    return super.attach(address) as ConnectCOMP;
  }
  connect(signer: Signer): ConnectCOMP__factory {
    return super.connect(signer) as ConnectCOMP__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectCOMPInterface {
    return new utils.Interface(_abi) as ConnectCOMPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectCOMP {
    return new Contract(address, _abi, signerOrProvider) as ConnectCOMP;
  }
}
