/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  OneInchInterace,
  OneInchInteraceInterface,
} from "../OneInchInterace";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TokenInterface",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "contract TokenInterface",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fromTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "guaranteedAmount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "callAddresses",
        type: "address[]",
      },
      {
        internalType: "bytes",
        name: "callDataConcat",
        type: "bytes",
      },
      {
        internalType: "uint256[]",
        name: "starts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "gasLimitsAndValues",
        type: "uint256[]",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class OneInchInterace__factory {
  static readonly abi = _abi;
  static createInterface(): OneInchInteraceInterface {
    return new utils.Interface(_abi) as OneInchInteraceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OneInchInterace {
    return new Contract(address, _abi, signerOrProvider) as OneInchInterace;
  }
}
