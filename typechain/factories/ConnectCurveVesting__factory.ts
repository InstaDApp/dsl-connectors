/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectCurveVesting,
  ConnectCurveVestingInterface,
} from "../ConnectCurveVesting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogClaim",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052601060808190526f43757276652d76657374696e672d763160801b60a09081526100319160009190610044565b5034801561003e57600080fd5b506100e5565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261007a57600085556100c0565b82601f1061009357805160ff19168380011785556100c0565b828001600101855582156100c0579182015b828111156100c05782518255916020019190600101906100a5565b506100cc9291506100d0565b5090565b5b808211156100cc57600081556001016100d1565b610499806100f46000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306fdde031461003b578063c3490263146100b8575b600080fd5b6100436100dd565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561007d578181015183820152602001610065565b50505050905090810190601f1680156100aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100db600480360360408110156100ce57600080fd5b508035906020013561016b565b005b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156101635780601f1061013857610100808354040283529160200191610163565b820191906000526020600020905b81548152906001019060200180831161014657829003601f168201915b505050505081565b6000610175610346565b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156101c657600080fd5b505afa1580156101da573d6000803e3d6000fd5b505050506040513d60208110156101f057600080fd5b505190506101fc61035e565b6001600160a01b0316631e83409a306040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561024a57600080fd5b505af115801561025e573d6000803e3d6000fd5b505050506000826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156102b157600080fd5b505afa1580156102c5573d6000803e3d6000fd5b505050506040513d60208110156102db57600080fd5b5051905060006102eb8284610376565b90506102f78582610389565b60408051308152602081018390528082018890526060810187905290517f24c74c1d14438a5ca477f564bcc66fd23d5a21e6773a14a0efbbe111b92090f99181900360800190a1505050505050565b73d533a949740bb3306d119cc777fa900ba034cd5290565b73575ccd8e2d300e2377b43478339e364000318e2c90565b60006103828383610406565b9392505050565b81156104025760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b1580156103e957600080fd5b505af11580156103fd573d6000803e3d6000fd5b505050505b5050565b60008282111561045d576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fea2646970667358221220b7626c879e44fcf43b7e2471fda4173c5a7f6516d5a30078b2c4a1b0278fde6664736f6c63430007060033";

type ConnectCurveVestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectCurveVestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectCurveVesting__factory extends ContractFactory {
  constructor(...args: ConnectCurveVestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectCurveVesting> {
    return super.deploy(overrides || {}) as Promise<ConnectCurveVesting>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectCurveVesting {
    return super.attach(address) as ConnectCurveVesting;
  }
  connect(signer: Signer): ConnectCurveVesting__factory {
    return super.connect(signer) as ConnectCurveVesting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectCurveVestingInterface {
    return new utils.Interface(_abi) as ConnectCurveVestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectCurveVesting {
    return new Contract(address, _abi, signerOrProvider) as ConnectCurveVesting;
  }
}
