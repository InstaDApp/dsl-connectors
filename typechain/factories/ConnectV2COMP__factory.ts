/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ConnectV2COMP, ConnectV2COMPInterface } from "../ConnectV2COMP";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "compAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogClaimedComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "LogDelegate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "ClaimComp",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "supplyTokenIds",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "borrowTokenIds",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "ClaimCompThree",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "tokenIds",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "ClaimCompTwo",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061129b806100206000396000f3fe60806040526004361061004a5760003560e01c806306fdde031461004f5780635c19a95c1461007a578063943e45a71461009b5780639adae7a2146100ae5780639bc934b1146100c1575b600080fd5b34801561005b57600080fd5b506100646100d4565b604051610071919061113e565b60405180910390f35b61008d610088366004610ea7565b6100f9565b604051610071929190611151565b61008d6100a9366004610fd3565b61027f565b61008d6100bc366004610f89565b61047a565b61008d6100cf366004610f18565b6107e3565b60405180604001604052806009815260200168434f4d502d76312e3160b81b81525081565b604051632c3e6f0f60e11b815260609081906001600160a01b0384169073c00e94cb662c3520282e6f5717214004a7f268889063587cde1e90610140903090600401611091565b60206040518083038186803b15801561015857600080fd5b505afa15801561016c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101909190610ec3565b6001600160a01b031614156101c05760405162461bcd60e51b81526004016101b79061117f565b60405180910390fd5b6040516317066a5760e21b815273c00e94cb662c3520282e6f5717214004a7f2688890635c19a95c906101f7908690600401611091565b600060405180830381600087803b15801561021157600080fd5b505af1158015610225573d6000803e3d6000fd5b50505050604051806040016040528060148152602001734c6f6744656c656761746528616464726573732960601b8152509150826040516020016102699190611091565b6040516020818303038152906040529050915091565b6040516370a0823160e01b8152606090819073c00e94cb662c3520282e6f5717214004a7f268889060009082906370a08231906102c0903090600401611091565b60206040518083038186803b1580156102d857600080fd5b505afa1580156102ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103109190610feb565b6040516374d7814960e11b8152909150733d9819210a31b4961b30ef54be2aed79b9c9cd3b9063e9af02929061034a903090600401611091565b600060405180830381600087803b15801561036457600080fd5b505af1158015610378573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b03851691506370a08231906103ab903090600401611091565b60206040518083038186803b1580156103c357600080fd5b505afa1580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610feb565b905060006104098284610a4d565b90506104158782610a60565b6040518060400160405280601f81526020017f4c6f67436c61696d6564436f6d702875696e743235362c75696e743235362900815250955080876040516020016104609291906111fa565b604051602081830303815290604052945050505050915091565b6060808360008167ffffffffffffffff8111801561049757600080fd5b506040519080825280602002602001820160405280156104c1578160200160208202803683370190505b50905060005b828110156105e65760008073e7a85d0addb972a4f0a4e57b698b37f171519e886311f45e9c8b8b868181106104f857fe5b905060200281019061050a9190611208565b6040518363ffffffff1660e01b815260040161052792919061110f565b604080518083038186803b15801561053e57600080fd5b505afa158015610552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105769190610edf565b90925090506001600160a01b0382161580159061059b57506001600160a01b03811615155b6105b75760405162461bcd60e51b81526004016101b7906111c3565b808484815181106105c457fe5b6001600160a01b039092166020928302919091019091015250506001016104c7565b506040516370a0823160e01b815273c00e94cb662c3520282e6f5717214004a7f268889060009082906370a0823190610623903090600401611091565b60206040518083038186803b15801561063b57600080fd5b505afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106739190610feb565b60405162e1ed9760e51b8152909150733d9819210a31b4961b30ef54be2aed79b9c9cd3b90631c3db2e0906106ae90309087906004016110a5565b600060405180830381600087803b1580156106c857600080fd5b505af11580156106dc573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b03851691506370a082319061070f903090600401611091565b60206040518083038186803b15801561072757600080fd5b505afa15801561073b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f9190610feb565b9050600061076d8284610a4d565b90506107798982610a60565b6040518060400160405280601f81526020017f4c6f67436c61696d6564436f6d702875696e743235362c75696e743235362900815250975080896040516020016107c49291906111fa565b6040516020818303038152906040529650505050505050935093915050565b60608060008060006107f78a8a8a8a610add565b60408051600180825281830190925293965091945092506000919060208083019080368337019050509050308160008151811061083057fe5b6001600160a01b03909216602092830291909101909101526040516370a0823160e01b815273c00e94cb662c3520282e6f5717214004a7f268889060009082906370a0823190610884903090600401611091565b60206040518083038186803b15801561089c57600080fd5b505afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190610feb565b6040516334086fd360e11b8152909150733d9819210a31b4961b30ef54be2aed79b9c9cd3b90636810dfa6906109149086908a908a908a906004016110d1565b600060405180830381600087803b15801561092e57600080fd5b505af1158015610942573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b03851691506370a0823190610975903090600401611091565b60206040518083038186803b15801561098d57600080fd5b505afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190610feb565b905060006109d38284610a4d565b90506109df8b82610a60565b6040518060400160405280601f81526020017f4c6f67436c61696d6564436f6d702875696e743235362c75696e7432353629008152509950808b604051602001610a2a9291906111fa565b604051602081830303815290604052985050505050505050509550959350505050565b6000610a598383610da0565b9392505050565b8115610ad95760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b158015610ac057600080fd5b505af1158015610ad4573d6000803e3d6000fd5b505050505b5050565b6060600080858482610aef8383610dfd565b90508067ffffffffffffffff81118015610b0857600080fd5b50604051908082528060200260200182016040528015610b32578160200160208202803683370190505b5095508215610c63576001935060005b83811015610c615760008073e7a85d0addb972a4f0a4e57b698b37f171519e886311f45e9c8e8e86818110610b7357fe5b9050602002810190610b859190611208565b6040518363ffffffff1660e01b8152600401610ba292919061110f565b604080518083038186803b158015610bb957600080fd5b505afa158015610bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf19190610edf565b90925090506001600160a01b03821615801590610c1657506001600160a01b03811615155b610c325760405162461bcd60e51b81526004016101b7906111c3565b80898481518110610c3f57fe5b6001600160a01b03909216602092830291909101909101525050600101610b42565b505b8115610d93576001945060005b82811015610d915760008073e7a85d0addb972a4f0a4e57b698b37f171519e886311f45e9c8c8c86818110610ca157fe5b9050602002810190610cb39190611208565b6040518363ffffffff1660e01b8152600401610cd092919061110f565b604080518083038186803b158015610ce757600080fd5b505afa158015610cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1f9190610edf565b90925090506001600160a01b03821615801590610d4457506001600160a01b03811615155b610d605760405162461bcd60e51b81526004016101b7906111c3565b808984880181518110610d6f57fe5b6001600160a01b03909216602092830291909101909101525050600101610c70565b505b5050509450945094915050565b600082821115610df7576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000610a598383600082820183811015610a59576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008083601f840112610e6f578182fd5b50813567ffffffffffffffff811115610e86578182fd5b6020830191508360208083028501011115610ea057600080fd5b9250929050565b600060208284031215610eb8578081fd5b8135610a598161124d565b600060208284031215610ed4578081fd5b8151610a598161124d565b60008060408385031215610ef1578081fd5b8251610efc8161124d565b6020840151909250610f0d8161124d565b809150509250929050565b600080600080600060608688031215610f2f578081fd5b853567ffffffffffffffff80821115610f46578283fd5b610f5289838a01610e5e565b90975095506020880135915080821115610f6a578283fd5b50610f7788828901610e5e565b96999598509660400135949350505050565b600080600060408486031215610f9d578283fd5b833567ffffffffffffffff811115610fb3578384fd5b610fbf86828701610e5e565b909790965060209590950135949350505050565b600060208284031215610fe4578081fd5b5035919050565b600060208284031215610ffc578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561103b5781516001600160a01b031687529582019590820190600101611016565b509495945050505050565b60008151808452815b8181101561106b5760208185018101518683018201520161104f565b8181111561107c5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03831681526040602082018190526000906110c990830184611003565b949350505050565b6000608082526110e46080830187611003565b82810360208401526110f68187611003565b9415156040840152505090151560609091015292915050565b60006020825282602083015282846040840137818301604090810191909152601f909201601f19160101919050565b600060208252610a596020830184611046565b6000604082526111646040830185611046565b82810360208401526111768185611046565b95945050505050565b60208082526024908201527f416c72656164792064656c65676174656420746f2073616d652064656c6567616040820152633a32b29760e11b606082015260800190565b6020808252601c908201527f696e76616c696420746f6b656e2f63746f6b656e206164647265737300000000604082015260600190565b918252602082015260400190565b6000808335601e1984360301811261121e578283fd5b83018035915067ffffffffffffffff821115611238578283fd5b602001915036819003821315610ea057600080fd5b6001600160a01b038116811461126257600080fd5b5056fea26469706673582212206bab6dfb52b8055f4c2ac85da31ff371aeb8436e586cedbbab0098232164f96664736f6c63430007060033";

type ConnectV2COMPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2COMPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2COMP__factory extends ContractFactory {
  constructor(...args: ConnectV2COMPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2COMP> {
    return super.deploy(overrides || {}) as Promise<ConnectV2COMP>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2COMP {
    return super.attach(address) as ConnectV2COMP;
  }
  connect(signer: Signer): ConnectV2COMP__factory {
    return super.connect(signer) as ConnectV2COMP__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2COMPInterface {
    return new utils.Interface(_abi) as ConnectV2COMPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2COMP {
    return new Contract(address, _abi, signerOrProvider) as ConnectV2COMP;
  }
}
