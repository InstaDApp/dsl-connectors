/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectPolygonBridge,
  ConnectPolygonBridgeInterface,
} from "../ConnectPolygonBridge";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "targetDsa",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "connectorID",
    outputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetDsa",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061078a806100206000396000f3fe6080604052600436106100345760003560e01c806306fdde0314610039578063933999fb146100c3578063eb15f78114610107575b600080fd5b34801561004557600080fd5b5061004e610135565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610088578181015183820152602001610070565b50505050905090810190601f1680156100b55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610105600480360360a08110156100d957600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060800135610164565b005b34801561011357600080fd5b5061011c610633565b6040805192835260208301919091528051918290030190f35b60405180604001604052806013815260200172506f6c79676f6e2d4272696467652d76312e3160681b81525081565b6000610170838561063b565b90506001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561022b5760001981146101a657806101a8565b475b905073a0c68c638235ee32657e8f720a23cec1bfc77c776001600160a01b0316634faa8a2682886040518363ffffffff1660e01b815260040180826001600160a01b031681526020019150506000604051808303818588803b15801561020d57600080fd5b505af1158015610221573d6000803e3d6000fd5b50505050506105c9565b84600019821461023b57816102ae565b604080516370a0823160e01b815230600482015290516001600160a01b038316916370a08231916024808301926020929190829003018186803b15801561028157600080fd5b505afa158015610295573d6000803e3d6000fd5b505050506040513d60208110156102ab57600080fd5b50515b60408051633a9831f160e21b81526001600160a01b0389166004820152905191935060009173a0c68c638235ee32657e8f720a23cec1bfc77c779163ea60c7c4916024808301926020929190829003018186803b15801561030e57600080fd5b505afa158015610322573d6000803e3d6000fd5b505050506040513d602081101561033857600080fd5b50516001600160a01b0316146104ca576040805163095ea7b360e01b81527340ec5b33f54e0e8a33a975908c5ba1c14e5bbbdf60048201526024810184905290516001600160a01b0383169163095ea7b391604480830192600092919082900301818387803b1580156103aa57600080fd5b505af11580156103be573d6000803e3d6000fd5b50506040805160208082018790528251808303820181528284019384905263e3dec8fb60e01b9093526001600160a01b038c811660448401908152908c166064840152606060848401908152845160a4850152845173a0c68c638235ee32657e8f720a23cec1bfc77c77975063e3dec8fb96508e958e95909460c4909101919085019080838360005b8381101561045f578181015183820152602001610447565b50505050905090810190601f16801561048c5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156104ad57600080fd5b505af11580156104c1573d6000803e3d6000fd5b505050506105c7565b6040805163095ea7b360e01b815273401f6c983ea34274ec46f84d70b31c151321188b60048201526024810184905290516001600160a01b0383169163095ea7b391604480830192600092919082900301818387803b15801561052c57600080fd5b505af1158015610540573d6000803e3d6000fd5b505060408051638b9e4f9360e01b81526001600160a01b038a811660048301528b16602482015260448101869052905173401f6c983ea34274ec46f84d70b31c151321188b9350638b9e4f939250606480830192600092919082900301818387803b1580156105ae57600080fd5b505af11580156105c2573d6000803e3d6000fd5b505050505b505b6105d382826106d7565b604080516001600160a01b03808916825287166020820152808201839052606081018590526080810184905290517fab14747d46633612ff5c029a3117f98ffb6506ebf31bab40972f911b7dd188919181900360a00190a1505050505050565b600190606490565b600082156106ce57738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561069d57600080fd5b505af11580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b50516106d0565b815b9392505050565b81156107505760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b15801561073757600080fd5b505af115801561074b573d6000803e3d6000fd5b505050505b505056fea2646970667358221220f143084615690c2fcb769d567ccebe518388c457eff788973684ba8885a6ad1c64736f6c63430007060033";

type ConnectPolygonBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectPolygonBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectPolygonBridge__factory extends ContractFactory {
  constructor(...args: ConnectPolygonBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectPolygonBridge> {
    return super.deploy(overrides || {}) as Promise<ConnectPolygonBridge>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectPolygonBridge {
    return super.attach(address) as ConnectPolygonBridge;
  }
  connect(signer: Signer): ConnectPolygonBridge__factory {
    return super.connect(signer) as ConnectPolygonBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectPolygonBridgeInterface {
    return new utils.Interface(_abi) as ConnectPolygonBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectPolygonBridge {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConnectPolygonBridge;
  }
}
