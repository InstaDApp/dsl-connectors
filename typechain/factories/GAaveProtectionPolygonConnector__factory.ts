/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GAaveProtectionPolygonConnector,
  GAaveProtectionPolygonConnectorInterface,
} from "../GAaveProtectionPolygonConnector";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dsa",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "action",
        type: "address",
      },
    ],
    name: "LogCancelAndRevoke",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dsa",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "action",
        type: "address",
      },
    ],
    name: "LogCancelProtection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dsa",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "action",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantedHealthFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumHealthFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPermanent",
        type: "bool",
      },
    ],
    name: "LogSubmitProtection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dsa",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "action",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantedHealthFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minimumHealthFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPermanent",
        type: "bool",
      },
    ],
    name: "LogUpdateProtection",
    type: "event",
  },
  {
    inputs: [],
    name: "cancelAndRevoke",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelProtection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wantedHealthFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumHealthFactor",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPermanent",
        type: "bool",
      },
    ],
    name: "submitProtection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wantedHealthFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minimumHealthFactor",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPermanent",
        type: "bool",
      },
    ],
    name: "updateProtection",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d80806100206000396000f3fe60806040526004361061004a5760003560e01c806306fdde031461004f5780631b8a6317146100d957806326bfb6b414610106578063a9f93a4f1461010e578063ae13302b14610139575b600080fd5b34801561005b57600080fd5b50610064610141565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561009e578181015183820152602001610086565b50505050905090810190601f1680156100cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610104600480360360608110156100ef57600080fd5b5080359060208101359060400135151561015d565b005b6101046101c6565b6101046004803603606081101561012457600080fd5b50803590602081013590604001351515610226565b61010461028f565b604051806060016040528060278152602001610d246027913981565b6101688383836102da565b604080518481526020810184905282151581830152905173c38b6dbd0f84777aa4fae2d36fe1506428a22b9b9130917f79ab472918df7dc198728f0d4eeeae318a6bcd2078a9973fbafa180950b6dde79181900360600190a3505050565b6101ce610394565b156101db576101db61043d565b6101e36104bc565b60405173c38b6dbd0f84777aa4fae2d36fe1506428a22b9b9030907f61cd424f4f8b68f35fa30fc485a203a22c1a84e216dde560f9962464b7152ea890600090a3565b610231838383610634565b604080518481526020810184905282151581830152905173c38b6dbd0f84777aa4fae2d36fe1506428a22b9b9130917ffa096b90fca8a96a342c07574a8385d2457476a301ca54f3da91397d65ab478f9181900360600190a3505050565b61029761043d565b60405173c38b6dbd0f84777aa4fae2d36fe1506428a22b9b9030907f14ad85409179bbacc859b52126be3f39c83b86c2306b3caf8024f804809fc90090600090a3565b6102e2610689565b7318fabc997fdd624764e1974b283b1b904b66d6136001600160a01b031663c2d9a0a873c38b6dbd0f84777aa4fae2d36fe1506428a22b9b85853060405160200161032f93929190610ce0565b604051602081830303815290604052846040518463ffffffff1660e01b815260040161035d93929190610c5c565b600060405180830381600087803b15801561037757600080fd5b505af115801561038b573d6000803e3d6000fd5b50505050505050565b604051632b0b0d0560e01b815260009081907318fabc997fdd624764e1974b283b1b904b66d61390632b0b0d05906103e690309073c38b6dbd0f84777aa4fae2d36fe1506428a22b9b90600401610c42565b60206040518083038186803b1580156103fe57600080fd5b505afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190610b26565b1415905090565b6040516376aafbdb60e01b81527318fabc997fdd624764e1974b283b1b904b66d613906376aafbdb906104889073c38b6dbd0f84777aa4fae2d36fe1506428a22b9b90600401610c2e565b600060405180830381600087803b1580156104a257600080fd5b505af11580156104b6573d6000803e3d6000fd5b50505050565b60006104c6610801565b905060005b8151811015610630578181815181106104e057fe5b60200260200101516001600160a01b031663dd62ed3e3073c38b6dbd0f84777aa4fae2d36fe1506428a22b9b6040518363ffffffff1660e01b8152600401610529929190610c42565b60206040518083038186803b15801561054157600080fd5b505afa158015610555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105799190610b26565b156106285781818151811061058a57fe5b60200260200101516001600160a01b031663095ea7b373c38b6dbd0f84777aa4fae2d36fe1506428a22b9b60006040518363ffffffff1660e01b81526004016105d4929190610cc7565b602060405180830381600087803b1580156105ee57600080fd5b505af1158015610602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106269190610aff565b505b6001016104cb565b5050565b61063c610689565b7318fabc997fdd624764e1974b283b1b904b66d6136001600160a01b03166394f0f29673c38b6dbd0f84777aa4fae2d36fe1506428a22b9b85853060405160200161032f93929190610ce0565b6000610693610801565b905060005b8151811015610630576000198282815181106106b057fe5b60200260200101516001600160a01b031663dd62ed3e3073c38b6dbd0f84777aa4fae2d36fe1506428a22b9b6040518363ffffffff1660e01b81526004016106f9929190610c42565b60206040518083038186803b15801561071157600080fd5b505afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190610b26565b146107f95781818151811061075a57fe5b60200260200101516001600160a01b031663095ea7b373c38b6dbd0f84777aa4fae2d36fe1506428a22b9b6000196040518363ffffffff1660e01b81526004016107a5929190610cc7565b602060405180830381600087803b1580156107bf57600080fd5b505af11580156107d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f79190610aff565b505b600101610698565b60606000738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf6001600160a01b031663d1946dbc6040518163ffffffff1660e01b815260040160006040518083038186803b15801561085257600080fd5b505afa158015610866573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261088e9190810190610a57565b9050805167ffffffffffffffff811180156108a857600080fd5b506040519080825280602002602001820160405280156108d2578160200160208202803683370190505b50915060005b81518110156109b557738dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf6001600160a01b03166335ea6a7583838151811061091057fe5b60200260200101516040518263ffffffff1660e01b81526004016109349190610c2e565b6101806040518083038186803b15801561094d57600080fd5b505afa158015610961573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109859190610b3e565b60e0015183828151811061099557fe5b6001600160a01b03909216602092830291909101909101526001016108d8565b505090565b80516001600160a01b03811681146109d157600080fd5b919050565b6000602082840312156109e7578081fd5b6040516020810181811067ffffffffffffffff82111715610a0457fe5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff811681146109d157600080fd5b805164ffffffffff811681146109d157600080fd5b805160ff811681146109d157600080fd5b60006020808385031215610a69578182fd5b825167ffffffffffffffff80821115610a80578384fd5b818501915085601f830112610a93578384fd5b815181811115610a9f57fe5b8381029150610aaf848301610cff565b8181528481019084860184860187018a1015610ac9578788fd5b8795505b83861015610af257610ade816109ba565b835260019590950194918601918601610acd565b5098975050505050505050565b600060208284031215610b10578081fd5b81518015158114610b1f578182fd5b9392505050565b600060208284031215610b37578081fd5b5051919050565b6000610180808385031215610b51578182fd5b610b5a81610cff565b9050610b6684846109d6565b8152610b7460208401610a11565b6020820152610b8560408401610a11565b6040820152610b9660608401610a11565b6060820152610ba760808401610a11565b6080820152610bb860a08401610a11565b60a0820152610bc960c08401610a31565b60c0820152610bda60e084016109ba565b60e0820152610100610bed8185016109ba565b90820152610120610bff8482016109ba565b90820152610140610c118482016109ba565b90820152610160610c23848201610a46565b908201529392505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b600060018060a01b038516825260206060818401528451806060850152825b81811015610c9757868101830151858201608001528201610c7b565b81811115610ca85783608083870101525b5093151560408401525050601f91909101601f19160160800192915050565b6001600160a01b03929092168252602082015260400190565b92835260208301919091526001600160a01b0316604082015260600190565b60405181810167ffffffffffffffff81118282101715610d1b57fe5b60405291905056fe47656c61746f4161766550726f74656374696f6e506f6c79676f6e436f6e6e6563746f722d7631a2646970667358221220a96bdcd222f7f4f973cbaec05766f322597640e065511a4b3a62bc4648fbbe3564736f6c63430007060033";

type GAaveProtectionPolygonConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GAaveProtectionPolygonConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GAaveProtectionPolygonConnector__factory extends ContractFactory {
  constructor(...args: GAaveProtectionPolygonConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GAaveProtectionPolygonConnector> {
    return super.deploy(
      overrides || {}
    ) as Promise<GAaveProtectionPolygonConnector>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GAaveProtectionPolygonConnector {
    return super.attach(address) as GAaveProtectionPolygonConnector;
  }
  connect(signer: Signer): GAaveProtectionPolygonConnector__factory {
    return super.connect(signer) as GAaveProtectionPolygonConnector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GAaveProtectionPolygonConnectorInterface {
    return new utils.Interface(
      _abi
    ) as GAaveProtectionPolygonConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GAaveProtectionPolygonConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GAaveProtectionPolygonConnector;
  }
}
