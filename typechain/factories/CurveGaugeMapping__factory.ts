/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveGaugeMapping,
  CurveGaugeMappingInterface,
} from "../CurveGaugeMapping";

const _abi = [
  {
    inputs: [
      {
        internalType: "string[]",
        name: "gaugeNames",
        type: "string[]",
      },
      {
        internalType: "address[]",
        name: "gaugeAddresses",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "rewardTokens",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "gaugeName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gaugeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "rewardToken",
        type: "bool",
      },
    ],
    name: "LogAddGaugeMapping",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "gaugeName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gaugeAddress",
        type: "address",
      },
    ],
    name: "LogRemoveGaugeMapping",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "gaugeNames",
        type: "string[]",
      },
      {
        internalType: "address[]",
        name: "gaugeAddresses",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "rewardTokens",
        type: "bool[]",
      },
    ],
    name: "addGaugeMappings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "gaugeMapping",
    outputs: [
      {
        internalType: "address",
        name: "gaugeAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "rewardToken",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instaIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gaugeName",
        type: "string",
      },
      {
        internalType: "address",
        name: "gaugeAddress",
        type: "address",
      },
    ],
    name: "removeGaugeMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016000553480156200001657600080fd5b5060405162001f2b38038062001f2b83398181016040528101906200003c9190620005d1565b815183511480156200004f575080518251145b62000091576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000889062000863565b60405180910390fd5b60005b83518163ffffffff161015620001135762000105848263ffffffff1681518110620000bb57fe5b6020026020010151848363ffffffff1681518110620000d657fe5b6020026020010151848463ffffffff1681518110620000f157fe5b60200260200101516200011d60201b60201c565b808060010191505062000094565b5050505062000aba565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000190576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018790620008eb565b60405180910390fd5b602083511115620001d8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001cf9062000885565b60405180910390fd5b6000620001eb846200035b60201b60201c565b9050600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000295576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200028c90620008c9565b60405180910390fd5b826001600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816001600083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507fc852b29a6bdd8aad2d32d314e2199054ad14e3d5b2d4e429b0c4ee7ecb7e817c8484846040516200034d939291906200081f565b60405180910390a150505050565b60008082511415620003a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200039b90620008a7565b60405180910390fd5b60208201519050919050565b600081519050620003c18162000a86565b92915050565b600082601f830112620003d957600080fd5b8151620003f0620003ea826200093b565b6200090d565b915081818352602084019350602081019050838560208402820111156200041657600080fd5b60005b838110156200044a57816200042f8882620003b0565b84526020840193506020830192505060018101905062000419565b5050505092915050565b600082601f8301126200046657600080fd5b81516200047d620004778262000964565b6200090d565b91508181835260208401935060208101905083856020840282011115620004a357600080fd5b60005b83811015620004d75781620004bc88826200055e565b845260208401935060208301925050600181019050620004a6565b5050505092915050565b600082601f830112620004f357600080fd5b81516200050a62000504826200098d565b6200090d565b9150818183526020840193506020810190508360005b8381101562000554578151860162000539888262000575565b84526020840193506020830192505060018101905062000520565b5050505092915050565b6000815190506200056f8162000aa0565b92915050565b600082601f8301126200058757600080fd5b81516200059e6200059882620009b6565b6200090d565b91508082526020830160208301858383011115620005bb57600080fd5b620005c883828462000a3f565b50505092915050565b600080600060608486031215620005e757600080fd5b600084015167ffffffffffffffff8111156200060257600080fd5b6200061086828701620004e1565b935050602084015167ffffffffffffffff8111156200062e57600080fd5b6200063c86828701620003c7565b925050604084015167ffffffffffffffff8111156200065a57600080fd5b620006688682870162000454565b9150509250925092565b6200067d81620009ff565b82525050565b6200068e8162000a13565b82525050565b6000620006a182620009e3565b620006ad8185620009ee565b9350620006bf81856020860162000a3f565b620006ca8162000a75565b840191505092915050565b6000620006e4601083620009ee565b91507f6c656e6774682d6e6f742d6d61746368000000000000000000000000000000006000830152602082019050919050565b600062000726600e83620009ee565b91507f4c656e6774682d657863656564730000000000000000000000000000000000006000830152602082019050919050565b600062000768600c83620009ee565b91507f537472696e672d456d70747900000000000000000000000000000000000000006000830152602082019050919050565b6000620007aa601783620009ee565b91507f6761756765506f6f6c2d616c72656164792d61646465640000000000000000006000830152602082019050919050565b6000620007ec601683620009ee565b91507f6761756765416464726573732d6e6f742d7661696c64000000000000000000006000830152602082019050919050565b600060608201905081810360008301526200083b818662000694565b90506200084c602083018562000672565b6200085b604083018462000683565b949350505050565b600060208201905081810360008301526200087e81620006d5565b9050919050565b60006020820190508181036000830152620008a08162000717565b9050919050565b60006020820190508181036000830152620008c28162000759565b9050919050565b60006020820190508181036000830152620008e4816200079b565b9050919050565b600060208201905081810360008301526200090681620007dd565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200093157600080fd5b8060405250919050565b600067ffffffffffffffff8211156200095357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156200097c57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115620009a557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115620009ce57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600062000a0c8262000a1f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101562000a5f57808201518184015260208101905062000a42565b8381111562000a6f576000848401525b50505050565b6000601f19601f8301169050919050565b62000a9181620009ff565b811462000a9d57600080fd5b50565b62000aab8162000a13565b811462000ab757600080fd5b50565b6114618062000aca6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806365050a681161005b57806365050a68146100da578063a41098bf146100f8578063d0c257c914610116578063f321b9e2146101325761007d565b806306fdde0314610082578063357c9cec146100a057806354fd4d50146100bc575b600080fd5b61008a610163565b6040516100979190611093565b60405180910390f35b6100ba60048036038101906100b59190610cc2565b61019c565b005b6100c461040b565b6040516100d19190611203565b60405180910390f35b6100e2610411565b6040516100ef9190611034565b60405180910390f35b610100610429565b60405161010d9190611034565b60405180910390f35b610130600480360381019061012b9190610dab565b610441565b005b61014c60048036038101906101479190610d82565b610794565b60405161015a92919061106a565b60405180910390f35b6040518060400160405280601681526020017f43757276652d47617567652d4d617070696e672d76310000000000000000000081525081565b73d6a602c01a023b98ecfb29df02fba380d3b21e0c73ffffffffffffffffffffffffffffffffffffffff16636b1056ae336040518263ffffffff1660e01b81526004016101e9919061104f565b60206040518083038186803b15801561020157600080fd5b505afa158015610215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102399190610d59565b8061030057503373ffffffffffffffffffffffffffffffffffffffff16732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff1663ee97f7f36040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b057600080fd5b505afa1580156102c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e89190610c99565b73ffffffffffffffffffffffffffffffffffffffff16145b61033f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033690611143565b60405180910390fd5b81518351148015610351575080518251145b610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790611123565b60405180910390fd5b60005b83518163ffffffff161015610405576103f8848263ffffffff16815181106103b757fe5b6020026020010151848363ffffffff16815181106103d157fe5b6020026020010151848463ffffffff16815181106103eb57fe5b60200260200101516107e5565b8080600101915050610393565b50505050565b60005481565b73d6a602c01a023b98ecfb29df02fba380d3b21e0c81565b732971adfa57b20e5a416ae5a708a8655a9c74f72381565b73d6a602c01a023b98ecfb29df02fba380d3b21e0c73ffffffffffffffffffffffffffffffffffffffff16636b1056ae336040518263ffffffff1660e01b815260040161048e919061104f565b60206040518083038186803b1580156104a657600080fd5b505afa1580156104ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104de9190610d59565b806105a557503373ffffffffffffffffffffffffffffffffffffffff16732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff1663ee97f7f36040518163ffffffff1660e01b815260040160206040518083038186803b15801561055557600080fd5b505afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d9190610c99565b73ffffffffffffffffffffffffffffffffffffffff16145b6105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90611143565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064b906111c3565b60405180910390fd5b600061065f83610a10565b90508173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc906111e3565b60405180910390fd5b60016000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550507f6cda43f81d885c651884a456d95baa67fd6db8e412a606c812308e08bd348b4083836040516107879291906110b5565b60405180910390a1505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c906111c3565b60405180910390fd5b60208351111561089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190611163565b60405180910390fd5b60006108a584610a10565b9050600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461094c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610943906111a3565b60405180910390fd5b826001600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816001600083815260200190815260200160002060000160146101000a81548160ff0219169083151502179055507fc852b29a6bdd8aad2d32d314e2199054ad14e3d5b2d4e429b0c4ee7ecb7e817c848484604051610a02939291906110e5565b60405180910390a150505050565b60008082511415610a56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4d90611183565b60405180910390fd5b60208201519050919050565b600081359050610a71816113e6565b92915050565b600081519050610a86816113e6565b92915050565b600082601f830112610a9d57600080fd5b8135610ab0610aab8261124b565b61121e565b91508181835260208401935060208101905083856020840282011115610ad557600080fd5b60005b83811015610b055781610aeb8882610a62565b845260208401935060208301925050600181019050610ad8565b5050505092915050565b600082601f830112610b2057600080fd5b8135610b33610b2e82611273565b61121e565b91508181835260208401935060208101905083856020840282011115610b5857600080fd5b60005b83811015610b885781610b6e8882610c06565b845260208401935060208301925050600181019050610b5b565b5050505092915050565b600082601f830112610ba357600080fd5b8135610bb6610bb18261129b565b61121e565b9150818183526020840193506020810190508360005b83811015610bfc5781358601610be28882610c45565b845260208401935060208301925050600181019050610bcc565b5050505092915050565b600081359050610c15816113fd565b92915050565b600081519050610c2a816113fd565b92915050565b600081359050610c3f81611414565b92915050565b600082601f830112610c5657600080fd5b8135610c69610c64826112c3565b61121e565b91508082526020830160208301858383011115610c8557600080fd5b610c90838284611393565b50505092915050565b600060208284031215610cab57600080fd5b6000610cb984828501610a77565b91505092915050565b600080600060608486031215610cd757600080fd5b600084013567ffffffffffffffff811115610cf157600080fd5b610cfd86828701610b92565b935050602084013567ffffffffffffffff811115610d1a57600080fd5b610d2686828701610a8c565b925050604084013567ffffffffffffffff811115610d4357600080fd5b610d4f86828701610b0f565b9150509250925092565b600060208284031215610d6b57600080fd5b6000610d7984828501610c1b565b91505092915050565b600060208284031215610d9457600080fd5b6000610da284828501610c30565b91505092915050565b60008060408385031215610dbe57600080fd5b600083013567ffffffffffffffff811115610dd857600080fd5b610de485828601610c45565b9250506020610df585828601610a62565b9150509250929050565b610e088161135d565b82525050565b610e178161130b565b82525050565b610e268161131d565b82525050565b6000610e37826112ef565b610e4181856112fa565b9350610e518185602086016113a2565b610e5a816113d5565b840191505092915050565b6000610e726010836112fa565b91507f6c656e6774682d6e6f742d6d61746368000000000000000000000000000000006000830152602082019050919050565b6000610eb26009836112fa565b91507f6e6f742d436869656600000000000000000000000000000000000000000000006000830152602082019050919050565b6000610ef2600e836112fa565b91507f4c656e6774682d657863656564730000000000000000000000000000000000006000830152602082019050919050565b6000610f32600c836112fa565b91507f537472696e672d456d70747900000000000000000000000000000000000000006000830152602082019050919050565b6000610f726017836112fa565b91507f6761756765506f6f6c2d616c72656164792d61646465640000000000000000006000830152602082019050919050565b6000610fb26016836112fa565b91507f6761756765416464726573732d6e6f742d7661696c64000000000000000000006000830152602082019050919050565b6000610ff26014836112fa565b91507f646966666572656e742d67617567652d706f6f6c0000000000000000000000006000830152602082019050919050565b61102e81611353565b82525050565b60006020820190506110496000830184610e0e565b92915050565b60006020820190506110646000830184610dff565b92915050565b600060408201905061107f6000830185610e0e565b61108c6020830184610e1d565b9392505050565b600060208201905081810360008301526110ad8184610e2c565b905092915050565b600060408201905081810360008301526110cf8185610e2c565b90506110de6020830184610e0e565b9392505050565b600060608201905081810360008301526110ff8186610e2c565b905061110e6020830185610e0e565b61111b6040830184610e1d565b949350505050565b6000602082019050818103600083015261113c81610e65565b9050919050565b6000602082019050818103600083015261115c81610ea5565b9050919050565b6000602082019050818103600083015261117c81610ee5565b9050919050565b6000602082019050818103600083015261119c81610f25565b9050919050565b600060208201905081810360008301526111bc81610f65565b9050919050565b600060208201905081810360008301526111dc81610fa5565b9050919050565b600060208201905081810360008301526111fc81610fe5565b9050919050565b60006020820190506112186000830184611025565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561124157600080fd5b8060405250919050565b600067ffffffffffffffff82111561126257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561128a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156112b257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156112da57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061131682611333565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113688261136f565b9050919050565b600061137a82611381565b9050919050565b600061138c82611333565b9050919050565b82818337600083830152505050565b60005b838110156113c05780820151818401526020810190506113a5565b838111156113cf576000848401525b50505050565b6000601f19601f8301169050919050565b6113ef8161130b565b81146113fa57600080fd5b50565b6114068161131d565b811461141157600080fd5b50565b61141d81611329565b811461142857600080fd5b5056fea264697066735822122085860517efec070c3af4340b8756ab70f5d4a1eeb40d7f1a0607ff18ee87ec0b64736f6c63430006050033";

type CurveGaugeMappingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurveGaugeMappingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurveGaugeMapping__factory extends ContractFactory {
  constructor(...args: CurveGaugeMappingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    gaugeNames: string[],
    gaugeAddresses: string[],
    rewardTokens: boolean[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CurveGaugeMapping> {
    return super.deploy(
      gaugeNames,
      gaugeAddresses,
      rewardTokens,
      overrides || {}
    ) as Promise<CurveGaugeMapping>;
  }
  getDeployTransaction(
    gaugeNames: string[],
    gaugeAddresses: string[],
    rewardTokens: boolean[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      gaugeNames,
      gaugeAddresses,
      rewardTokens,
      overrides || {}
    );
  }
  attach(address: string): CurveGaugeMapping {
    return super.attach(address) as CurveGaugeMapping;
  }
  connect(signer: Signer): CurveGaugeMapping__factory {
    return super.connect(signer) as CurveGaugeMapping__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveGaugeMappingInterface {
    return new utils.Interface(_abi) as CurveGaugeMappingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveGaugeMapping {
    return new Contract(address, _abi, signerOrProvider) as CurveGaugeMapping;
  }
}
