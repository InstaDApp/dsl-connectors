/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2ParaswapAvalanche,
  ConnectV2ParaswapAvalancheInterface,
} from "../ConnectV2ParaswapAvalanche";

const _abi = [
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c00806100206000396000f3fe6080604052600436106100295760003560e01c806306fdde031461002e578063e2450d7c146100b8575b600080fd5b34801561003a57600080fd5b5061004361022b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561007d578181015183820152602001610065565b50505050905090810190601f1680156100aa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61014d600480360360c08110156100ce57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561010e57600080fd5b82018360208201111561012057600080fd5b8035906020019184600183028401116401000000008311171561014257600080fd5b919350915035610252565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561018e578181015183820152602001610176565b50505050905090810190601f1680156101bb5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101ee5781810151838201526020016101d6565b50505050905090810190601f16801561021b5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6040518060400160405280600b81526020016a50617261737761702d763160a81b81525081565b60608060006040518060c001604052808a6001600160a01b031681526020018b6001600160a01b031681526020018981526020016000815260200188815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505091525090506102d78185610352565b9050604051806060016040528060308152602001610b9b60309139602080830151835160608086015160409687015187516001600160a01b03958616968101969096529390921684870152830152608082015260a0808201969096528251808203909601865260c00190915299929850919650505050505050565b61035a610b31565b825160006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561038e57506040840151610420565b600073def171fe48cf0115b1d80b88dc8eab59176fee576001600160a01b031663d2c4b5986040518163ffffffff1660e01b815260040160206040518083038186803b1580156103dd57600080fd5b505afa1580156103f1573d6000803e3d6000fd5b505050506040513d602081101561040757600080fd5b5051604087015190915061041e9084908390610448565b505b61042a8582610590565b6060860181905261043c90859061075d565b84925050505b92915050565b826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561049f57600080fd5b505af19250505080156104b0575060015b61058b576040805163095ea7b360e01b81526001600160a01b03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b15801561050357600080fd5b505af1158015610517573d6000803e3d6000fd5b50505050826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b505050505b505050565b600080836020015190506000806105ab8387600001516107da565b9150915060006105bf82886040015161090a565b905060006105da846105d58a6080015185610923565b610958565b905060006105e786610969565b9050600073def171fe48cf0115b1d80b88dc8eab59176fee576001600160a01b0316898b60a001516040518082805190602001908083835b6020831061063e5780518252601f19909201916020918201910161061f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146106a0576040519150601f19603f3d011682016040523d82523d6000602084013e6106a5565b606091505b50509050806106ed576040805162461bcd60e51b815260206004820152600f60248201526e1c185c985cddd85c0b59985a5b1959608a1b604482015290519081900360640190fd5b60006106f888610969565b90506107048184610a0d565b98508884111561074f576040805162461bcd60e51b8152602060048201526011602482015270546f6f206d75636820736c69707061676560781b604482015290519081900360640190fd5b505050505050505092915050565b81156107d65760408051631878f25160e21b815260048101849052602481018390529051733254ce8f5b1c82431b8f21df01918342215825c2916361e3c94491604480830192600092919082900301818387803b1580156107bd57600080fd5b505af11580156107d1573d6000803e3d6000fd5b505050505b5050565b6000806001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461086b57836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561083a57600080fd5b505afa15801561084e573d6000803e3d6000fd5b505050506040513d602081101561086457600080fd5b505161086e565b60125b91506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146108fe57826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156108cd57600080fd5b505afa1580156108e1573d6000803e3d6000fd5b505050506040513d60208110156108f757600080fd5b5051610901565b60125b90509250929050565b600061091c8284601203600a0a610a19565b9392505050565b6000670de0b6b3a764000061094961093b8585610a21565b6706f05b59d3b20000610a7a565b8161095057fe5b049392505050565b600082601203600a0a828161095057fe5b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610a0657604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156109d557600080fd5b505afa1580156109e9573d6000803e3d6000fd5b505050506040513d60208110156109ff57600080fd5b5051610442565b4792915050565b600061091c8383610ad4565b600061091c83835b600082610a3057506000610442565b82820282848281610a3d57fe5b041461091c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610b7a6021913960400191505060405180910390fd5b60008282018381101561091c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600082821115610b2b576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160608152509056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774c6f675377617028616464726573732c616464726573732c75696e743235362c75696e743235362c75696e7432353629a26469706673582212201257421c36162dca71ae394b742b3774ce58a01c790d175d656533d11dff83c064736f6c63430007060033";

type ConnectV2ParaswapAvalancheConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2ParaswapAvalancheConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2ParaswapAvalanche__factory extends ContractFactory {
  constructor(...args: ConnectV2ParaswapAvalancheConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2ParaswapAvalanche> {
    return super.deploy(overrides || {}) as Promise<ConnectV2ParaswapAvalanche>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2ParaswapAvalanche {
    return super.attach(address) as ConnectV2ParaswapAvalanche;
  }
  connect(signer: Signer): ConnectV2ParaswapAvalanche__factory {
    return super.connect(signer) as ConnectV2ParaswapAvalanche__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2ParaswapAvalancheInterface {
    return new utils.Interface(_abi) as ConnectV2ParaswapAvalancheInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2ParaswapAvalanche {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConnectV2ParaswapAvalanche;
  }
}
