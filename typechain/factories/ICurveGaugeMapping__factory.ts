/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ICurveGaugeMapping,
  ICurveGaugeMappingInterface,
} from "../ICurveGaugeMapping";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "gaugeMapping",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "gaugeAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "rewardToken",
            type: "bool",
          },
        ],
        internalType: "struct ICurveGaugeMapping.GaugeData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ICurveGaugeMapping__factory {
  static readonly abi = _abi;
  static createInterface(): ICurveGaugeMappingInterface {
    return new utils.Interface(_abi) as ICurveGaugeMappingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICurveGaugeMapping {
    return new Contract(address, _abi, signerOrProvider) as ICurveGaugeMapping;
  }
}
