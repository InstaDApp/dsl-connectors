/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { MockProtocol, MockProtocolInterface } from "../MockProtocol";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "mockOne",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mockTwo",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogMock",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "mockFunction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

export class MockProtocol__factory {
  static readonly abi = _abi;
  static createInterface(): MockProtocolInterface {
    return new utils.Interface(_abi) as MockProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockProtocol {
    return new Contract(address, _abi, signerOrProvider) as MockProtocol;
  }
}
