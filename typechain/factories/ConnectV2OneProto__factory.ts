/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnectV2OneProto,
  ConnectV2OneProtoInterface,
} from "../ConnectV2OneProto";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSell",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "LogSellMulti",
    type: "event",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "sellAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "distribution",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "disableDexes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "sellAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitAmt",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "distribution",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "disableDexes",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "getId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "setId",
        type: "uint256",
      },
    ],
    name: "sellMulti",
    outputs: [
      {
        internalType: "string",
        name: "_eventName",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_eventParam",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600b60808190526a3150726f746f2d76312e3160a81b60a09081526200002e916000919062000043565b503480156200003c57600080fd5b50620000ef565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200007b5760008555620000c6565b82601f106200009657805160ff1916838001178555620000c6565b82800160010185558215620000c6579182015b82811115620000c6578251825591602001919060010190620000a9565b50620000d4929150620000d8565b5090565b5b80821115620000d45760008155600101620000d9565b61132a80620000ff6000396000f3fe6080604052600436106100345760003560e01c806306fdde031461003957806384db08731461006457806390ab67e114610085575b600080fd5b34801561004557600080fd5b5061004e610098565b60405161005b91906111e8565b60405180910390f35b610077610072366004610e88565b610126565b60405161005b9291906111fb565b610077610093366004610f17565b610210565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561011e5780601f106100f35761010080835404028352916020019161011e565b820191906000526020600020905b81548152906001019060200180831161010157829003601f168201915b505050505081565b60608060006040518060e001604052808c6001600160a01b031681526020018d6001600160a01b031681526020018b8152602001600081526020018a815260200189898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050509082525060200187905290506101b08186866103cd565b90506040518060600160405280603881526020016112556038913992508b8b8260600151836040015188886040516020016101f09695949392919061106f565b604051602081830303815290604052915050995099975050505050505050565b60608060008c8c9050905060006040518061010001604052808f8f80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081526020018f8f600081811061027d57fe5b90506020020160208101906102929190610e6e565b6001600160a01b031681526020018f8f600186038181106102af57fe5b90506020020160208101906102c49190610e6e565b6001600160a01b031681526020018d8152602001600081526020018c81526020018b8b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208b810282810182019093528b82529283019290918c918c9182918501908490808284376000920191909152505050915250905061035f81878761042a565b905060405180608001604052806047815260200161128d6047913993508d8d82604001518360200151846080015185606001518b8b6040516020016103ab9897969594939291906110a5565b604051602081830303815290604052925050509a509a98505050505050505050565b6103d5610d68565b60006103e5848660400151610480565b905060001981146103f65780610401565b84516104019061051c565b604086015261040f856105c1565b60608601819052610421908490610732565b50929392505050565b610432610db7565b6000610442848660600151610480565b905060001981146104535780610460565b610460856020015161051c565b606086015261046e856107af565b60808601819052610421908490610732565b6000821561051357738a5419cfc711b2343c17a6abf4b2bafabb06957f6001600160a01b031663a9c70eaa846040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156104e257600080fd5b505af11580156104f6573d6000803e3d6000fd5b505050506040513d602081101561050c57600080fd5b5051610515565b815b9392505050565b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146105b957604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561058857600080fd5b505afa15801561059c573d6000803e3d6000fd5b505050506040513d60208110156105b257600080fd5b50516105bb565b475b92915050565b805160208201516040830151608084015160009392919084906105e990849086908590610896565b905060006001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610619575081610638565b610638857350fda034c0ce7a8f7efdaebda7aa7ca21cc1267e856108d6565b60006106438561051c565b60a089015160c08a0151604051637153a8af60e11b81529293507350fda034c0ce7a8f7efdaebda7aa7ca21cc1267e9263e2a7515e928692610691928c928c928c928c92919060040161119b565b6020604051808303818588803b1580156106aa57600080fd5b505af11580156106be573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106e39190610fd2565b5060006106ef8661051c565b90506106fb8183610a1e565b9750878411156107265760405162461bcd60e51b815260040161071d90611229565b60405180910390fd5b50505050505050919050565b81156107ab5760408051631878f25160e21b815260048101849052602481018390529051738a5419cfc711b2343c17a6abf4b2bafabb06957f916361e3c94491604480830192600092919082900301818387803b15801561079257600080fd5b505af11580156107a6573d6000803e3d6000fd5b505050505b5050565b6000808260200151905060008360400151905060008460600151905060006107dd8385848960a00151610896565b905060006001600160a01b03851673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee141561080d57508161082c565b61082c857350fda034c0ce7a8f7efdaebda7aa7ca21cc1267e856108d6565b60006108378561051c565b90507350fda034c0ce7a8f7efdaebda7aa7ca21cc1267e6001600160a01b031663c78513968361086a8b60000151610a2a565b87878d60c001518e60e001516040518763ffffffff1660e01b8152600401610691959493929190611124565b60008060006108a58787610ac8565b9150915060006108b58287610bf8565b90506108ca836108c58784610c0a565b610c3f565b98975050505050505050565b826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561092d57600080fd5b505af192505050801561093e575060015b610a19576040805163095ea7b360e01b81526001600160a01b03848116600483015260006024830181905292519086169263095ea7b3926044808201939182900301818387803b15801561099157600080fd5b505af11580156109a5573d6000803e3d6000fd5b50505050826001600160a01b031663095ea7b383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610a0057600080fd5b505af1158015610a14573d6000803e3d6000fd5b505050505b505050565b60006105158383610c50565b60606000825167ffffffffffffffff81118015610a4657600080fd5b50604051908082528060200260200182016040528015610a70578160200160208202803683370190505b50905060005b8351811015610abf57838181518110610a8b57fe5b6020026020010151828281518110610a9f57fe5b6001600160a01b0390921660209283029190910190910152600101610a76565b5090505b919050565b6000806001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610b5957836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2857600080fd5b505afa158015610b3c573d6000803e3d6000fd5b505050506040513d6020811015610b5257600080fd5b5051610b5c565b60125b91506001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610bec57826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610bbb57600080fd5b505afa158015610bcf573d6000803e3d6000fd5b505050506040513d6020811015610be557600080fd5b5051610bef565b60125b90509250929050565b60006105158284601203600a0a610cad565b6000670de0b6b3a7640000610c30610c228585610cb5565b6706f05b59d3b20000610d0e565b81610c3757fe5b049392505050565b600082601203600a0a8281610c3757fe5b600082821115610ca7576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600061051583835b600082610cc4575060006105bb565b82820282848281610cd157fe5b04146105155760405162461bcd60e51b81526004018080602001828103825260218152602001806112d46021913960400191505060405180910390fd5b600082820183811015610515576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160608152602001600081525090565b6040518061010001604052806060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160608152602001606081525090565b80356001600160a01b0381168114610ac357600080fd5b60008083601f840112610e36578182fd5b50813567ffffffffffffffff811115610e4d578182fd5b6020830191508360208083028501011115610e6757600080fd5b9250929050565b600060208284031215610e7f578081fd5b61051582610e0e565b60008060008060008060008060006101008a8c031215610ea6578485fd5b610eaf8a610e0e565b9850610ebd60208b01610e0e565b975060408a0135965060608a0135955060808a013567ffffffffffffffff811115610ee6578586fd5b610ef28c828d01610e25565b9a9d999c50979a9699979860a08801359760c0810135975060e0013595509350505050565b60008060008060008060008060008060e08b8d031215610f35578081fd5b8a3567ffffffffffffffff80821115610f4c578283fd5b610f588e838f01610e25565b909c509a5060208d0135995060408d0135985060608d0135915080821115610f7e578283fd5b610f8a8e838f01610e25565b909850965060808d0135915080821115610fa2578283fd5b50610faf8d828e01610e25565b9b9e9a9d50989b979a969995989760a08101359660c09091013595509350505050565b600060208284031215610fe3578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561101957815187529582019590820190600101610ffd565b509495945050505050565b60008151808452815b818110156110495760208185018101518683018201520161102d565b8181111561105a5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03968716815294909516602085015260408401929092526060830152608082015260a081019190915260c00190565b60e080825281018890526000896101008301825b8b8110156110e7576001600160a01b036110d284610e0e565b168252602092830192909101906001016110b9565b506001600160a01b03998a166020850152979098166040830152506060810194909452608084019290925260a083015260c0909101529392505050565b60a0808252865190820181905260009060209060c0840190828a01845b828110156111665781516001600160a01b031684529284019290840190600101611141565b505050878285015286604085015283810360608501526111868187610fea565b91505082810360808401526108ca8185610fea565b6001600160a01b03878116825286166020820152604081018590526060810184905260c0608082018190526000906111d590830185610fea565b90508260a0830152979650505050505050565b6000602082526105156020830184611024565b60006040825261120e6040830185611024565b82810360208401526112208185611024565b95945050505050565b602080825260119082015270546f6f206d75636820736c69707061676560781b60408201526060019056fe4c6f6753656c6c28616464726573732c616464726573732c75696e743235362c75696e743235362c75696e743235362c75696e74323536294c6f6753656c6c4d756c746928616464726573735b5d2c616464726573732c616464726573732c75696e743235362c75696e743235362c75696e743235362c75696e7432353629536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122028c4e57ba07ec05d272a5167d2f34e4d9161055ae63e7aca3f30cdeb6e3c86c664736f6c63430007060033";

type ConnectV2OneProtoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectV2OneProtoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectV2OneProto__factory extends ContractFactory {
  constructor(...args: ConnectV2OneProtoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectV2OneProto> {
    return super.deploy(overrides || {}) as Promise<ConnectV2OneProto>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectV2OneProto {
    return super.attach(address) as ConnectV2OneProto;
  }
  connect(signer: Signer): ConnectV2OneProto__factory {
    return super.connect(signer) as ConnectV2OneProto__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectV2OneProtoInterface {
    return new utils.Interface(_abi) as ConnectV2OneProtoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectV2OneProto {
    return new Contract(address, _abi, signerOrProvider) as ConnectV2OneProto;
  }
}
