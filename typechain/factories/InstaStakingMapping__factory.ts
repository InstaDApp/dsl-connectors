/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  InstaStakingMapping,
  InstaStakingMappingInterface,
} from "../InstaStakingMapping";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "stakingName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "stakingType",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stakingAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "LogAddStakingMapping",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "stakingName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "stakingType",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stakingAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "LogRemoveStakingMapping",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stakingName",
        type: "string",
      },
      {
        internalType: "address",
        name: "stakingAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "addStakingMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "instaIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stakingName",
        type: "string",
      },
      {
        internalType: "address",
        name: "stakingAddress",
        type: "address",
      },
    ],
    name: "removeStakingMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "stakingMapping",
    outputs: [
      {
        internalType: "address",
        name: "stakingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160005534801561001557600080fd5b50611666806100256000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a07d8bf81161005b578063a07d8bf8146100dc578063a41098bf1461010e578063e7ed30451461012c578063fa64d7b9146101485761007d565b806306fdde031461008257806354fd4d50146100a057806365050a68146100be575b600080fd5b61008a610164565b60405161009791906112c4565b60405180910390f35b6100a861019d565b6040516100b59190611480565b60405180910390f35b6100c66101a3565b6040516100d39190611257565b60405180910390f35b6100f660048036038101906100f19190610e6a565b6101bb565b6040516101059392919061128d565b60405180910390f35b610116610245565b6040516101239190611257565b60405180910390f35b61014660048036038101906101419190610ee7565b61025d565b005b610162600480360381019061015d9190610e93565b61091f565b005b6040518060400160405280601281526020017f5374616b696e672d4d617070696e672d7631000000000000000000000000000081525081565b60005481565b73d6a602c01a023b98ecfb29df02fba380d3b21e0c81565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b732971adfa57b20e5a416ae5a708a8655a9c74f72381565b73d6a602c01a023b98ecfb29df02fba380d3b21e0c73ffffffffffffffffffffffffffffffffffffffff16636b1056ae336040518263ffffffff1660e01b81526004016102aa9190611272565b60206040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fa9190610e41565b806103c157503373ffffffffffffffffffffffffffffffffffffffff16732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff1663ee97f7f36040518163ffffffff1660e01b815260040160206040518083038186803b15801561037157600080fd5b505afa158015610385573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a99190610e18565b73ffffffffffffffffffffffffffffffffffffffff16145b610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f7906113c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610470576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906113a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790611460565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054790611420565b60405180910390fd5b602084511115610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c906113e0565b60405180910390fd5b60006105a085610d1e565b9050600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610647576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063e90611380565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e390611340565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890611360565b60405180910390fd5b60405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507fe750b8bf287fa048454b853286ca02034589f103ca551ed43f23a888fa0e90ec85828686866040516109109594939291906112e6565b60405180910390a15050505050565b73d6a602c01a023b98ecfb29df02fba380d3b21e0c73ffffffffffffffffffffffffffffffffffffffff16636b1056ae336040518263ffffffff1660e01b815260040161096c9190611272565b60206040518083038186803b15801561098457600080fd5b505afa158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190610e41565b80610a8357503373ffffffffffffffffffffffffffffffffffffffff16732971adfa57b20e5a416ae5a708a8655a9c74f72373ffffffffffffffffffffffffffffffffffffffff1663ee97f7f36040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3357600080fd5b505afa158015610a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6b9190610e18565b73ffffffffffffffffffffffffffffffffffffffff16145b610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab9906113c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b29906113a0565b60405180910390fd5b6000610b3d83610d1e565b90508173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610be3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bda90611440565b60405180910390fd5b7fadea5338bd17864da95bb78a0b1fdba912090dfd6769e4674675d0d5fd32e3828382846001600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610c869594939291906112e6565b60405180910390a160016000828152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050505050565b60008082511415610d64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5b90611400565b60405180910390fd5b60208201519050919050565b600081359050610d7f816115eb565b92915050565b600081519050610d94816115eb565b92915050565b600081519050610da981611602565b92915050565b600081359050610dbe81611619565b92915050565b600082601f830112610dd557600080fd5b8135610de8610de3826114c8565b61149b565b91508082526020830160208301858383011115610e0457600080fd5b610e0f838284611598565b50505092915050565b600060208284031215610e2a57600080fd5b6000610e3884828501610d85565b91505092915050565b600060208284031215610e5357600080fd5b6000610e6184828501610d9a565b91505092915050565b600060208284031215610e7c57600080fd5b6000610e8a84828501610daf565b91505092915050565b60008060408385031215610ea657600080fd5b600083013567ffffffffffffffff811115610ec057600080fd5b610ecc85828601610dc4565b9250506020610edd85828601610d70565b9150509250929050565b60008060008060808587031215610efd57600080fd5b600085013567ffffffffffffffff811115610f1757600080fd5b610f2387828801610dc4565b9450506020610f3487828801610d70565b9350506040610f4587828801610d70565b9250506060610f5687828801610d70565b91505092959194509250565b610f6b81611562565b82525050565b610f7a81611510565b82525050565b610f898161152e565b82525050565b6000610f9a826114f4565b610fa481856114ff565b9350610fb48185602086016115a7565b610fbd816115da565b840191505092915050565b6000610fd5601a836114ff565b91507f5374616b696e67546f6b656e2d616c72656164792d61646465640000000000006000830152602082019050919050565b60006110156019836114ff565b91507f726577617264546f6b656e2d616c72656164792d6164646564000000000000006000830152602082019050919050565b60006110556019836114ff565b91507f5374616b696e67506f6f6c2d616c72656164792d6164646564000000000000006000830152602082019050919050565b60006110956018836114ff565b91507f7374616b696e67416464726573732d6e6f742d7661696c6400000000000000006000830152602082019050919050565b60006110d56009836114ff565b91507f6e6f742d436869656600000000000000000000000000000000000000000000006000830152602082019050919050565b6000611115600e836114ff565b91507f4c656e6774682d657863656564730000000000000000000000000000000000006000830152602082019050919050565b6000611155600c836114ff565b91507f537472696e672d456d70747900000000000000000000000000000000000000006000830152602082019050919050565b60006111956015836114ff565b91507f726577617264546f6b656e2d6e6f742d7661696c6400000000000000000000006000830152602082019050919050565b60006111d56016836114ff565b91507f646966666572656e742d7374616b696e672d706f6f6c000000000000000000006000830152602082019050919050565b60006112156016836114ff565b91507f7374616b696e67546f6b656e2d6e6f742d7661696c64000000000000000000006000830152602082019050919050565b61125181611558565b82525050565b600060208201905061126c6000830184610f71565b92915050565b60006020820190506112876000830184610f62565b92915050565b60006060820190506112a26000830186610f71565b6112af6020830185610f71565b6112bc6040830184610f71565b949350505050565b600060208201905081810360008301526112de8184610f8f565b905092915050565b600060a08201905081810360008301526113008188610f8f565b905061130f6020830187610f80565b61131c6040830186610f71565b6113296060830185610f71565b6113366080830184610f71565b9695505050505050565b6000602082019050818103600083015261135981610fc8565b9050919050565b6000602082019050818103600083015261137981611008565b9050919050565b6000602082019050818103600083015261139981611048565b9050919050565b600060208201905081810360008301526113b981611088565b9050919050565b600060208201905081810360008301526113d9816110c8565b9050919050565b600060208201905081810360008301526113f981611108565b9050919050565b6000602082019050818103600083015261141981611148565b9050919050565b6000602082019050818103600083015261143981611188565b9050919050565b60006020820190508181036000830152611459816111c8565b9050919050565b6000602082019050818103600083015261147981611208565b9050919050565b60006020820190506114956000830184611248565b92915050565b6000604051905081810181811067ffffffffffffffff821117156114be57600080fd5b8060405250919050565b600067ffffffffffffffff8211156114df57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061151b82611538565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061156d82611574565b9050919050565b600061157f82611586565b9050919050565b600061159182611538565b9050919050565b82818337600083830152505050565b60005b838110156115c55780820151818401526020810190506115aa565b838111156115d4576000848401525b50505050565b6000601f19601f8301169050919050565b6115f481611510565b81146115ff57600080fd5b50565b61160b81611522565b811461161657600080fd5b50565b6116228161152e565b811461162d57600080fd5b5056fea26469706673582212203a7aa0a10fdafe3bd118eb896d90171a7d285af8407e3d67c3d8a87d322b33c064736f6c63430006050033";

type InstaStakingMappingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InstaStakingMappingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InstaStakingMapping__factory extends ContractFactory {
  constructor(...args: InstaStakingMappingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InstaStakingMapping> {
    return super.deploy(overrides || {}) as Promise<InstaStakingMapping>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InstaStakingMapping {
    return super.attach(address) as InstaStakingMapping;
  }
  connect(signer: Signer): InstaStakingMapping__factory {
    return super.connect(signer) as InstaStakingMapping__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InstaStakingMappingInterface {
    return new utils.Interface(_abi) as InstaStakingMappingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InstaStakingMapping {
    return new Contract(address, _abi, signerOrProvider) as InstaStakingMapping;
  }
}
