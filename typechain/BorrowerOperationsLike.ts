/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface BorrowerOperationsLikeInterface extends utils.Interface {
  functions: {
    "addColl(address,address)": FunctionFragment;
    "adjustTrove(uint256,uint256,uint256,bool,address,address)": FunctionFragment;
    "claimCollateral()": FunctionFragment;
    "closeTrove()": FunctionFragment;
    "openTrove(uint256,uint256,address,address)": FunctionFragment;
    "repayLUSD(uint256,address,address)": FunctionFragment;
    "withdrawColl(uint256,address,address)": FunctionFragment;
    "withdrawLUSD(uint256,uint256,address,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addColl",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "adjustTrove",
    values: [BigNumberish, BigNumberish, BigNumberish, boolean, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "claimCollateral",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "closeTrove",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "openTrove",
    values: [BigNumberish, BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "repayLUSD",
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawColl",
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawLUSD",
    values: [BigNumberish, BigNumberish, string, string]
  ): string;

  decodeFunctionResult(functionFragment: "addColl", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "adjustTrove",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "closeTrove", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "openTrove", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "repayLUSD", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawColl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawLUSD",
    data: BytesLike
  ): Result;

  events: {};
}

export interface BorrowerOperationsLike extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BorrowerOperationsLikeInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addColl(
      _upperHint: string,
      _lowerHint: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    adjustTrove(
      _maxFee: BigNumberish,
      _collWithdrawal: BigNumberish,
      _debtChange: BigNumberish,
      isDebtIncrease: boolean,
      _upperHint: string,
      _lowerHint: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    claimCollateral(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    closeTrove(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    openTrove(
      _maxFee: BigNumberish,
      _LUSDAmount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    repayLUSD(
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawColl(
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawLUSD(
      _maxFee: BigNumberish,
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addColl(
    _upperHint: string,
    _lowerHint: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  adjustTrove(
    _maxFee: BigNumberish,
    _collWithdrawal: BigNumberish,
    _debtChange: BigNumberish,
    isDebtIncrease: boolean,
    _upperHint: string,
    _lowerHint: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  claimCollateral(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  closeTrove(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  openTrove(
    _maxFee: BigNumberish,
    _LUSDAmount: BigNumberish,
    _upperHint: string,
    _lowerHint: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  repayLUSD(
    _amount: BigNumberish,
    _upperHint: string,
    _lowerHint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawColl(
    _amount: BigNumberish,
    _upperHint: string,
    _lowerHint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawLUSD(
    _maxFee: BigNumberish,
    _amount: BigNumberish,
    _upperHint: string,
    _lowerHint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addColl(
      _upperHint: string,
      _lowerHint: string,
      overrides?: CallOverrides
    ): Promise<void>;

    adjustTrove(
      _maxFee: BigNumberish,
      _collWithdrawal: BigNumberish,
      _debtChange: BigNumberish,
      isDebtIncrease: boolean,
      _upperHint: string,
      _lowerHint: string,
      overrides?: CallOverrides
    ): Promise<void>;

    claimCollateral(overrides?: CallOverrides): Promise<void>;

    closeTrove(overrides?: CallOverrides): Promise<void>;

    openTrove(
      _maxFee: BigNumberish,
      _LUSDAmount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: CallOverrides
    ): Promise<void>;

    repayLUSD(
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawColl(
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawLUSD(
      _maxFee: BigNumberish,
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addColl(
      _upperHint: string,
      _lowerHint: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    adjustTrove(
      _maxFee: BigNumberish,
      _collWithdrawal: BigNumberish,
      _debtChange: BigNumberish,
      isDebtIncrease: boolean,
      _upperHint: string,
      _lowerHint: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    claimCollateral(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    closeTrove(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    openTrove(
      _maxFee: BigNumberish,
      _LUSDAmount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    repayLUSD(
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawColl(
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawLUSD(
      _maxFee: BigNumberish,
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addColl(
      _upperHint: string,
      _lowerHint: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    adjustTrove(
      _maxFee: BigNumberish,
      _collWithdrawal: BigNumberish,
      _debtChange: BigNumberish,
      isDebtIncrease: boolean,
      _upperHint: string,
      _lowerHint: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    claimCollateral(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    closeTrove(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    openTrove(
      _maxFee: BigNumberish,
      _LUSDAmount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    repayLUSD(
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawColl(
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawLUSD(
      _maxFee: BigNumberish,
      _amount: BigNumberish,
      _upperHint: string,
      _lowerHint: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
